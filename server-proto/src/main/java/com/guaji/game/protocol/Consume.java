// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Consume.proto

package com.guaji.game.protocol;

public final class Consume {
  private Consume() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface SyncAttrInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 gold = 1;
    /**
     * <code>optional int32 gold = 1;</code>
     *
     * <pre>
     * 钻石
     * </pre>
     */
    boolean hasGold();
    /**
     * <code>optional int32 gold = 1;</code>
     *
     * <pre>
     * 钻石
     * </pre>
     */
    int getGold();

    // optional int64 coin = 2;
    /**
     * <code>optional int64 coin = 2;</code>
     *
     * <pre>
     * 金币
     * </pre>
     */
    boolean hasCoin();
    /**
     * <code>optional int64 coin = 2;</code>
     *
     * <pre>
     * 金币
     * </pre>
     */
    long getCoin();

    // optional int32 level = 3;
    /**
     * <code>optional int32 level = 3;</code>
     *
     * <pre>
     * 主卡等级
     * </pre>
     */
    boolean hasLevel();
    /**
     * <code>optional int32 level = 3;</code>
     *
     * <pre>
     * 主卡等级
     * </pre>
     */
    int getLevel();

    // optional int32 exp = 4;
    /**
     * <code>optional int32 exp = 4;</code>
     *
     * <pre>
     * 主卡经验
     * </pre>
     */
    boolean hasExp();
    /**
     * <code>optional int32 exp = 4;</code>
     *
     * <pre>
     * 主卡经验
     * </pre>
     */
    int getExp();

    // optional int32 vipLevel = 5;
    /**
     * <code>optional int32 vipLevel = 5;</code>
     *
     * <pre>
     * vip等级
     * </pre>
     */
    boolean hasVipLevel();
    /**
     * <code>optional int32 vipLevel = 5;</code>
     *
     * <pre>
     * vip等级
     * </pre>
     */
    int getVipLevel();

    // optional int32 smeltValue = 6;
    /**
     * <code>optional int32 smeltValue = 6;</code>
     *
     * <pre>
     * 熔炼值
     * </pre>
     */
    boolean hasSmeltValue();
    /**
     * <code>optional int32 smeltValue = 6;</code>
     *
     * <pre>
     * 熔炼值
     * </pre>
     */
    int getSmeltValue();

    // optional int32 contribution = 7;
    /**
     * <code>optional int32 contribution = 7;</code>
     *
     * <pre>
     * 公会贡献值
     * </pre>
     */
    boolean hasContribution();
    /**
     * <code>optional int32 contribution = 7;</code>
     *
     * <pre>
     * 公会贡献值
     * </pre>
     */
    int getContribution();

    // optional int32 honorValue = 8;
    /**
     * <code>optional int32 honorValue = 8;</code>
     *
     * <pre>
     * 荣誉值
     * </pre>
     */
    boolean hasHonorValue();
    /**
     * <code>optional int32 honorValue = 8;</code>
     *
     * <pre>
     * 荣誉值
     * </pre>
     */
    int getHonorValue();

    // optional int32 reputationValue = 9;
    /**
     * <code>optional int32 reputationValue = 9;</code>
     *
     * <pre>
     * 声望值
     * </pre>
     */
    boolean hasReputationValue();
    /**
     * <code>optional int32 reputationValue = 9;</code>
     *
     * <pre>
     * 声望值
     * </pre>
     */
    int getReputationValue();

    // optional int32 crossCoin = 10;
    /**
     * <code>optional int32 crossCoin = 10;</code>
     *
     * <pre>
     * 跨服获取的货币
     * </pre>
     */
    boolean hasCrossCoin();
    /**
     * <code>optional int32 crossCoin = 10;</code>
     *
     * <pre>
     * 跨服获取的货币
     * </pre>
     */
    int getCrossCoin();

    // optional int32 crystalValue = 20;
    /**
     * <code>optional int32 crystalValue = 20;</code>
     *
     * <pre>
     *水晶
     * </pre>
     */
    boolean hasCrystalValue();
    /**
     * <code>optional int32 crystalValue = 20;</code>
     *
     * <pre>
     *水晶
     * </pre>
     */
    int getCrystalValue();

    // optional int32 friendship = 21;
    /**
     * <code>optional int32 friendship = 21;</code>
     *
     * <pre>
     *友情值
     * </pre>
     */
    boolean hasFriendship();
    /**
     * <code>optional int32 friendship = 21;</code>
     *
     * <pre>
     *友情值
     * </pre>
     */
    int getFriendship();
  }
  /**
   * Protobuf type {@code SyncAttrInfo}
   */
  public static final class SyncAttrInfo extends
      com.google.protobuf.GeneratedMessage
      implements SyncAttrInfoOrBuilder {
    // Use SyncAttrInfo.newBuilder() to construct.
    private SyncAttrInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SyncAttrInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SyncAttrInfo defaultInstance;
    public static SyncAttrInfo getDefaultInstance() {
      return defaultInstance;
    }

    public SyncAttrInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SyncAttrInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              gold_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              coin_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              level_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              exp_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              vipLevel_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              smeltValue_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              contribution_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              honorValue_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              reputationValue_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              crossCoin_ = input.readInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00000400;
              crystalValue_ = input.readInt32();
              break;
            }
            case 168: {
              bitField0_ |= 0x00000800;
              friendship_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.guaji.game.protocol.Consume.internal_static_SyncAttrInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.guaji.game.protocol.Consume.internal_static_SyncAttrInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.guaji.game.protocol.Consume.SyncAttrInfo.class, com.guaji.game.protocol.Consume.SyncAttrInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<SyncAttrInfo> PARSER =
        new com.google.protobuf.AbstractParser<SyncAttrInfo>() {
      public SyncAttrInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SyncAttrInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SyncAttrInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 gold = 1;
    public static final int GOLD_FIELD_NUMBER = 1;
    private int gold_;
    /**
     * <code>optional int32 gold = 1;</code>
     *
     * <pre>
     * 钻石
     * </pre>
     */
    public boolean hasGold() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 gold = 1;</code>
     *
     * <pre>
     * 钻石
     * </pre>
     */
    public int getGold() {
      return gold_;
    }

    // optional int64 coin = 2;
    public static final int COIN_FIELD_NUMBER = 2;
    private long coin_;
    /**
     * <code>optional int64 coin = 2;</code>
     *
     * <pre>
     * 金币
     * </pre>
     */
    public boolean hasCoin() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 coin = 2;</code>
     *
     * <pre>
     * 金币
     * </pre>
     */
    public long getCoin() {
      return coin_;
    }

    // optional int32 level = 3;
    public static final int LEVEL_FIELD_NUMBER = 3;
    private int level_;
    /**
     * <code>optional int32 level = 3;</code>
     *
     * <pre>
     * 主卡等级
     * </pre>
     */
    public boolean hasLevel() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 level = 3;</code>
     *
     * <pre>
     * 主卡等级
     * </pre>
     */
    public int getLevel() {
      return level_;
    }

    // optional int32 exp = 4;
    public static final int EXP_FIELD_NUMBER = 4;
    private int exp_;
    /**
     * <code>optional int32 exp = 4;</code>
     *
     * <pre>
     * 主卡经验
     * </pre>
     */
    public boolean hasExp() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 exp = 4;</code>
     *
     * <pre>
     * 主卡经验
     * </pre>
     */
    public int getExp() {
      return exp_;
    }

    // optional int32 vipLevel = 5;
    public static final int VIPLEVEL_FIELD_NUMBER = 5;
    private int vipLevel_;
    /**
     * <code>optional int32 vipLevel = 5;</code>
     *
     * <pre>
     * vip等级
     * </pre>
     */
    public boolean hasVipLevel() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 vipLevel = 5;</code>
     *
     * <pre>
     * vip等级
     * </pre>
     */
    public int getVipLevel() {
      return vipLevel_;
    }

    // optional int32 smeltValue = 6;
    public static final int SMELTVALUE_FIELD_NUMBER = 6;
    private int smeltValue_;
    /**
     * <code>optional int32 smeltValue = 6;</code>
     *
     * <pre>
     * 熔炼值
     * </pre>
     */
    public boolean hasSmeltValue() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 smeltValue = 6;</code>
     *
     * <pre>
     * 熔炼值
     * </pre>
     */
    public int getSmeltValue() {
      return smeltValue_;
    }

    // optional int32 contribution = 7;
    public static final int CONTRIBUTION_FIELD_NUMBER = 7;
    private int contribution_;
    /**
     * <code>optional int32 contribution = 7;</code>
     *
     * <pre>
     * 公会贡献值
     * </pre>
     */
    public boolean hasContribution() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 contribution = 7;</code>
     *
     * <pre>
     * 公会贡献值
     * </pre>
     */
    public int getContribution() {
      return contribution_;
    }

    // optional int32 honorValue = 8;
    public static final int HONORVALUE_FIELD_NUMBER = 8;
    private int honorValue_;
    /**
     * <code>optional int32 honorValue = 8;</code>
     *
     * <pre>
     * 荣誉值
     * </pre>
     */
    public boolean hasHonorValue() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 honorValue = 8;</code>
     *
     * <pre>
     * 荣誉值
     * </pre>
     */
    public int getHonorValue() {
      return honorValue_;
    }

    // optional int32 reputationValue = 9;
    public static final int REPUTATIONVALUE_FIELD_NUMBER = 9;
    private int reputationValue_;
    /**
     * <code>optional int32 reputationValue = 9;</code>
     *
     * <pre>
     * 声望值
     * </pre>
     */
    public boolean hasReputationValue() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 reputationValue = 9;</code>
     *
     * <pre>
     * 声望值
     * </pre>
     */
    public int getReputationValue() {
      return reputationValue_;
    }

    // optional int32 crossCoin = 10;
    public static final int CROSSCOIN_FIELD_NUMBER = 10;
    private int crossCoin_;
    /**
     * <code>optional int32 crossCoin = 10;</code>
     *
     * <pre>
     * 跨服获取的货币
     * </pre>
     */
    public boolean hasCrossCoin() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 crossCoin = 10;</code>
     *
     * <pre>
     * 跨服获取的货币
     * </pre>
     */
    public int getCrossCoin() {
      return crossCoin_;
    }

    // optional int32 crystalValue = 20;
    public static final int CRYSTALVALUE_FIELD_NUMBER = 20;
    private int crystalValue_;
    /**
     * <code>optional int32 crystalValue = 20;</code>
     *
     * <pre>
     *水晶
     * </pre>
     */
    public boolean hasCrystalValue() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 crystalValue = 20;</code>
     *
     * <pre>
     *水晶
     * </pre>
     */
    public int getCrystalValue() {
      return crystalValue_;
    }

    // optional int32 friendship = 21;
    public static final int FRIENDSHIP_FIELD_NUMBER = 21;
    private int friendship_;
    /**
     * <code>optional int32 friendship = 21;</code>
     *
     * <pre>
     *友情值
     * </pre>
     */
    public boolean hasFriendship() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 friendship = 21;</code>
     *
     * <pre>
     *友情值
     * </pre>
     */
    public int getFriendship() {
      return friendship_;
    }

    private void initFields() {
      gold_ = 0;
      coin_ = 0L;
      level_ = 0;
      exp_ = 0;
      vipLevel_ = 0;
      smeltValue_ = 0;
      contribution_ = 0;
      honorValue_ = 0;
      reputationValue_ = 0;
      crossCoin_ = 0;
      crystalValue_ = 0;
      friendship_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, gold_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, coin_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, level_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, exp_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, vipLevel_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, smeltValue_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, contribution_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, honorValue_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, reputationValue_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, crossCoin_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(20, crystalValue_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(21, friendship_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, gold_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, coin_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, level_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, exp_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, vipLevel_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, smeltValue_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, contribution_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, honorValue_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, reputationValue_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, crossCoin_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, crystalValue_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(21, friendship_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.guaji.game.protocol.Consume.SyncAttrInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.guaji.game.protocol.Consume.SyncAttrInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.guaji.game.protocol.Consume.SyncAttrInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.guaji.game.protocol.Consume.SyncAttrInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.guaji.game.protocol.Consume.SyncAttrInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.guaji.game.protocol.Consume.SyncAttrInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.guaji.game.protocol.Consume.SyncAttrInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.guaji.game.protocol.Consume.SyncAttrInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.guaji.game.protocol.Consume.SyncAttrInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.guaji.game.protocol.Consume.SyncAttrInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.guaji.game.protocol.Consume.SyncAttrInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SyncAttrInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.guaji.game.protocol.Consume.SyncAttrInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.guaji.game.protocol.Consume.internal_static_SyncAttrInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.guaji.game.protocol.Consume.internal_static_SyncAttrInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.guaji.game.protocol.Consume.SyncAttrInfo.class, com.guaji.game.protocol.Consume.SyncAttrInfo.Builder.class);
      }

      // Construct using com.guaji.game.protocol.Consume.SyncAttrInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        gold_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        coin_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        level_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        exp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        vipLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        smeltValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        contribution_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        honorValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        reputationValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        crossCoin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        crystalValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        friendship_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.guaji.game.protocol.Consume.internal_static_SyncAttrInfo_descriptor;
      }

      public com.guaji.game.protocol.Consume.SyncAttrInfo getDefaultInstanceForType() {
        return com.guaji.game.protocol.Consume.SyncAttrInfo.getDefaultInstance();
      }

      public com.guaji.game.protocol.Consume.SyncAttrInfo build() {
        com.guaji.game.protocol.Consume.SyncAttrInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.guaji.game.protocol.Consume.SyncAttrInfo buildPartial() {
        com.guaji.game.protocol.Consume.SyncAttrInfo result = new com.guaji.game.protocol.Consume.SyncAttrInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.gold_ = gold_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.coin_ = coin_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.level_ = level_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.exp_ = exp_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.vipLevel_ = vipLevel_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.smeltValue_ = smeltValue_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.contribution_ = contribution_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.honorValue_ = honorValue_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.reputationValue_ = reputationValue_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.crossCoin_ = crossCoin_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.crystalValue_ = crystalValue_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.friendship_ = friendship_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.guaji.game.protocol.Consume.SyncAttrInfo) {
          return mergeFrom((com.guaji.game.protocol.Consume.SyncAttrInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.guaji.game.protocol.Consume.SyncAttrInfo other) {
        if (other == com.guaji.game.protocol.Consume.SyncAttrInfo.getDefaultInstance()) return this;
        if (other.hasGold()) {
          setGold(other.getGold());
        }
        if (other.hasCoin()) {
          setCoin(other.getCoin());
        }
        if (other.hasLevel()) {
          setLevel(other.getLevel());
        }
        if (other.hasExp()) {
          setExp(other.getExp());
        }
        if (other.hasVipLevel()) {
          setVipLevel(other.getVipLevel());
        }
        if (other.hasSmeltValue()) {
          setSmeltValue(other.getSmeltValue());
        }
        if (other.hasContribution()) {
          setContribution(other.getContribution());
        }
        if (other.hasHonorValue()) {
          setHonorValue(other.getHonorValue());
        }
        if (other.hasReputationValue()) {
          setReputationValue(other.getReputationValue());
        }
        if (other.hasCrossCoin()) {
          setCrossCoin(other.getCrossCoin());
        }
        if (other.hasCrystalValue()) {
          setCrystalValue(other.getCrystalValue());
        }
        if (other.hasFriendship()) {
          setFriendship(other.getFriendship());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.guaji.game.protocol.Consume.SyncAttrInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.guaji.game.protocol.Consume.SyncAttrInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 gold = 1;
      private int gold_ ;
      /**
       * <code>optional int32 gold = 1;</code>
       *
       * <pre>
       * 钻石
       * </pre>
       */
      public boolean hasGold() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 gold = 1;</code>
       *
       * <pre>
       * 钻石
       * </pre>
       */
      public int getGold() {
        return gold_;
      }
      /**
       * <code>optional int32 gold = 1;</code>
       *
       * <pre>
       * 钻石
       * </pre>
       */
      public Builder setGold(int value) {
        bitField0_ |= 0x00000001;
        gold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gold = 1;</code>
       *
       * <pre>
       * 钻石
       * </pre>
       */
      public Builder clearGold() {
        bitField0_ = (bitField0_ & ~0x00000001);
        gold_ = 0;
        onChanged();
        return this;
      }

      // optional int64 coin = 2;
      private long coin_ ;
      /**
       * <code>optional int64 coin = 2;</code>
       *
       * <pre>
       * 金币
       * </pre>
       */
      public boolean hasCoin() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 coin = 2;</code>
       *
       * <pre>
       * 金币
       * </pre>
       */
      public long getCoin() {
        return coin_;
      }
      /**
       * <code>optional int64 coin = 2;</code>
       *
       * <pre>
       * 金币
       * </pre>
       */
      public Builder setCoin(long value) {
        bitField0_ |= 0x00000002;
        coin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 coin = 2;</code>
       *
       * <pre>
       * 金币
       * </pre>
       */
      public Builder clearCoin() {
        bitField0_ = (bitField0_ & ~0x00000002);
        coin_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 level = 3;
      private int level_ ;
      /**
       * <code>optional int32 level = 3;</code>
       *
       * <pre>
       * 主卡等级
       * </pre>
       */
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 level = 3;</code>
       *
       * <pre>
       * 主卡等级
       * </pre>
       */
      public int getLevel() {
        return level_;
      }
      /**
       * <code>optional int32 level = 3;</code>
       *
       * <pre>
       * 主卡等级
       * </pre>
       */
      public Builder setLevel(int value) {
        bitField0_ |= 0x00000004;
        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 level = 3;</code>
       *
       * <pre>
       * 主卡等级
       * </pre>
       */
      public Builder clearLevel() {
        bitField0_ = (bitField0_ & ~0x00000004);
        level_ = 0;
        onChanged();
        return this;
      }

      // optional int32 exp = 4;
      private int exp_ ;
      /**
       * <code>optional int32 exp = 4;</code>
       *
       * <pre>
       * 主卡经验
       * </pre>
       */
      public boolean hasExp() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 exp = 4;</code>
       *
       * <pre>
       * 主卡经验
       * </pre>
       */
      public int getExp() {
        return exp_;
      }
      /**
       * <code>optional int32 exp = 4;</code>
       *
       * <pre>
       * 主卡经验
       * </pre>
       */
      public Builder setExp(int value) {
        bitField0_ |= 0x00000008;
        exp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 exp = 4;</code>
       *
       * <pre>
       * 主卡经验
       * </pre>
       */
      public Builder clearExp() {
        bitField0_ = (bitField0_ & ~0x00000008);
        exp_ = 0;
        onChanged();
        return this;
      }

      // optional int32 vipLevel = 5;
      private int vipLevel_ ;
      /**
       * <code>optional int32 vipLevel = 5;</code>
       *
       * <pre>
       * vip等级
       * </pre>
       */
      public boolean hasVipLevel() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 vipLevel = 5;</code>
       *
       * <pre>
       * vip等级
       * </pre>
       */
      public int getVipLevel() {
        return vipLevel_;
      }
      /**
       * <code>optional int32 vipLevel = 5;</code>
       *
       * <pre>
       * vip等级
       * </pre>
       */
      public Builder setVipLevel(int value) {
        bitField0_ |= 0x00000010;
        vipLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 vipLevel = 5;</code>
       *
       * <pre>
       * vip等级
       * </pre>
       */
      public Builder clearVipLevel() {
        bitField0_ = (bitField0_ & ~0x00000010);
        vipLevel_ = 0;
        onChanged();
        return this;
      }

      // optional int32 smeltValue = 6;
      private int smeltValue_ ;
      /**
       * <code>optional int32 smeltValue = 6;</code>
       *
       * <pre>
       * 熔炼值
       * </pre>
       */
      public boolean hasSmeltValue() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 smeltValue = 6;</code>
       *
       * <pre>
       * 熔炼值
       * </pre>
       */
      public int getSmeltValue() {
        return smeltValue_;
      }
      /**
       * <code>optional int32 smeltValue = 6;</code>
       *
       * <pre>
       * 熔炼值
       * </pre>
       */
      public Builder setSmeltValue(int value) {
        bitField0_ |= 0x00000020;
        smeltValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 smeltValue = 6;</code>
       *
       * <pre>
       * 熔炼值
       * </pre>
       */
      public Builder clearSmeltValue() {
        bitField0_ = (bitField0_ & ~0x00000020);
        smeltValue_ = 0;
        onChanged();
        return this;
      }

      // optional int32 contribution = 7;
      private int contribution_ ;
      /**
       * <code>optional int32 contribution = 7;</code>
       *
       * <pre>
       * 公会贡献值
       * </pre>
       */
      public boolean hasContribution() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 contribution = 7;</code>
       *
       * <pre>
       * 公会贡献值
       * </pre>
       */
      public int getContribution() {
        return contribution_;
      }
      /**
       * <code>optional int32 contribution = 7;</code>
       *
       * <pre>
       * 公会贡献值
       * </pre>
       */
      public Builder setContribution(int value) {
        bitField0_ |= 0x00000040;
        contribution_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 contribution = 7;</code>
       *
       * <pre>
       * 公会贡献值
       * </pre>
       */
      public Builder clearContribution() {
        bitField0_ = (bitField0_ & ~0x00000040);
        contribution_ = 0;
        onChanged();
        return this;
      }

      // optional int32 honorValue = 8;
      private int honorValue_ ;
      /**
       * <code>optional int32 honorValue = 8;</code>
       *
       * <pre>
       * 荣誉值
       * </pre>
       */
      public boolean hasHonorValue() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 honorValue = 8;</code>
       *
       * <pre>
       * 荣誉值
       * </pre>
       */
      public int getHonorValue() {
        return honorValue_;
      }
      /**
       * <code>optional int32 honorValue = 8;</code>
       *
       * <pre>
       * 荣誉值
       * </pre>
       */
      public Builder setHonorValue(int value) {
        bitField0_ |= 0x00000080;
        honorValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 honorValue = 8;</code>
       *
       * <pre>
       * 荣誉值
       * </pre>
       */
      public Builder clearHonorValue() {
        bitField0_ = (bitField0_ & ~0x00000080);
        honorValue_ = 0;
        onChanged();
        return this;
      }

      // optional int32 reputationValue = 9;
      private int reputationValue_ ;
      /**
       * <code>optional int32 reputationValue = 9;</code>
       *
       * <pre>
       * 声望值
       * </pre>
       */
      public boolean hasReputationValue() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 reputationValue = 9;</code>
       *
       * <pre>
       * 声望值
       * </pre>
       */
      public int getReputationValue() {
        return reputationValue_;
      }
      /**
       * <code>optional int32 reputationValue = 9;</code>
       *
       * <pre>
       * 声望值
       * </pre>
       */
      public Builder setReputationValue(int value) {
        bitField0_ |= 0x00000100;
        reputationValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 reputationValue = 9;</code>
       *
       * <pre>
       * 声望值
       * </pre>
       */
      public Builder clearReputationValue() {
        bitField0_ = (bitField0_ & ~0x00000100);
        reputationValue_ = 0;
        onChanged();
        return this;
      }

      // optional int32 crossCoin = 10;
      private int crossCoin_ ;
      /**
       * <code>optional int32 crossCoin = 10;</code>
       *
       * <pre>
       * 跨服获取的货币
       * </pre>
       */
      public boolean hasCrossCoin() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 crossCoin = 10;</code>
       *
       * <pre>
       * 跨服获取的货币
       * </pre>
       */
      public int getCrossCoin() {
        return crossCoin_;
      }
      /**
       * <code>optional int32 crossCoin = 10;</code>
       *
       * <pre>
       * 跨服获取的货币
       * </pre>
       */
      public Builder setCrossCoin(int value) {
        bitField0_ |= 0x00000200;
        crossCoin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 crossCoin = 10;</code>
       *
       * <pre>
       * 跨服获取的货币
       * </pre>
       */
      public Builder clearCrossCoin() {
        bitField0_ = (bitField0_ & ~0x00000200);
        crossCoin_ = 0;
        onChanged();
        return this;
      }

      // optional int32 crystalValue = 20;
      private int crystalValue_ ;
      /**
       * <code>optional int32 crystalValue = 20;</code>
       *
       * <pre>
       *水晶
       * </pre>
       */
      public boolean hasCrystalValue() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 crystalValue = 20;</code>
       *
       * <pre>
       *水晶
       * </pre>
       */
      public int getCrystalValue() {
        return crystalValue_;
      }
      /**
       * <code>optional int32 crystalValue = 20;</code>
       *
       * <pre>
       *水晶
       * </pre>
       */
      public Builder setCrystalValue(int value) {
        bitField0_ |= 0x00000400;
        crystalValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 crystalValue = 20;</code>
       *
       * <pre>
       *水晶
       * </pre>
       */
      public Builder clearCrystalValue() {
        bitField0_ = (bitField0_ & ~0x00000400);
        crystalValue_ = 0;
        onChanged();
        return this;
      }

      // optional int32 friendship = 21;
      private int friendship_ ;
      /**
       * <code>optional int32 friendship = 21;</code>
       *
       * <pre>
       *友情值
       * </pre>
       */
      public boolean hasFriendship() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 friendship = 21;</code>
       *
       * <pre>
       *友情值
       * </pre>
       */
      public int getFriendship() {
        return friendship_;
      }
      /**
       * <code>optional int32 friendship = 21;</code>
       *
       * <pre>
       *友情值
       * </pre>
       */
      public Builder setFriendship(int value) {
        bitField0_ |= 0x00000800;
        friendship_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 friendship = 21;</code>
       *
       * <pre>
       *友情值
       * </pre>
       */
      public Builder clearFriendship() {
        bitField0_ = (bitField0_ & ~0x00000800);
        friendship_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SyncAttrInfo)
    }

    static {
      defaultInstance = new SyncAttrInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:SyncAttrInfo)
  }

  public interface ConsumeItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 type = 1;
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     * 类型  @see Const.changeType
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     * 类型  @see Const.changeType
     * </pre>
     */
    int getType();

    // required int64 id = 2;
    /**
     * <code>required int64 id = 2;</code>
     *
     * <pre>
     * 唯一Id
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required int64 id = 2;</code>
     *
     * <pre>
     * 唯一Id
     * </pre>
     */
    long getId();

    // required int32 itemId = 3;
    /**
     * <code>required int32 itemId = 3;</code>
     *
     * <pre>
     * 物品编号
     * </pre>
     */
    boolean hasItemId();
    /**
     * <code>required int32 itemId = 3;</code>
     *
     * <pre>
     * 物品编号
     * </pre>
     */
    int getItemId();

    // optional int64 count = 4;
    /**
     * <code>optional int64 count = 4;</code>
     *
     * <pre>
     * 实体对象直接移除对象
     * </pre>
     */
    boolean hasCount();
    /**
     * <code>optional int64 count = 4;</code>
     *
     * <pre>
     * 实体对象直接移除对象
     * </pre>
     */
    long getCount();
  }
  /**
   * Protobuf type {@code ConsumeItem}
   *
   * <pre>
   * 推送道具 装备 角色的需要移除的Id的列表
   * </pre>
   */
  public static final class ConsumeItem extends
      com.google.protobuf.GeneratedMessage
      implements ConsumeItemOrBuilder {
    // Use ConsumeItem.newBuilder() to construct.
    private ConsumeItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ConsumeItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ConsumeItem defaultInstance;
    public static ConsumeItem getDefaultInstance() {
      return defaultInstance;
    }

    public ConsumeItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ConsumeItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              type_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              id_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              itemId_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              count_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.guaji.game.protocol.Consume.internal_static_ConsumeItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.guaji.game.protocol.Consume.internal_static_ConsumeItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.guaji.game.protocol.Consume.ConsumeItem.class, com.guaji.game.protocol.Consume.ConsumeItem.Builder.class);
    }

    public static com.google.protobuf.Parser<ConsumeItem> PARSER =
        new com.google.protobuf.AbstractParser<ConsumeItem>() {
      public ConsumeItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ConsumeItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ConsumeItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     * 类型  @see Const.changeType
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     * 类型  @see Const.changeType
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // required int64 id = 2;
    public static final int ID_FIELD_NUMBER = 2;
    private long id_;
    /**
     * <code>required int64 id = 2;</code>
     *
     * <pre>
     * 唯一Id
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 id = 2;</code>
     *
     * <pre>
     * 唯一Id
     * </pre>
     */
    public long getId() {
      return id_;
    }

    // required int32 itemId = 3;
    public static final int ITEMID_FIELD_NUMBER = 3;
    private int itemId_;
    /**
     * <code>required int32 itemId = 3;</code>
     *
     * <pre>
     * 物品编号
     * </pre>
     */
    public boolean hasItemId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 itemId = 3;</code>
     *
     * <pre>
     * 物品编号
     * </pre>
     */
    public int getItemId() {
      return itemId_;
    }

    // optional int64 count = 4;
    public static final int COUNT_FIELD_NUMBER = 4;
    private long count_;
    /**
     * <code>optional int64 count = 4;</code>
     *
     * <pre>
     * 实体对象直接移除对象
     * </pre>
     */
    public boolean hasCount() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 count = 4;</code>
     *
     * <pre>
     * 实体对象直接移除对象
     * </pre>
     */
    public long getCount() {
      return count_;
    }

    private void initFields() {
      type_ = 0;
      id_ = 0L;
      itemId_ = 0;
      count_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasItemId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, itemId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, count_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, itemId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, count_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.guaji.game.protocol.Consume.ConsumeItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.guaji.game.protocol.Consume.ConsumeItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.guaji.game.protocol.Consume.ConsumeItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.guaji.game.protocol.Consume.ConsumeItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.guaji.game.protocol.Consume.ConsumeItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.guaji.game.protocol.Consume.ConsumeItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.guaji.game.protocol.Consume.ConsumeItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.guaji.game.protocol.Consume.ConsumeItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.guaji.game.protocol.Consume.ConsumeItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.guaji.game.protocol.Consume.ConsumeItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.guaji.game.protocol.Consume.ConsumeItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ConsumeItem}
     *
     * <pre>
     * 推送道具 装备 角色的需要移除的Id的列表
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.guaji.game.protocol.Consume.ConsumeItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.guaji.game.protocol.Consume.internal_static_ConsumeItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.guaji.game.protocol.Consume.internal_static_ConsumeItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.guaji.game.protocol.Consume.ConsumeItem.class, com.guaji.game.protocol.Consume.ConsumeItem.Builder.class);
      }

      // Construct using com.guaji.game.protocol.Consume.ConsumeItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        itemId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        count_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.guaji.game.protocol.Consume.internal_static_ConsumeItem_descriptor;
      }

      public com.guaji.game.protocol.Consume.ConsumeItem getDefaultInstanceForType() {
        return com.guaji.game.protocol.Consume.ConsumeItem.getDefaultInstance();
      }

      public com.guaji.game.protocol.Consume.ConsumeItem build() {
        com.guaji.game.protocol.Consume.ConsumeItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.guaji.game.protocol.Consume.ConsumeItem buildPartial() {
        com.guaji.game.protocol.Consume.ConsumeItem result = new com.guaji.game.protocol.Consume.ConsumeItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.itemId_ = itemId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.count_ = count_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.guaji.game.protocol.Consume.ConsumeItem) {
          return mergeFrom((com.guaji.game.protocol.Consume.ConsumeItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.guaji.game.protocol.Consume.ConsumeItem other) {
        if (other == com.guaji.game.protocol.Consume.ConsumeItem.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasItemId()) {
          setItemId(other.getItemId());
        }
        if (other.hasCount()) {
          setCount(other.getCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (!hasId()) {
          
          return false;
        }
        if (!hasItemId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.guaji.game.protocol.Consume.ConsumeItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.guaji.game.protocol.Consume.ConsumeItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 type = 1;
      private int type_ ;
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       * 类型  @see Const.changeType
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       * 类型  @see Const.changeType
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       * 类型  @see Const.changeType
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       * 类型  @see Const.changeType
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        onChanged();
        return this;
      }

      // required int64 id = 2;
      private long id_ ;
      /**
       * <code>required int64 id = 2;</code>
       *
       * <pre>
       * 唯一Id
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 id = 2;</code>
       *
       * <pre>
       * 唯一Id
       * </pre>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>required int64 id = 2;</code>
       *
       * <pre>
       * 唯一Id
       * </pre>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000002;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 id = 2;</code>
       *
       * <pre>
       * 唯一Id
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        id_ = 0L;
        onChanged();
        return this;
      }

      // required int32 itemId = 3;
      private int itemId_ ;
      /**
       * <code>required int32 itemId = 3;</code>
       *
       * <pre>
       * 物品编号
       * </pre>
       */
      public boolean hasItemId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 itemId = 3;</code>
       *
       * <pre>
       * 物品编号
       * </pre>
       */
      public int getItemId() {
        return itemId_;
      }
      /**
       * <code>required int32 itemId = 3;</code>
       *
       * <pre>
       * 物品编号
       * </pre>
       */
      public Builder setItemId(int value) {
        bitField0_ |= 0x00000004;
        itemId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 itemId = 3;</code>
       *
       * <pre>
       * 物品编号
       * </pre>
       */
      public Builder clearItemId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        itemId_ = 0;
        onChanged();
        return this;
      }

      // optional int64 count = 4;
      private long count_ ;
      /**
       * <code>optional int64 count = 4;</code>
       *
       * <pre>
       * 实体对象直接移除对象
       * </pre>
       */
      public boolean hasCount() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 count = 4;</code>
       *
       * <pre>
       * 实体对象直接移除对象
       * </pre>
       */
      public long getCount() {
        return count_;
      }
      /**
       * <code>optional int64 count = 4;</code>
       *
       * <pre>
       * 实体对象直接移除对象
       * </pre>
       */
      public Builder setCount(long value) {
        bitField0_ |= 0x00000008;
        count_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 count = 4;</code>
       *
       * <pre>
       * 实体对象直接移除对象
       * </pre>
       */
      public Builder clearCount() {
        bitField0_ = (bitField0_ & ~0x00000008);
        count_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ConsumeItem)
    }

    static {
      defaultInstance = new ConsumeItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ConsumeItem)
  }

  public interface HPConsumeInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .SyncAttrInfo attrInfo = 1;
    /**
     * <code>optional .SyncAttrInfo attrInfo = 1;</code>
     *
     * <pre>
     * 玩家基本信息
     * </pre>
     */
    boolean hasAttrInfo();
    /**
     * <code>optional .SyncAttrInfo attrInfo = 1;</code>
     *
     * <pre>
     * 玩家基本信息
     * </pre>
     */
    com.guaji.game.protocol.Consume.SyncAttrInfo getAttrInfo();
    /**
     * <code>optional .SyncAttrInfo attrInfo = 1;</code>
     *
     * <pre>
     * 玩家基本信息
     * </pre>
     */
    com.guaji.game.protocol.Consume.SyncAttrInfoOrBuilder getAttrInfoOrBuilder();

    // repeated .ConsumeItem consumeItem = 2;
    /**
     * <code>repeated .ConsumeItem consumeItem = 2;</code>
     *
     * <pre>
     * 实体对象移除的推送 
     * </pre>
     */
    java.util.List<com.guaji.game.protocol.Consume.ConsumeItem> 
        getConsumeItemList();
    /**
     * <code>repeated .ConsumeItem consumeItem = 2;</code>
     *
     * <pre>
     * 实体对象移除的推送 
     * </pre>
     */
    com.guaji.game.protocol.Consume.ConsumeItem getConsumeItem(int index);
    /**
     * <code>repeated .ConsumeItem consumeItem = 2;</code>
     *
     * <pre>
     * 实体对象移除的推送 
     * </pre>
     */
    int getConsumeItemCount();
    /**
     * <code>repeated .ConsumeItem consumeItem = 2;</code>
     *
     * <pre>
     * 实体对象移除的推送 
     * </pre>
     */
    java.util.List<? extends com.guaji.game.protocol.Consume.ConsumeItemOrBuilder> 
        getConsumeItemOrBuilderList();
    /**
     * <code>repeated .ConsumeItem consumeItem = 2;</code>
     *
     * <pre>
     * 实体对象移除的推送 
     * </pre>
     */
    com.guaji.game.protocol.Consume.ConsumeItemOrBuilder getConsumeItemOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code HPConsumeInfo}
   *
   * <pre>
   * 经常发生变动的值主动推送给前端
   * </pre>
   */
  public static final class HPConsumeInfo extends
      com.google.protobuf.GeneratedMessage
      implements HPConsumeInfoOrBuilder {
    // Use HPConsumeInfo.newBuilder() to construct.
    private HPConsumeInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HPConsumeInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HPConsumeInfo defaultInstance;
    public static HPConsumeInfo getDefaultInstance() {
      return defaultInstance;
    }

    public HPConsumeInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HPConsumeInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.guaji.game.protocol.Consume.SyncAttrInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = attrInfo_.toBuilder();
              }
              attrInfo_ = input.readMessage(com.guaji.game.protocol.Consume.SyncAttrInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(attrInfo_);
                attrInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                consumeItem_ = new java.util.ArrayList<com.guaji.game.protocol.Consume.ConsumeItem>();
                mutable_bitField0_ |= 0x00000002;
              }
              consumeItem_.add(input.readMessage(com.guaji.game.protocol.Consume.ConsumeItem.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          consumeItem_ = java.util.Collections.unmodifiableList(consumeItem_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.guaji.game.protocol.Consume.internal_static_HPConsumeInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.guaji.game.protocol.Consume.internal_static_HPConsumeInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.guaji.game.protocol.Consume.HPConsumeInfo.class, com.guaji.game.protocol.Consume.HPConsumeInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<HPConsumeInfo> PARSER =
        new com.google.protobuf.AbstractParser<HPConsumeInfo>() {
      public HPConsumeInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HPConsumeInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HPConsumeInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .SyncAttrInfo attrInfo = 1;
    public static final int ATTRINFO_FIELD_NUMBER = 1;
    private com.guaji.game.protocol.Consume.SyncAttrInfo attrInfo_;
    /**
     * <code>optional .SyncAttrInfo attrInfo = 1;</code>
     *
     * <pre>
     * 玩家基本信息
     * </pre>
     */
    public boolean hasAttrInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .SyncAttrInfo attrInfo = 1;</code>
     *
     * <pre>
     * 玩家基本信息
     * </pre>
     */
    public com.guaji.game.protocol.Consume.SyncAttrInfo getAttrInfo() {
      return attrInfo_;
    }
    /**
     * <code>optional .SyncAttrInfo attrInfo = 1;</code>
     *
     * <pre>
     * 玩家基本信息
     * </pre>
     */
    public com.guaji.game.protocol.Consume.SyncAttrInfoOrBuilder getAttrInfoOrBuilder() {
      return attrInfo_;
    }

    // repeated .ConsumeItem consumeItem = 2;
    public static final int CONSUMEITEM_FIELD_NUMBER = 2;
    private java.util.List<com.guaji.game.protocol.Consume.ConsumeItem> consumeItem_;
    /**
     * <code>repeated .ConsumeItem consumeItem = 2;</code>
     *
     * <pre>
     * 实体对象移除的推送 
     * </pre>
     */
    public java.util.List<com.guaji.game.protocol.Consume.ConsumeItem> getConsumeItemList() {
      return consumeItem_;
    }
    /**
     * <code>repeated .ConsumeItem consumeItem = 2;</code>
     *
     * <pre>
     * 实体对象移除的推送 
     * </pre>
     */
    public java.util.List<? extends com.guaji.game.protocol.Consume.ConsumeItemOrBuilder> 
        getConsumeItemOrBuilderList() {
      return consumeItem_;
    }
    /**
     * <code>repeated .ConsumeItem consumeItem = 2;</code>
     *
     * <pre>
     * 实体对象移除的推送 
     * </pre>
     */
    public int getConsumeItemCount() {
      return consumeItem_.size();
    }
    /**
     * <code>repeated .ConsumeItem consumeItem = 2;</code>
     *
     * <pre>
     * 实体对象移除的推送 
     * </pre>
     */
    public com.guaji.game.protocol.Consume.ConsumeItem getConsumeItem(int index) {
      return consumeItem_.get(index);
    }
    /**
     * <code>repeated .ConsumeItem consumeItem = 2;</code>
     *
     * <pre>
     * 实体对象移除的推送 
     * </pre>
     */
    public com.guaji.game.protocol.Consume.ConsumeItemOrBuilder getConsumeItemOrBuilder(
        int index) {
      return consumeItem_.get(index);
    }

    private void initFields() {
      attrInfo_ = com.guaji.game.protocol.Consume.SyncAttrInfo.getDefaultInstance();
      consumeItem_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getConsumeItemCount(); i++) {
        if (!getConsumeItem(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, attrInfo_);
      }
      for (int i = 0; i < consumeItem_.size(); i++) {
        output.writeMessage(2, consumeItem_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, attrInfo_);
      }
      for (int i = 0; i < consumeItem_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, consumeItem_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.guaji.game.protocol.Consume.HPConsumeInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.guaji.game.protocol.Consume.HPConsumeInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.guaji.game.protocol.Consume.HPConsumeInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.guaji.game.protocol.Consume.HPConsumeInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.guaji.game.protocol.Consume.HPConsumeInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.guaji.game.protocol.Consume.HPConsumeInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.guaji.game.protocol.Consume.HPConsumeInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.guaji.game.protocol.Consume.HPConsumeInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.guaji.game.protocol.Consume.HPConsumeInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.guaji.game.protocol.Consume.HPConsumeInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.guaji.game.protocol.Consume.HPConsumeInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code HPConsumeInfo}
     *
     * <pre>
     * 经常发生变动的值主动推送给前端
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.guaji.game.protocol.Consume.HPConsumeInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.guaji.game.protocol.Consume.internal_static_HPConsumeInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.guaji.game.protocol.Consume.internal_static_HPConsumeInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.guaji.game.protocol.Consume.HPConsumeInfo.class, com.guaji.game.protocol.Consume.HPConsumeInfo.Builder.class);
      }

      // Construct using com.guaji.game.protocol.Consume.HPConsumeInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAttrInfoFieldBuilder();
          getConsumeItemFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (attrInfoBuilder_ == null) {
          attrInfo_ = com.guaji.game.protocol.Consume.SyncAttrInfo.getDefaultInstance();
        } else {
          attrInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (consumeItemBuilder_ == null) {
          consumeItem_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          consumeItemBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.guaji.game.protocol.Consume.internal_static_HPConsumeInfo_descriptor;
      }

      public com.guaji.game.protocol.Consume.HPConsumeInfo getDefaultInstanceForType() {
        return com.guaji.game.protocol.Consume.HPConsumeInfo.getDefaultInstance();
      }

      public com.guaji.game.protocol.Consume.HPConsumeInfo build() {
        com.guaji.game.protocol.Consume.HPConsumeInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.guaji.game.protocol.Consume.HPConsumeInfo buildPartial() {
        com.guaji.game.protocol.Consume.HPConsumeInfo result = new com.guaji.game.protocol.Consume.HPConsumeInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (attrInfoBuilder_ == null) {
          result.attrInfo_ = attrInfo_;
        } else {
          result.attrInfo_ = attrInfoBuilder_.build();
        }
        if (consumeItemBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            consumeItem_ = java.util.Collections.unmodifiableList(consumeItem_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.consumeItem_ = consumeItem_;
        } else {
          result.consumeItem_ = consumeItemBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.guaji.game.protocol.Consume.HPConsumeInfo) {
          return mergeFrom((com.guaji.game.protocol.Consume.HPConsumeInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.guaji.game.protocol.Consume.HPConsumeInfo other) {
        if (other == com.guaji.game.protocol.Consume.HPConsumeInfo.getDefaultInstance()) return this;
        if (other.hasAttrInfo()) {
          mergeAttrInfo(other.getAttrInfo());
        }
        if (consumeItemBuilder_ == null) {
          if (!other.consumeItem_.isEmpty()) {
            if (consumeItem_.isEmpty()) {
              consumeItem_ = other.consumeItem_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureConsumeItemIsMutable();
              consumeItem_.addAll(other.consumeItem_);
            }
            onChanged();
          }
        } else {
          if (!other.consumeItem_.isEmpty()) {
            if (consumeItemBuilder_.isEmpty()) {
              consumeItemBuilder_.dispose();
              consumeItemBuilder_ = null;
              consumeItem_ = other.consumeItem_;
              bitField0_ = (bitField0_ & ~0x00000002);
              consumeItemBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getConsumeItemFieldBuilder() : null;
            } else {
              consumeItemBuilder_.addAllMessages(other.consumeItem_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getConsumeItemCount(); i++) {
          if (!getConsumeItem(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.guaji.game.protocol.Consume.HPConsumeInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.guaji.game.protocol.Consume.HPConsumeInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .SyncAttrInfo attrInfo = 1;
      private com.guaji.game.protocol.Consume.SyncAttrInfo attrInfo_ = com.guaji.game.protocol.Consume.SyncAttrInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.guaji.game.protocol.Consume.SyncAttrInfo, com.guaji.game.protocol.Consume.SyncAttrInfo.Builder, com.guaji.game.protocol.Consume.SyncAttrInfoOrBuilder> attrInfoBuilder_;
      /**
       * <code>optional .SyncAttrInfo attrInfo = 1;</code>
       *
       * <pre>
       * 玩家基本信息
       * </pre>
       */
      public boolean hasAttrInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .SyncAttrInfo attrInfo = 1;</code>
       *
       * <pre>
       * 玩家基本信息
       * </pre>
       */
      public com.guaji.game.protocol.Consume.SyncAttrInfo getAttrInfo() {
        if (attrInfoBuilder_ == null) {
          return attrInfo_;
        } else {
          return attrInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .SyncAttrInfo attrInfo = 1;</code>
       *
       * <pre>
       * 玩家基本信息
       * </pre>
       */
      public Builder setAttrInfo(com.guaji.game.protocol.Consume.SyncAttrInfo value) {
        if (attrInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          attrInfo_ = value;
          onChanged();
        } else {
          attrInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .SyncAttrInfo attrInfo = 1;</code>
       *
       * <pre>
       * 玩家基本信息
       * </pre>
       */
      public Builder setAttrInfo(
          com.guaji.game.protocol.Consume.SyncAttrInfo.Builder builderForValue) {
        if (attrInfoBuilder_ == null) {
          attrInfo_ = builderForValue.build();
          onChanged();
        } else {
          attrInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .SyncAttrInfo attrInfo = 1;</code>
       *
       * <pre>
       * 玩家基本信息
       * </pre>
       */
      public Builder mergeAttrInfo(com.guaji.game.protocol.Consume.SyncAttrInfo value) {
        if (attrInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              attrInfo_ != com.guaji.game.protocol.Consume.SyncAttrInfo.getDefaultInstance()) {
            attrInfo_ =
              com.guaji.game.protocol.Consume.SyncAttrInfo.newBuilder(attrInfo_).mergeFrom(value).buildPartial();
          } else {
            attrInfo_ = value;
          }
          onChanged();
        } else {
          attrInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .SyncAttrInfo attrInfo = 1;</code>
       *
       * <pre>
       * 玩家基本信息
       * </pre>
       */
      public Builder clearAttrInfo() {
        if (attrInfoBuilder_ == null) {
          attrInfo_ = com.guaji.game.protocol.Consume.SyncAttrInfo.getDefaultInstance();
          onChanged();
        } else {
          attrInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .SyncAttrInfo attrInfo = 1;</code>
       *
       * <pre>
       * 玩家基本信息
       * </pre>
       */
      public com.guaji.game.protocol.Consume.SyncAttrInfo.Builder getAttrInfoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getAttrInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SyncAttrInfo attrInfo = 1;</code>
       *
       * <pre>
       * 玩家基本信息
       * </pre>
       */
      public com.guaji.game.protocol.Consume.SyncAttrInfoOrBuilder getAttrInfoOrBuilder() {
        if (attrInfoBuilder_ != null) {
          return attrInfoBuilder_.getMessageOrBuilder();
        } else {
          return attrInfo_;
        }
      }
      /**
       * <code>optional .SyncAttrInfo attrInfo = 1;</code>
       *
       * <pre>
       * 玩家基本信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.guaji.game.protocol.Consume.SyncAttrInfo, com.guaji.game.protocol.Consume.SyncAttrInfo.Builder, com.guaji.game.protocol.Consume.SyncAttrInfoOrBuilder> 
          getAttrInfoFieldBuilder() {
        if (attrInfoBuilder_ == null) {
          attrInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.guaji.game.protocol.Consume.SyncAttrInfo, com.guaji.game.protocol.Consume.SyncAttrInfo.Builder, com.guaji.game.protocol.Consume.SyncAttrInfoOrBuilder>(
                  attrInfo_,
                  getParentForChildren(),
                  isClean());
          attrInfo_ = null;
        }
        return attrInfoBuilder_;
      }

      // repeated .ConsumeItem consumeItem = 2;
      private java.util.List<com.guaji.game.protocol.Consume.ConsumeItem> consumeItem_ =
        java.util.Collections.emptyList();
      private void ensureConsumeItemIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          consumeItem_ = new java.util.ArrayList<com.guaji.game.protocol.Consume.ConsumeItem>(consumeItem_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.guaji.game.protocol.Consume.ConsumeItem, com.guaji.game.protocol.Consume.ConsumeItem.Builder, com.guaji.game.protocol.Consume.ConsumeItemOrBuilder> consumeItemBuilder_;

      /**
       * <code>repeated .ConsumeItem consumeItem = 2;</code>
       *
       * <pre>
       * 实体对象移除的推送 
       * </pre>
       */
      public java.util.List<com.guaji.game.protocol.Consume.ConsumeItem> getConsumeItemList() {
        if (consumeItemBuilder_ == null) {
          return java.util.Collections.unmodifiableList(consumeItem_);
        } else {
          return consumeItemBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ConsumeItem consumeItem = 2;</code>
       *
       * <pre>
       * 实体对象移除的推送 
       * </pre>
       */
      public int getConsumeItemCount() {
        if (consumeItemBuilder_ == null) {
          return consumeItem_.size();
        } else {
          return consumeItemBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ConsumeItem consumeItem = 2;</code>
       *
       * <pre>
       * 实体对象移除的推送 
       * </pre>
       */
      public com.guaji.game.protocol.Consume.ConsumeItem getConsumeItem(int index) {
        if (consumeItemBuilder_ == null) {
          return consumeItem_.get(index);
        } else {
          return consumeItemBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ConsumeItem consumeItem = 2;</code>
       *
       * <pre>
       * 实体对象移除的推送 
       * </pre>
       */
      public Builder setConsumeItem(
          int index, com.guaji.game.protocol.Consume.ConsumeItem value) {
        if (consumeItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConsumeItemIsMutable();
          consumeItem_.set(index, value);
          onChanged();
        } else {
          consumeItemBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ConsumeItem consumeItem = 2;</code>
       *
       * <pre>
       * 实体对象移除的推送 
       * </pre>
       */
      public Builder setConsumeItem(
          int index, com.guaji.game.protocol.Consume.ConsumeItem.Builder builderForValue) {
        if (consumeItemBuilder_ == null) {
          ensureConsumeItemIsMutable();
          consumeItem_.set(index, builderForValue.build());
          onChanged();
        } else {
          consumeItemBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ConsumeItem consumeItem = 2;</code>
       *
       * <pre>
       * 实体对象移除的推送 
       * </pre>
       */
      public Builder addConsumeItem(com.guaji.game.protocol.Consume.ConsumeItem value) {
        if (consumeItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConsumeItemIsMutable();
          consumeItem_.add(value);
          onChanged();
        } else {
          consumeItemBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ConsumeItem consumeItem = 2;</code>
       *
       * <pre>
       * 实体对象移除的推送 
       * </pre>
       */
      public Builder addConsumeItem(
          int index, com.guaji.game.protocol.Consume.ConsumeItem value) {
        if (consumeItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConsumeItemIsMutable();
          consumeItem_.add(index, value);
          onChanged();
        } else {
          consumeItemBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ConsumeItem consumeItem = 2;</code>
       *
       * <pre>
       * 实体对象移除的推送 
       * </pre>
       */
      public Builder addConsumeItem(
          com.guaji.game.protocol.Consume.ConsumeItem.Builder builderForValue) {
        if (consumeItemBuilder_ == null) {
          ensureConsumeItemIsMutable();
          consumeItem_.add(builderForValue.build());
          onChanged();
        } else {
          consumeItemBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ConsumeItem consumeItem = 2;</code>
       *
       * <pre>
       * 实体对象移除的推送 
       * </pre>
       */
      public Builder addConsumeItem(
          int index, com.guaji.game.protocol.Consume.ConsumeItem.Builder builderForValue) {
        if (consumeItemBuilder_ == null) {
          ensureConsumeItemIsMutable();
          consumeItem_.add(index, builderForValue.build());
          onChanged();
        } else {
          consumeItemBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ConsumeItem consumeItem = 2;</code>
       *
       * <pre>
       * 实体对象移除的推送 
       * </pre>
       */
      public Builder addAllConsumeItem(
          java.lang.Iterable<? extends com.guaji.game.protocol.Consume.ConsumeItem> values) {
        if (consumeItemBuilder_ == null) {
          ensureConsumeItemIsMutable();
          super.addAll(values, consumeItem_);
          onChanged();
        } else {
          consumeItemBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ConsumeItem consumeItem = 2;</code>
       *
       * <pre>
       * 实体对象移除的推送 
       * </pre>
       */
      public Builder clearConsumeItem() {
        if (consumeItemBuilder_ == null) {
          consumeItem_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          consumeItemBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ConsumeItem consumeItem = 2;</code>
       *
       * <pre>
       * 实体对象移除的推送 
       * </pre>
       */
      public Builder removeConsumeItem(int index) {
        if (consumeItemBuilder_ == null) {
          ensureConsumeItemIsMutable();
          consumeItem_.remove(index);
          onChanged();
        } else {
          consumeItemBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ConsumeItem consumeItem = 2;</code>
       *
       * <pre>
       * 实体对象移除的推送 
       * </pre>
       */
      public com.guaji.game.protocol.Consume.ConsumeItem.Builder getConsumeItemBuilder(
          int index) {
        return getConsumeItemFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ConsumeItem consumeItem = 2;</code>
       *
       * <pre>
       * 实体对象移除的推送 
       * </pre>
       */
      public com.guaji.game.protocol.Consume.ConsumeItemOrBuilder getConsumeItemOrBuilder(
          int index) {
        if (consumeItemBuilder_ == null) {
          return consumeItem_.get(index);  } else {
          return consumeItemBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ConsumeItem consumeItem = 2;</code>
       *
       * <pre>
       * 实体对象移除的推送 
       * </pre>
       */
      public java.util.List<? extends com.guaji.game.protocol.Consume.ConsumeItemOrBuilder> 
           getConsumeItemOrBuilderList() {
        if (consumeItemBuilder_ != null) {
          return consumeItemBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(consumeItem_);
        }
      }
      /**
       * <code>repeated .ConsumeItem consumeItem = 2;</code>
       *
       * <pre>
       * 实体对象移除的推送 
       * </pre>
       */
      public com.guaji.game.protocol.Consume.ConsumeItem.Builder addConsumeItemBuilder() {
        return getConsumeItemFieldBuilder().addBuilder(
            com.guaji.game.protocol.Consume.ConsumeItem.getDefaultInstance());
      }
      /**
       * <code>repeated .ConsumeItem consumeItem = 2;</code>
       *
       * <pre>
       * 实体对象移除的推送 
       * </pre>
       */
      public com.guaji.game.protocol.Consume.ConsumeItem.Builder addConsumeItemBuilder(
          int index) {
        return getConsumeItemFieldBuilder().addBuilder(
            index, com.guaji.game.protocol.Consume.ConsumeItem.getDefaultInstance());
      }
      /**
       * <code>repeated .ConsumeItem consumeItem = 2;</code>
       *
       * <pre>
       * 实体对象移除的推送 
       * </pre>
       */
      public java.util.List<com.guaji.game.protocol.Consume.ConsumeItem.Builder> 
           getConsumeItemBuilderList() {
        return getConsumeItemFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.guaji.game.protocol.Consume.ConsumeItem, com.guaji.game.protocol.Consume.ConsumeItem.Builder, com.guaji.game.protocol.Consume.ConsumeItemOrBuilder> 
          getConsumeItemFieldBuilder() {
        if (consumeItemBuilder_ == null) {
          consumeItemBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.guaji.game.protocol.Consume.ConsumeItem, com.guaji.game.protocol.Consume.ConsumeItem.Builder, com.guaji.game.protocol.Consume.ConsumeItemOrBuilder>(
                  consumeItem_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          consumeItem_ = null;
        }
        return consumeItemBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:HPConsumeInfo)
    }

    static {
      defaultInstance = new HPConsumeInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:HPConsumeInfo)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_SyncAttrInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SyncAttrInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ConsumeItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ConsumeItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_HPConsumeInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_HPConsumeInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rConsume.proto\"\354\001\n\014SyncAttrInfo\022\014\n\004gold" +
      "\030\001 \001(\005\022\014\n\004coin\030\002 \001(\003\022\r\n\005level\030\003 \001(\005\022\013\n\003e" +
      "xp\030\004 \001(\005\022\020\n\010vipLevel\030\005 \001(\005\022\022\n\nsmeltValue" +
      "\030\006 \001(\005\022\024\n\014contribution\030\007 \001(\005\022\022\n\nhonorVal" +
      "ue\030\010 \001(\005\022\027\n\017reputationValue\030\t \001(\005\022\021\n\tcro" +
      "ssCoin\030\n \001(\005\022\024\n\014crystalValue\030\024 \001(\005\022\022\n\nfr" +
      "iendship\030\025 \001(\005\"F\n\013ConsumeItem\022\014\n\004type\030\001 " +
      "\002(\005\022\n\n\002id\030\002 \002(\003\022\016\n\006itemId\030\003 \002(\005\022\r\n\005count" +
      "\030\004 \001(\003\"S\n\rHPConsumeInfo\022\037\n\010attrInfo\030\001 \001(" +
      "\0132\r.SyncAttrInfo\022!\n\013consumeItem\030\002 \003(\0132\014.",
      "ConsumeItemB\031\n\027com.guaji.game.protocol"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_SyncAttrInfo_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_SyncAttrInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_SyncAttrInfo_descriptor,
              new java.lang.String[] { "Gold", "Coin", "Level", "Exp", "VipLevel", "SmeltValue", "Contribution", "HonorValue", "ReputationValue", "CrossCoin", "CrystalValue", "Friendship", });
          internal_static_ConsumeItem_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_ConsumeItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ConsumeItem_descriptor,
              new java.lang.String[] { "Type", "Id", "ItemId", "Count", });
          internal_static_HPConsumeInfo_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_HPConsumeInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_HPConsumeInfo_descriptor,
              new java.lang.String[] { "AttrInfo", "ConsumeItem", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
