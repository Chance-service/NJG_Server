// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Sign.proto

package com.guaji.game.protocol;

public final class Sign {
  private Sign() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface SignRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 action = 1;
    /**
     * <code>required int32 action = 1;</code>
     *
     * <pre>
     *動作 0.同步資訊 1.查詢某標記狀態 2.某標記狀態改變 3.修改某標記狀態
     * </pre>
     */
    boolean hasAction();
    /**
     * <code>required int32 action = 1;</code>
     *
     * <pre>
     *動作 0.同步資訊 1.查詢某標記狀態 2.某標記狀態改變 3.修改某標記狀態
     * </pre>
     */
    int getAction();

    // optional int32 signId = 2;
    /**
     * <code>optional int32 signId = 2;</code>
     *
     * <pre>
     * 1.查詢某標記狀態(欲查標記ID) 2.某標記狀態改變(標記ID)3.修改某標記狀態(標記ID)
     * </pre>
     */
    boolean hasSignId();
    /**
     * <code>optional int32 signId = 2;</code>
     *
     * <pre>
     * 1.查詢某標記狀態(欲查標記ID) 2.某標記狀態改變(標記ID)3.修改某標記狀態(標記ID)
     * </pre>
     */
    int getSignId();

    // optional bool setVal = 3;
    /**
     * <code>optional bool setVal = 3;</code>
     *
     * <pre>
     * 3.修改某標記狀態(欲修改狀態 true.開啟 false關閉)
     * </pre>
     */
    boolean hasSetVal();
    /**
     * <code>optional bool setVal = 3;</code>
     *
     * <pre>
     * 3.修改某標記狀態(欲修改狀態 true.開啟 false關閉)
     * </pre>
     */
    boolean getSetVal();
  }
  /**
   * Protobuf type {@code SignRequest}
   */
  public static final class SignRequest extends
      com.google.protobuf.GeneratedMessage
      implements SignRequestOrBuilder {
    // Use SignRequest.newBuilder() to construct.
    private SignRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SignRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SignRequest defaultInstance;
    public static SignRequest getDefaultInstance() {
      return defaultInstance;
    }

    public SignRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SignRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              action_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              signId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              setVal_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.guaji.game.protocol.Sign.internal_static_SignRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.guaji.game.protocol.Sign.internal_static_SignRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.guaji.game.protocol.Sign.SignRequest.class, com.guaji.game.protocol.Sign.SignRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<SignRequest> PARSER =
        new com.google.protobuf.AbstractParser<SignRequest>() {
      public SignRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SignRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 action = 1;
    public static final int ACTION_FIELD_NUMBER = 1;
    private int action_;
    /**
     * <code>required int32 action = 1;</code>
     *
     * <pre>
     *動作 0.同步資訊 1.查詢某標記狀態 2.某標記狀態改變 3.修改某標記狀態
     * </pre>
     */
    public boolean hasAction() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 action = 1;</code>
     *
     * <pre>
     *動作 0.同步資訊 1.查詢某標記狀態 2.某標記狀態改變 3.修改某標記狀態
     * </pre>
     */
    public int getAction() {
      return action_;
    }

    // optional int32 signId = 2;
    public static final int SIGNID_FIELD_NUMBER = 2;
    private int signId_;
    /**
     * <code>optional int32 signId = 2;</code>
     *
     * <pre>
     * 1.查詢某標記狀態(欲查標記ID) 2.某標記狀態改變(標記ID)3.修改某標記狀態(標記ID)
     * </pre>
     */
    public boolean hasSignId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 signId = 2;</code>
     *
     * <pre>
     * 1.查詢某標記狀態(欲查標記ID) 2.某標記狀態改變(標記ID)3.修改某標記狀態(標記ID)
     * </pre>
     */
    public int getSignId() {
      return signId_;
    }

    // optional bool setVal = 3;
    public static final int SETVAL_FIELD_NUMBER = 3;
    private boolean setVal_;
    /**
     * <code>optional bool setVal = 3;</code>
     *
     * <pre>
     * 3.修改某標記狀態(欲修改狀態 true.開啟 false關閉)
     * </pre>
     */
    public boolean hasSetVal() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool setVal = 3;</code>
     *
     * <pre>
     * 3.修改某標記狀態(欲修改狀態 true.開啟 false關閉)
     * </pre>
     */
    public boolean getSetVal() {
      return setVal_;
    }

    private void initFields() {
      action_ = 0;
      signId_ = 0;
      setVal_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasAction()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, action_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, signId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, setVal_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, action_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, signId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, setVal_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.guaji.game.protocol.Sign.SignRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.guaji.game.protocol.Sign.SignRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.guaji.game.protocol.Sign.SignRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.guaji.game.protocol.Sign.SignRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.guaji.game.protocol.Sign.SignRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.guaji.game.protocol.Sign.SignRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.guaji.game.protocol.Sign.SignRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.guaji.game.protocol.Sign.SignRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.guaji.game.protocol.Sign.SignRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.guaji.game.protocol.Sign.SignRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.guaji.game.protocol.Sign.SignRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SignRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.guaji.game.protocol.Sign.SignRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.guaji.game.protocol.Sign.internal_static_SignRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.guaji.game.protocol.Sign.internal_static_SignRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.guaji.game.protocol.Sign.SignRequest.class, com.guaji.game.protocol.Sign.SignRequest.Builder.class);
      }

      // Construct using com.guaji.game.protocol.Sign.SignRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        action_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        signId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        setVal_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.guaji.game.protocol.Sign.internal_static_SignRequest_descriptor;
      }

      public com.guaji.game.protocol.Sign.SignRequest getDefaultInstanceForType() {
        return com.guaji.game.protocol.Sign.SignRequest.getDefaultInstance();
      }

      public com.guaji.game.protocol.Sign.SignRequest build() {
        com.guaji.game.protocol.Sign.SignRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.guaji.game.protocol.Sign.SignRequest buildPartial() {
        com.guaji.game.protocol.Sign.SignRequest result = new com.guaji.game.protocol.Sign.SignRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.action_ = action_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.signId_ = signId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.setVal_ = setVal_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.guaji.game.protocol.Sign.SignRequest) {
          return mergeFrom((com.guaji.game.protocol.Sign.SignRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.guaji.game.protocol.Sign.SignRequest other) {
        if (other == com.guaji.game.protocol.Sign.SignRequest.getDefaultInstance()) return this;
        if (other.hasAction()) {
          setAction(other.getAction());
        }
        if (other.hasSignId()) {
          setSignId(other.getSignId());
        }
        if (other.hasSetVal()) {
          setSetVal(other.getSetVal());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasAction()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.guaji.game.protocol.Sign.SignRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.guaji.game.protocol.Sign.SignRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 action = 1;
      private int action_ ;
      /**
       * <code>required int32 action = 1;</code>
       *
       * <pre>
       *動作 0.同步資訊 1.查詢某標記狀態 2.某標記狀態改變 3.修改某標記狀態
       * </pre>
       */
      public boolean hasAction() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 action = 1;</code>
       *
       * <pre>
       *動作 0.同步資訊 1.查詢某標記狀態 2.某標記狀態改變 3.修改某標記狀態
       * </pre>
       */
      public int getAction() {
        return action_;
      }
      /**
       * <code>required int32 action = 1;</code>
       *
       * <pre>
       *動作 0.同步資訊 1.查詢某標記狀態 2.某標記狀態改變 3.修改某標記狀態
       * </pre>
       */
      public Builder setAction(int value) {
        bitField0_ |= 0x00000001;
        action_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 action = 1;</code>
       *
       * <pre>
       *動作 0.同步資訊 1.查詢某標記狀態 2.某標記狀態改變 3.修改某標記狀態
       * </pre>
       */
      public Builder clearAction() {
        bitField0_ = (bitField0_ & ~0x00000001);
        action_ = 0;
        onChanged();
        return this;
      }

      // optional int32 signId = 2;
      private int signId_ ;
      /**
       * <code>optional int32 signId = 2;</code>
       *
       * <pre>
       * 1.查詢某標記狀態(欲查標記ID) 2.某標記狀態改變(標記ID)3.修改某標記狀態(標記ID)
       * </pre>
       */
      public boolean hasSignId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 signId = 2;</code>
       *
       * <pre>
       * 1.查詢某標記狀態(欲查標記ID) 2.某標記狀態改變(標記ID)3.修改某標記狀態(標記ID)
       * </pre>
       */
      public int getSignId() {
        return signId_;
      }
      /**
       * <code>optional int32 signId = 2;</code>
       *
       * <pre>
       * 1.查詢某標記狀態(欲查標記ID) 2.某標記狀態改變(標記ID)3.修改某標記狀態(標記ID)
       * </pre>
       */
      public Builder setSignId(int value) {
        bitField0_ |= 0x00000002;
        signId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 signId = 2;</code>
       *
       * <pre>
       * 1.查詢某標記狀態(欲查標記ID) 2.某標記狀態改變(標記ID)3.修改某標記狀態(標記ID)
       * </pre>
       */
      public Builder clearSignId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        signId_ = 0;
        onChanged();
        return this;
      }

      // optional bool setVal = 3;
      private boolean setVal_ ;
      /**
       * <code>optional bool setVal = 3;</code>
       *
       * <pre>
       * 3.修改某標記狀態(欲修改狀態 true.開啟 false關閉)
       * </pre>
       */
      public boolean hasSetVal() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool setVal = 3;</code>
       *
       * <pre>
       * 3.修改某標記狀態(欲修改狀態 true.開啟 false關閉)
       * </pre>
       */
      public boolean getSetVal() {
        return setVal_;
      }
      /**
       * <code>optional bool setVal = 3;</code>
       *
       * <pre>
       * 3.修改某標記狀態(欲修改狀態 true.開啟 false關閉)
       * </pre>
       */
      public Builder setSetVal(boolean value) {
        bitField0_ |= 0x00000004;
        setVal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool setVal = 3;</code>
       *
       * <pre>
       * 3.修改某標記狀態(欲修改狀態 true.開啟 false關閉)
       * </pre>
       */
      public Builder clearSetVal() {
        bitField0_ = (bitField0_ & ~0x00000004);
        setVal_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SignRequest)
    }

    static {
      defaultInstance = new SignRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:SignRequest)
  }

  public interface SignResponesOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 action = 1;
    /**
     * <code>required int32 action = 1;</code>
     *
     * <pre>
     *回應動作 0.同步資訊 1.查詢某標記狀態 2.某標記狀態改變 3.修改某標記狀態
     * </pre>
     */
    boolean hasAction();
    /**
     * <code>required int32 action = 1;</code>
     *
     * <pre>
     *回應動作 0.同步資訊 1.查詢某標記狀態 2.某標記狀態改變 3.修改某標記狀態
     * </pre>
     */
    int getAction();

    // optional int32 maxSign = 2;
    /**
     * <code>optional int32 maxSign = 2;</code>
     *
     * <pre>
     * 最大標記編號(暫時不用)
     * </pre>
     */
    boolean hasMaxSign();
    /**
     * <code>optional int32 maxSign = 2;</code>
     *
     * <pre>
     * 最大標記編號(暫時不用)
     * </pre>
     */
    int getMaxSign();

    // optional bool state = 3;
    /**
     * <code>optional bool state = 3;</code>
     *
     * <pre>
     * 回傳標記狀態 1.查詢某標記狀態 2.某標記狀態改變 3.修改某標記狀態
     * </pre>
     */
    boolean hasState();
    /**
     * <code>optional bool state = 3;</code>
     *
     * <pre>
     * 回傳標記狀態 1.查詢某標記狀態 2.某標記狀態改變 3.修改某標記狀態
     * </pre>
     */
    boolean getState();

    // repeated int32 signId = 4;
    /**
     * <code>repeated int32 signId = 4;</code>
     *
     * <pre>
     * 回傳標記ID
     * </pre>
     */
    java.util.List<java.lang.Integer> getSignIdList();
    /**
     * <code>repeated int32 signId = 4;</code>
     *
     * <pre>
     * 回傳標記ID
     * </pre>
     */
    int getSignIdCount();
    /**
     * <code>repeated int32 signId = 4;</code>
     *
     * <pre>
     * 回傳標記ID
     * </pre>
     */
    int getSignId(int index);
  }
  /**
   * Protobuf type {@code SignRespones}
   */
  public static final class SignRespones extends
      com.google.protobuf.GeneratedMessage
      implements SignResponesOrBuilder {
    // Use SignRespones.newBuilder() to construct.
    private SignRespones(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SignRespones(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SignRespones defaultInstance;
    public static SignRespones getDefaultInstance() {
      return defaultInstance;
    }

    public SignRespones getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SignRespones(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              action_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              maxSign_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              state_ = input.readBool();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                signId_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              signId_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                signId_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                signId_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          signId_ = java.util.Collections.unmodifiableList(signId_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.guaji.game.protocol.Sign.internal_static_SignRespones_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.guaji.game.protocol.Sign.internal_static_SignRespones_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.guaji.game.protocol.Sign.SignRespones.class, com.guaji.game.protocol.Sign.SignRespones.Builder.class);
    }

    public static com.google.protobuf.Parser<SignRespones> PARSER =
        new com.google.protobuf.AbstractParser<SignRespones>() {
      public SignRespones parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignRespones(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SignRespones> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 action = 1;
    public static final int ACTION_FIELD_NUMBER = 1;
    private int action_;
    /**
     * <code>required int32 action = 1;</code>
     *
     * <pre>
     *回應動作 0.同步資訊 1.查詢某標記狀態 2.某標記狀態改變 3.修改某標記狀態
     * </pre>
     */
    public boolean hasAction() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 action = 1;</code>
     *
     * <pre>
     *回應動作 0.同步資訊 1.查詢某標記狀態 2.某標記狀態改變 3.修改某標記狀態
     * </pre>
     */
    public int getAction() {
      return action_;
    }

    // optional int32 maxSign = 2;
    public static final int MAXSIGN_FIELD_NUMBER = 2;
    private int maxSign_;
    /**
     * <code>optional int32 maxSign = 2;</code>
     *
     * <pre>
     * 最大標記編號(暫時不用)
     * </pre>
     */
    public boolean hasMaxSign() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 maxSign = 2;</code>
     *
     * <pre>
     * 最大標記編號(暫時不用)
     * </pre>
     */
    public int getMaxSign() {
      return maxSign_;
    }

    // optional bool state = 3;
    public static final int STATE_FIELD_NUMBER = 3;
    private boolean state_;
    /**
     * <code>optional bool state = 3;</code>
     *
     * <pre>
     * 回傳標記狀態 1.查詢某標記狀態 2.某標記狀態改變 3.修改某標記狀態
     * </pre>
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool state = 3;</code>
     *
     * <pre>
     * 回傳標記狀態 1.查詢某標記狀態 2.某標記狀態改變 3.修改某標記狀態
     * </pre>
     */
    public boolean getState() {
      return state_;
    }

    // repeated int32 signId = 4;
    public static final int SIGNID_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> signId_;
    /**
     * <code>repeated int32 signId = 4;</code>
     *
     * <pre>
     * 回傳標記ID
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getSignIdList() {
      return signId_;
    }
    /**
     * <code>repeated int32 signId = 4;</code>
     *
     * <pre>
     * 回傳標記ID
     * </pre>
     */
    public int getSignIdCount() {
      return signId_.size();
    }
    /**
     * <code>repeated int32 signId = 4;</code>
     *
     * <pre>
     * 回傳標記ID
     * </pre>
     */
    public int getSignId(int index) {
      return signId_.get(index);
    }

    private void initFields() {
      action_ = 0;
      maxSign_ = 0;
      state_ = false;
      signId_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasAction()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, action_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, maxSign_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, state_);
      }
      for (int i = 0; i < signId_.size(); i++) {
        output.writeInt32(4, signId_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, action_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, maxSign_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, state_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < signId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(signId_.get(i));
        }
        size += dataSize;
        size += 1 * getSignIdList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.guaji.game.protocol.Sign.SignRespones parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.guaji.game.protocol.Sign.SignRespones parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.guaji.game.protocol.Sign.SignRespones parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.guaji.game.protocol.Sign.SignRespones parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.guaji.game.protocol.Sign.SignRespones parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.guaji.game.protocol.Sign.SignRespones parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.guaji.game.protocol.Sign.SignRespones parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.guaji.game.protocol.Sign.SignRespones parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.guaji.game.protocol.Sign.SignRespones parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.guaji.game.protocol.Sign.SignRespones parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.guaji.game.protocol.Sign.SignRespones prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SignRespones}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.guaji.game.protocol.Sign.SignResponesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.guaji.game.protocol.Sign.internal_static_SignRespones_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.guaji.game.protocol.Sign.internal_static_SignRespones_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.guaji.game.protocol.Sign.SignRespones.class, com.guaji.game.protocol.Sign.SignRespones.Builder.class);
      }

      // Construct using com.guaji.game.protocol.Sign.SignRespones.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        action_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        maxSign_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        state_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        signId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.guaji.game.protocol.Sign.internal_static_SignRespones_descriptor;
      }

      public com.guaji.game.protocol.Sign.SignRespones getDefaultInstanceForType() {
        return com.guaji.game.protocol.Sign.SignRespones.getDefaultInstance();
      }

      public com.guaji.game.protocol.Sign.SignRespones build() {
        com.guaji.game.protocol.Sign.SignRespones result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.guaji.game.protocol.Sign.SignRespones buildPartial() {
        com.guaji.game.protocol.Sign.SignRespones result = new com.guaji.game.protocol.Sign.SignRespones(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.action_ = action_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.maxSign_ = maxSign_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.state_ = state_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          signId_ = java.util.Collections.unmodifiableList(signId_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.signId_ = signId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.guaji.game.protocol.Sign.SignRespones) {
          return mergeFrom((com.guaji.game.protocol.Sign.SignRespones)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.guaji.game.protocol.Sign.SignRespones other) {
        if (other == com.guaji.game.protocol.Sign.SignRespones.getDefaultInstance()) return this;
        if (other.hasAction()) {
          setAction(other.getAction());
        }
        if (other.hasMaxSign()) {
          setMaxSign(other.getMaxSign());
        }
        if (other.hasState()) {
          setState(other.getState());
        }
        if (!other.signId_.isEmpty()) {
          if (signId_.isEmpty()) {
            signId_ = other.signId_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureSignIdIsMutable();
            signId_.addAll(other.signId_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasAction()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.guaji.game.protocol.Sign.SignRespones parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.guaji.game.protocol.Sign.SignRespones) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 action = 1;
      private int action_ ;
      /**
       * <code>required int32 action = 1;</code>
       *
       * <pre>
       *回應動作 0.同步資訊 1.查詢某標記狀態 2.某標記狀態改變 3.修改某標記狀態
       * </pre>
       */
      public boolean hasAction() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 action = 1;</code>
       *
       * <pre>
       *回應動作 0.同步資訊 1.查詢某標記狀態 2.某標記狀態改變 3.修改某標記狀態
       * </pre>
       */
      public int getAction() {
        return action_;
      }
      /**
       * <code>required int32 action = 1;</code>
       *
       * <pre>
       *回應動作 0.同步資訊 1.查詢某標記狀態 2.某標記狀態改變 3.修改某標記狀態
       * </pre>
       */
      public Builder setAction(int value) {
        bitField0_ |= 0x00000001;
        action_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 action = 1;</code>
       *
       * <pre>
       *回應動作 0.同步資訊 1.查詢某標記狀態 2.某標記狀態改變 3.修改某標記狀態
       * </pre>
       */
      public Builder clearAction() {
        bitField0_ = (bitField0_ & ~0x00000001);
        action_ = 0;
        onChanged();
        return this;
      }

      // optional int32 maxSign = 2;
      private int maxSign_ ;
      /**
       * <code>optional int32 maxSign = 2;</code>
       *
       * <pre>
       * 最大標記編號(暫時不用)
       * </pre>
       */
      public boolean hasMaxSign() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 maxSign = 2;</code>
       *
       * <pre>
       * 最大標記編號(暫時不用)
       * </pre>
       */
      public int getMaxSign() {
        return maxSign_;
      }
      /**
       * <code>optional int32 maxSign = 2;</code>
       *
       * <pre>
       * 最大標記編號(暫時不用)
       * </pre>
       */
      public Builder setMaxSign(int value) {
        bitField0_ |= 0x00000002;
        maxSign_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 maxSign = 2;</code>
       *
       * <pre>
       * 最大標記編號(暫時不用)
       * </pre>
       */
      public Builder clearMaxSign() {
        bitField0_ = (bitField0_ & ~0x00000002);
        maxSign_ = 0;
        onChanged();
        return this;
      }

      // optional bool state = 3;
      private boolean state_ ;
      /**
       * <code>optional bool state = 3;</code>
       *
       * <pre>
       * 回傳標記狀態 1.查詢某標記狀態 2.某標記狀態改變 3.修改某標記狀態
       * </pre>
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool state = 3;</code>
       *
       * <pre>
       * 回傳標記狀態 1.查詢某標記狀態 2.某標記狀態改變 3.修改某標記狀態
       * </pre>
       */
      public boolean getState() {
        return state_;
      }
      /**
       * <code>optional bool state = 3;</code>
       *
       * <pre>
       * 回傳標記狀態 1.查詢某標記狀態 2.某標記狀態改變 3.修改某標記狀態
       * </pre>
       */
      public Builder setState(boolean value) {
        bitField0_ |= 0x00000004;
        state_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool state = 3;</code>
       *
       * <pre>
       * 回傳標記狀態 1.查詢某標記狀態 2.某標記狀態改變 3.修改某標記狀態
       * </pre>
       */
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000004);
        state_ = false;
        onChanged();
        return this;
      }

      // repeated int32 signId = 4;
      private java.util.List<java.lang.Integer> signId_ = java.util.Collections.emptyList();
      private void ensureSignIdIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          signId_ = new java.util.ArrayList<java.lang.Integer>(signId_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 signId = 4;</code>
       *
       * <pre>
       * 回傳標記ID
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getSignIdList() {
        return java.util.Collections.unmodifiableList(signId_);
      }
      /**
       * <code>repeated int32 signId = 4;</code>
       *
       * <pre>
       * 回傳標記ID
       * </pre>
       */
      public int getSignIdCount() {
        return signId_.size();
      }
      /**
       * <code>repeated int32 signId = 4;</code>
       *
       * <pre>
       * 回傳標記ID
       * </pre>
       */
      public int getSignId(int index) {
        return signId_.get(index);
      }
      /**
       * <code>repeated int32 signId = 4;</code>
       *
       * <pre>
       * 回傳標記ID
       * </pre>
       */
      public Builder setSignId(
          int index, int value) {
        ensureSignIdIsMutable();
        signId_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 signId = 4;</code>
       *
       * <pre>
       * 回傳標記ID
       * </pre>
       */
      public Builder addSignId(int value) {
        ensureSignIdIsMutable();
        signId_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 signId = 4;</code>
       *
       * <pre>
       * 回傳標記ID
       * </pre>
       */
      public Builder addAllSignId(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSignIdIsMutable();
        super.addAll(values, signId_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 signId = 4;</code>
       *
       * <pre>
       * 回傳標記ID
       * </pre>
       */
      public Builder clearSignId() {
        signId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SignRespones)
    }

    static {
      defaultInstance = new SignRespones(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:SignRespones)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_SignRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SignRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_SignRespones_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SignRespones_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\nSign.proto\"=\n\013SignRequest\022\016\n\006action\030\001 " +
      "\002(\005\022\016\n\006signId\030\002 \001(\005\022\016\n\006setVal\030\003 \001(\010\"N\n\014S" +
      "ignRespones\022\016\n\006action\030\001 \002(\005\022\017\n\007maxSign\030\002" +
      " \001(\005\022\r\n\005state\030\003 \001(\010\022\016\n\006signId\030\004 \003(\005B\031\n\027c" +
      "om.guaji.game.protocol"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_SignRequest_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_SignRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_SignRequest_descriptor,
              new java.lang.String[] { "Action", "SignId", "SetVal", });
          internal_static_SignRespones_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_SignRespones_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_SignRespones_descriptor,
              new java.lang.String[] { "Action", "MaxSign", "State", "SignId", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
