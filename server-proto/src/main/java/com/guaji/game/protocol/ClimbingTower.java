// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ClimbingTower.proto

package com.guaji.game.protocol;

public final class ClimbingTower {
  private ClimbingTower() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ClimbingTowerItemInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 cfgItemId = 1;
    /**
     * <code>required int32 cfgItemId = 1;</code>
     *
     * <pre>
     *身份id
     * </pre>
     */
    boolean hasCfgItemId();
    /**
     * <code>required int32 cfgItemId = 1;</code>
     *
     * <pre>
     *身份id
     * </pre>
     */
    int getCfgItemId();

    // optional int32 playerId = 2;
    /**
     * <code>optional int32 playerId = 2;</code>
     *
     * <pre>
     * 玩家Id 
     * </pre>
     */
    boolean hasPlayerId();
    /**
     * <code>optional int32 playerId = 2;</code>
     *
     * <pre>
     * 玩家Id 
     * </pre>
     */
    int getPlayerId();

    // required int32 level = 3;
    /**
     * <code>required int32 level = 3;</code>
     *
     * <pre>
     * 角色等级
     * </pre>
     */
    boolean hasLevel();
    /**
     * <code>required int32 level = 3;</code>
     *
     * <pre>
     * 角色等级
     * </pre>
     */
    int getLevel();

    // required string name = 4;
    /**
     * <code>required string name = 4;</code>
     *
     * <pre>
     * 角色名
     * </pre>
     */
    boolean hasName();
    /**
     * <code>required string name = 4;</code>
     *
     * <pre>
     * 角色名
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 4;</code>
     *
     * <pre>
     * 角色名
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // required int32 prof = 5;
    /**
     * <code>required int32 prof = 5;</code>
     *
     * <pre>
     * 职业
     * </pre>
     */
    boolean hasProf();
    /**
     * <code>required int32 prof = 5;</code>
     *
     * <pre>
     * 职业
     * </pre>
     */
    int getProf();

    // required int32 rank = 6;
    /**
     * <code>required int32 rank = 6;</code>
     *
     * <pre>
     * 排名
     * </pre>
     */
    boolean hasRank();
    /**
     * <code>required int32 rank = 6;</code>
     *
     * <pre>
     * 排名
     * </pre>
     */
    int getRank();

    // required int32 fightValue = 7;
    /**
     * <code>required int32 fightValue = 7;</code>
     *
     * <pre>
     * 角色战斗力
     * </pre>
     */
    boolean hasFightValue();
    /**
     * <code>required int32 fightValue = 7;</code>
     *
     * <pre>
     * 角色战斗力
     * </pre>
     */
    int getFightValue();

    // required int32 historicHighStar = 8;
    /**
     * <code>required int32 historicHighStar = 8;</code>
     *
     * <pre>
     * 历史最高星数
     * </pre>
     */
    boolean hasHistoricHighStar();
    /**
     * <code>required int32 historicHighStar = 8;</code>
     *
     * <pre>
     * 历史最高星数
     * </pre>
     */
    int getHistoricHighStar();

    // optional int32 headIcon = 9;
    /**
     * <code>optional int32 headIcon = 9;</code>
     *
     * <pre>
     *主角avatar ID
     * </pre>
     */
    boolean hasHeadIcon();
    /**
     * <code>optional int32 headIcon = 9;</code>
     *
     * <pre>
     *主角avatar ID
     * </pre>
     */
    int getHeadIcon();
  }
  /**
   * Protobuf type {@code ClimbingTowerItemInfo}
   */
  public static final class ClimbingTowerItemInfo extends
      com.google.protobuf.GeneratedMessage
      implements ClimbingTowerItemInfoOrBuilder {
    // Use ClimbingTowerItemInfo.newBuilder() to construct.
    private ClimbingTowerItemInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ClimbingTowerItemInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ClimbingTowerItemInfo defaultInstance;
    public static ClimbingTowerItemInfo getDefaultInstance() {
      return defaultInstance;
    }

    public ClimbingTowerItemInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ClimbingTowerItemInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              cfgItemId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              playerId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              level_ = input.readInt32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              name_ = input.readBytes();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              prof_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              rank_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              fightValue_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              historicHighStar_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              headIcon_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.guaji.game.protocol.ClimbingTower.internal_static_ClimbingTowerItemInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.guaji.game.protocol.ClimbingTower.internal_static_ClimbingTowerItemInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo.class, com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<ClimbingTowerItemInfo> PARSER =
        new com.google.protobuf.AbstractParser<ClimbingTowerItemInfo>() {
      public ClimbingTowerItemInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClimbingTowerItemInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ClimbingTowerItemInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 cfgItemId = 1;
    public static final int CFGITEMID_FIELD_NUMBER = 1;
    private int cfgItemId_;
    /**
     * <code>required int32 cfgItemId = 1;</code>
     *
     * <pre>
     *身份id
     * </pre>
     */
    public boolean hasCfgItemId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 cfgItemId = 1;</code>
     *
     * <pre>
     *身份id
     * </pre>
     */
    public int getCfgItemId() {
      return cfgItemId_;
    }

    // optional int32 playerId = 2;
    public static final int PLAYERID_FIELD_NUMBER = 2;
    private int playerId_;
    /**
     * <code>optional int32 playerId = 2;</code>
     *
     * <pre>
     * 玩家Id 
     * </pre>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 playerId = 2;</code>
     *
     * <pre>
     * 玩家Id 
     * </pre>
     */
    public int getPlayerId() {
      return playerId_;
    }

    // required int32 level = 3;
    public static final int LEVEL_FIELD_NUMBER = 3;
    private int level_;
    /**
     * <code>required int32 level = 3;</code>
     *
     * <pre>
     * 角色等级
     * </pre>
     */
    public boolean hasLevel() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 level = 3;</code>
     *
     * <pre>
     * 角色等级
     * </pre>
     */
    public int getLevel() {
      return level_;
    }

    // required string name = 4;
    public static final int NAME_FIELD_NUMBER = 4;
    private java.lang.Object name_;
    /**
     * <code>required string name = 4;</code>
     *
     * <pre>
     * 角色名
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string name = 4;</code>
     *
     * <pre>
     * 角色名
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 4;</code>
     *
     * <pre>
     * 角色名
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 prof = 5;
    public static final int PROF_FIELD_NUMBER = 5;
    private int prof_;
    /**
     * <code>required int32 prof = 5;</code>
     *
     * <pre>
     * 职业
     * </pre>
     */
    public boolean hasProf() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 prof = 5;</code>
     *
     * <pre>
     * 职业
     * </pre>
     */
    public int getProf() {
      return prof_;
    }

    // required int32 rank = 6;
    public static final int RANK_FIELD_NUMBER = 6;
    private int rank_;
    /**
     * <code>required int32 rank = 6;</code>
     *
     * <pre>
     * 排名
     * </pre>
     */
    public boolean hasRank() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 rank = 6;</code>
     *
     * <pre>
     * 排名
     * </pre>
     */
    public int getRank() {
      return rank_;
    }

    // required int32 fightValue = 7;
    public static final int FIGHTVALUE_FIELD_NUMBER = 7;
    private int fightValue_;
    /**
     * <code>required int32 fightValue = 7;</code>
     *
     * <pre>
     * 角色战斗力
     * </pre>
     */
    public boolean hasFightValue() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required int32 fightValue = 7;</code>
     *
     * <pre>
     * 角色战斗力
     * </pre>
     */
    public int getFightValue() {
      return fightValue_;
    }

    // required int32 historicHighStar = 8;
    public static final int HISTORICHIGHSTAR_FIELD_NUMBER = 8;
    private int historicHighStar_;
    /**
     * <code>required int32 historicHighStar = 8;</code>
     *
     * <pre>
     * 历史最高星数
     * </pre>
     */
    public boolean hasHistoricHighStar() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required int32 historicHighStar = 8;</code>
     *
     * <pre>
     * 历史最高星数
     * </pre>
     */
    public int getHistoricHighStar() {
      return historicHighStar_;
    }

    // optional int32 headIcon = 9;
    public static final int HEADICON_FIELD_NUMBER = 9;
    private int headIcon_;
    /**
     * <code>optional int32 headIcon = 9;</code>
     *
     * <pre>
     *主角avatar ID
     * </pre>
     */
    public boolean hasHeadIcon() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 headIcon = 9;</code>
     *
     * <pre>
     *主角avatar ID
     * </pre>
     */
    public int getHeadIcon() {
      return headIcon_;
    }

    private void initFields() {
      cfgItemId_ = 0;
      playerId_ = 0;
      level_ = 0;
      name_ = "";
      prof_ = 0;
      rank_ = 0;
      fightValue_ = 0;
      historicHighStar_ = 0;
      headIcon_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCfgItemId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLevel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasProf()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRank()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFightValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHistoricHighStar()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, cfgItemId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, playerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, level_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, prof_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, rank_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, fightValue_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, historicHighStar_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, headIcon_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, cfgItemId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, playerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, level_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, prof_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, rank_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, fightValue_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, historicHighStar_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, headIcon_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ClimbingTowerItemInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.guaji.game.protocol.ClimbingTower.internal_static_ClimbingTowerItemInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.guaji.game.protocol.ClimbingTower.internal_static_ClimbingTowerItemInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo.class, com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo.Builder.class);
      }

      // Construct using com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        cfgItemId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        level_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        prof_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        rank_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        fightValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        historicHighStar_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        headIcon_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.guaji.game.protocol.ClimbingTower.internal_static_ClimbingTowerItemInfo_descriptor;
      }

      public com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo getDefaultInstanceForType() {
        return com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo.getDefaultInstance();
      }

      public com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo build() {
        com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo buildPartial() {
        com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo result = new com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cfgItemId_ = cfgItemId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.level_ = level_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.prof_ = prof_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.rank_ = rank_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.fightValue_ = fightValue_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.historicHighStar_ = historicHighStar_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.headIcon_ = headIcon_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo) {
          return mergeFrom((com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo other) {
        if (other == com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo.getDefaultInstance()) return this;
        if (other.hasCfgItemId()) {
          setCfgItemId(other.getCfgItemId());
        }
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasLevel()) {
          setLevel(other.getLevel());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000008;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasProf()) {
          setProf(other.getProf());
        }
        if (other.hasRank()) {
          setRank(other.getRank());
        }
        if (other.hasFightValue()) {
          setFightValue(other.getFightValue());
        }
        if (other.hasHistoricHighStar()) {
          setHistoricHighStar(other.getHistoricHighStar());
        }
        if (other.hasHeadIcon()) {
          setHeadIcon(other.getHeadIcon());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCfgItemId()) {
          
          return false;
        }
        if (!hasLevel()) {
          
          return false;
        }
        if (!hasName()) {
          
          return false;
        }
        if (!hasProf()) {
          
          return false;
        }
        if (!hasRank()) {
          
          return false;
        }
        if (!hasFightValue()) {
          
          return false;
        }
        if (!hasHistoricHighStar()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 cfgItemId = 1;
      private int cfgItemId_ ;
      /**
       * <code>required int32 cfgItemId = 1;</code>
       *
       * <pre>
       *身份id
       * </pre>
       */
      public boolean hasCfgItemId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 cfgItemId = 1;</code>
       *
       * <pre>
       *身份id
       * </pre>
       */
      public int getCfgItemId() {
        return cfgItemId_;
      }
      /**
       * <code>required int32 cfgItemId = 1;</code>
       *
       * <pre>
       *身份id
       * </pre>
       */
      public Builder setCfgItemId(int value) {
        bitField0_ |= 0x00000001;
        cfgItemId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 cfgItemId = 1;</code>
       *
       * <pre>
       *身份id
       * </pre>
       */
      public Builder clearCfgItemId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cfgItemId_ = 0;
        onChanged();
        return this;
      }

      // optional int32 playerId = 2;
      private int playerId_ ;
      /**
       * <code>optional int32 playerId = 2;</code>
       *
       * <pre>
       * 玩家Id 
       * </pre>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 playerId = 2;</code>
       *
       * <pre>
       * 玩家Id 
       * </pre>
       */
      public int getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional int32 playerId = 2;</code>
       *
       * <pre>
       * 玩家Id 
       * </pre>
       */
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000002;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 playerId = 2;</code>
       *
       * <pre>
       * 玩家Id 
       * </pre>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        playerId_ = 0;
        onChanged();
        return this;
      }

      // required int32 level = 3;
      private int level_ ;
      /**
       * <code>required int32 level = 3;</code>
       *
       * <pre>
       * 角色等级
       * </pre>
       */
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 level = 3;</code>
       *
       * <pre>
       * 角色等级
       * </pre>
       */
      public int getLevel() {
        return level_;
      }
      /**
       * <code>required int32 level = 3;</code>
       *
       * <pre>
       * 角色等级
       * </pre>
       */
      public Builder setLevel(int value) {
        bitField0_ |= 0x00000004;
        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 level = 3;</code>
       *
       * <pre>
       * 角色等级
       * </pre>
       */
      public Builder clearLevel() {
        bitField0_ = (bitField0_ & ~0x00000004);
        level_ = 0;
        onChanged();
        return this;
      }

      // required string name = 4;
      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 4;</code>
       *
       * <pre>
       * 角色名
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required string name = 4;</code>
       *
       * <pre>
       * 角色名
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 4;</code>
       *
       * <pre>
       * 角色名
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 4;</code>
       *
       * <pre>
       * 角色名
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 4;</code>
       *
       * <pre>
       * 角色名
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000008);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 4;</code>
       *
       * <pre>
       * 角色名
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        name_ = value;
        onChanged();
        return this;
      }

      // required int32 prof = 5;
      private int prof_ ;
      /**
       * <code>required int32 prof = 5;</code>
       *
       * <pre>
       * 职业
       * </pre>
       */
      public boolean hasProf() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 prof = 5;</code>
       *
       * <pre>
       * 职业
       * </pre>
       */
      public int getProf() {
        return prof_;
      }
      /**
       * <code>required int32 prof = 5;</code>
       *
       * <pre>
       * 职业
       * </pre>
       */
      public Builder setProf(int value) {
        bitField0_ |= 0x00000010;
        prof_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 prof = 5;</code>
       *
       * <pre>
       * 职业
       * </pre>
       */
      public Builder clearProf() {
        bitField0_ = (bitField0_ & ~0x00000010);
        prof_ = 0;
        onChanged();
        return this;
      }

      // required int32 rank = 6;
      private int rank_ ;
      /**
       * <code>required int32 rank = 6;</code>
       *
       * <pre>
       * 排名
       * </pre>
       */
      public boolean hasRank() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 rank = 6;</code>
       *
       * <pre>
       * 排名
       * </pre>
       */
      public int getRank() {
        return rank_;
      }
      /**
       * <code>required int32 rank = 6;</code>
       *
       * <pre>
       * 排名
       * </pre>
       */
      public Builder setRank(int value) {
        bitField0_ |= 0x00000020;
        rank_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 rank = 6;</code>
       *
       * <pre>
       * 排名
       * </pre>
       */
      public Builder clearRank() {
        bitField0_ = (bitField0_ & ~0x00000020);
        rank_ = 0;
        onChanged();
        return this;
      }

      // required int32 fightValue = 7;
      private int fightValue_ ;
      /**
       * <code>required int32 fightValue = 7;</code>
       *
       * <pre>
       * 角色战斗力
       * </pre>
       */
      public boolean hasFightValue() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int32 fightValue = 7;</code>
       *
       * <pre>
       * 角色战斗力
       * </pre>
       */
      public int getFightValue() {
        return fightValue_;
      }
      /**
       * <code>required int32 fightValue = 7;</code>
       *
       * <pre>
       * 角色战斗力
       * </pre>
       */
      public Builder setFightValue(int value) {
        bitField0_ |= 0x00000040;
        fightValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 fightValue = 7;</code>
       *
       * <pre>
       * 角色战斗力
       * </pre>
       */
      public Builder clearFightValue() {
        bitField0_ = (bitField0_ & ~0x00000040);
        fightValue_ = 0;
        onChanged();
        return this;
      }

      // required int32 historicHighStar = 8;
      private int historicHighStar_ ;
      /**
       * <code>required int32 historicHighStar = 8;</code>
       *
       * <pre>
       * 历史最高星数
       * </pre>
       */
      public boolean hasHistoricHighStar() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required int32 historicHighStar = 8;</code>
       *
       * <pre>
       * 历史最高星数
       * </pre>
       */
      public int getHistoricHighStar() {
        return historicHighStar_;
      }
      /**
       * <code>required int32 historicHighStar = 8;</code>
       *
       * <pre>
       * 历史最高星数
       * </pre>
       */
      public Builder setHistoricHighStar(int value) {
        bitField0_ |= 0x00000080;
        historicHighStar_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 historicHighStar = 8;</code>
       *
       * <pre>
       * 历史最高星数
       * </pre>
       */
      public Builder clearHistoricHighStar() {
        bitField0_ = (bitField0_ & ~0x00000080);
        historicHighStar_ = 0;
        onChanged();
        return this;
      }

      // optional int32 headIcon = 9;
      private int headIcon_ ;
      /**
       * <code>optional int32 headIcon = 9;</code>
       *
       * <pre>
       *主角avatar ID
       * </pre>
       */
      public boolean hasHeadIcon() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 headIcon = 9;</code>
       *
       * <pre>
       *主角avatar ID
       * </pre>
       */
      public int getHeadIcon() {
        return headIcon_;
      }
      /**
       * <code>optional int32 headIcon = 9;</code>
       *
       * <pre>
       *主角avatar ID
       * </pre>
       */
      public Builder setHeadIcon(int value) {
        bitField0_ |= 0x00000100;
        headIcon_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 headIcon = 9;</code>
       *
       * <pre>
       *主角avatar ID
       * </pre>
       */
      public Builder clearHeadIcon() {
        bitField0_ = (bitField0_ & ~0x00000100);
        headIcon_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ClimbingTowerItemInfo)
    }

    static {
      defaultInstance = new ClimbingTowerItemInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ClimbingTowerItemInfo)
  }

  public interface PassLayerItemInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 layerId = 1;
    /**
     * <code>required int32 layerId = 1;</code>
     *
     * <pre>
     *所属关数
     * </pre>
     */
    boolean hasLayerId();
    /**
     * <code>required int32 layerId = 1;</code>
     *
     * <pre>
     *所属关数
     * </pre>
     */
    int getLayerId();

    // required int32 star = 2;
    /**
     * <code>required int32 star = 2;</code>
     *
     * <pre>
     *通关获取星数
     * </pre>
     */
    boolean hasStar();
    /**
     * <code>required int32 star = 2;</code>
     *
     * <pre>
     *通关获取星数
     * </pre>
     */
    int getStar();

    // required int32 challTimes = 3;
    /**
     * <code>required int32 challTimes = 3;</code>
     *
     * <pre>
     *挑战多少次数通关
     * </pre>
     */
    boolean hasChallTimes();
    /**
     * <code>required int32 challTimes = 3;</code>
     *
     * <pre>
     *挑战多少次数通关
     * </pre>
     */
    int getChallTimes();
  }
  /**
   * Protobuf type {@code PassLayerItemInfo}
   */
  public static final class PassLayerItemInfo extends
      com.google.protobuf.GeneratedMessage
      implements PassLayerItemInfoOrBuilder {
    // Use PassLayerItemInfo.newBuilder() to construct.
    private PassLayerItemInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PassLayerItemInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PassLayerItemInfo defaultInstance;
    public static PassLayerItemInfo getDefaultInstance() {
      return defaultInstance;
    }

    public PassLayerItemInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PassLayerItemInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              layerId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              star_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              challTimes_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.guaji.game.protocol.ClimbingTower.internal_static_PassLayerItemInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.guaji.game.protocol.ClimbingTower.internal_static_PassLayerItemInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo.class, com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<PassLayerItemInfo> PARSER =
        new com.google.protobuf.AbstractParser<PassLayerItemInfo>() {
      public PassLayerItemInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PassLayerItemInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PassLayerItemInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 layerId = 1;
    public static final int LAYERID_FIELD_NUMBER = 1;
    private int layerId_;
    /**
     * <code>required int32 layerId = 1;</code>
     *
     * <pre>
     *所属关数
     * </pre>
     */
    public boolean hasLayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 layerId = 1;</code>
     *
     * <pre>
     *所属关数
     * </pre>
     */
    public int getLayerId() {
      return layerId_;
    }

    // required int32 star = 2;
    public static final int STAR_FIELD_NUMBER = 2;
    private int star_;
    /**
     * <code>required int32 star = 2;</code>
     *
     * <pre>
     *通关获取星数
     * </pre>
     */
    public boolean hasStar() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 star = 2;</code>
     *
     * <pre>
     *通关获取星数
     * </pre>
     */
    public int getStar() {
      return star_;
    }

    // required int32 challTimes = 3;
    public static final int CHALLTIMES_FIELD_NUMBER = 3;
    private int challTimes_;
    /**
     * <code>required int32 challTimes = 3;</code>
     *
     * <pre>
     *挑战多少次数通关
     * </pre>
     */
    public boolean hasChallTimes() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 challTimes = 3;</code>
     *
     * <pre>
     *挑战多少次数通关
     * </pre>
     */
    public int getChallTimes() {
      return challTimes_;
    }

    private void initFields() {
      layerId_ = 0;
      star_ = 0;
      challTimes_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasLayerId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStar()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasChallTimes()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, layerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, star_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, challTimes_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, layerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, star_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, challTimes_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PassLayerItemInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.guaji.game.protocol.ClimbingTower.PassLayerItemInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.guaji.game.protocol.ClimbingTower.internal_static_PassLayerItemInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.guaji.game.protocol.ClimbingTower.internal_static_PassLayerItemInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo.class, com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo.Builder.class);
      }

      // Construct using com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        layerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        star_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        challTimes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.guaji.game.protocol.ClimbingTower.internal_static_PassLayerItemInfo_descriptor;
      }

      public com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo getDefaultInstanceForType() {
        return com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo.getDefaultInstance();
      }

      public com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo build() {
        com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo buildPartial() {
        com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo result = new com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.layerId_ = layerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.star_ = star_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.challTimes_ = challTimes_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo) {
          return mergeFrom((com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo other) {
        if (other == com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo.getDefaultInstance()) return this;
        if (other.hasLayerId()) {
          setLayerId(other.getLayerId());
        }
        if (other.hasStar()) {
          setStar(other.getStar());
        }
        if (other.hasChallTimes()) {
          setChallTimes(other.getChallTimes());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasLayerId()) {
          
          return false;
        }
        if (!hasStar()) {
          
          return false;
        }
        if (!hasChallTimes()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 layerId = 1;
      private int layerId_ ;
      /**
       * <code>required int32 layerId = 1;</code>
       *
       * <pre>
       *所属关数
       * </pre>
       */
      public boolean hasLayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 layerId = 1;</code>
       *
       * <pre>
       *所属关数
       * </pre>
       */
      public int getLayerId() {
        return layerId_;
      }
      /**
       * <code>required int32 layerId = 1;</code>
       *
       * <pre>
       *所属关数
       * </pre>
       */
      public Builder setLayerId(int value) {
        bitField0_ |= 0x00000001;
        layerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 layerId = 1;</code>
       *
       * <pre>
       *所属关数
       * </pre>
       */
      public Builder clearLayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        layerId_ = 0;
        onChanged();
        return this;
      }

      // required int32 star = 2;
      private int star_ ;
      /**
       * <code>required int32 star = 2;</code>
       *
       * <pre>
       *通关获取星数
       * </pre>
       */
      public boolean hasStar() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 star = 2;</code>
       *
       * <pre>
       *通关获取星数
       * </pre>
       */
      public int getStar() {
        return star_;
      }
      /**
       * <code>required int32 star = 2;</code>
       *
       * <pre>
       *通关获取星数
       * </pre>
       */
      public Builder setStar(int value) {
        bitField0_ |= 0x00000002;
        star_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 star = 2;</code>
       *
       * <pre>
       *通关获取星数
       * </pre>
       */
      public Builder clearStar() {
        bitField0_ = (bitField0_ & ~0x00000002);
        star_ = 0;
        onChanged();
        return this;
      }

      // required int32 challTimes = 3;
      private int challTimes_ ;
      /**
       * <code>required int32 challTimes = 3;</code>
       *
       * <pre>
       *挑战多少次数通关
       * </pre>
       */
      public boolean hasChallTimes() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 challTimes = 3;</code>
       *
       * <pre>
       *挑战多少次数通关
       * </pre>
       */
      public int getChallTimes() {
        return challTimes_;
      }
      /**
       * <code>required int32 challTimes = 3;</code>
       *
       * <pre>
       *挑战多少次数通关
       * </pre>
       */
      public Builder setChallTimes(int value) {
        bitField0_ |= 0x00000004;
        challTimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 challTimes = 3;</code>
       *
       * <pre>
       *挑战多少次数通关
       * </pre>
       */
      public Builder clearChallTimes() {
        bitField0_ = (bitField0_ & ~0x00000004);
        challTimes_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PassLayerItemInfo)
    }

    static {
      defaultInstance = new PassLayerItemInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PassLayerItemInfo)
  }

  public interface ClimbingTowerPlayerInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 totalStar = 1;
    /**
     * <code>required int32 totalStar = 1;</code>
     *
     * <pre>
     *当前挑战累计星数
     * </pre>
     */
    boolean hasTotalStar();
    /**
     * <code>required int32 totalStar = 1;</code>
     *
     * <pre>
     *当前挑战累计星数
     * </pre>
     */
    int getTotalStar();

    // required .PassLayerItemInfo curLayer = 2;
    /**
     * <code>required .PassLayerItemInfo curLayer = 2;</code>
     *
     * <pre>
     *当前所在层数
     * </pre>
     */
    boolean hasCurLayer();
    /**
     * <code>required .PassLayerItemInfo curLayer = 2;</code>
     *
     * <pre>
     *当前所在层数
     * </pre>
     */
    com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo getCurLayer();
    /**
     * <code>required .PassLayerItemInfo curLayer = 2;</code>
     *
     * <pre>
     *当前所在层数
     * </pre>
     */
    com.guaji.game.protocol.ClimbingTower.PassLayerItemInfoOrBuilder getCurLayerOrBuilder();

    // required int32 historicHighStar = 3;
    /**
     * <code>required int32 historicHighStar = 3;</code>
     *
     * <pre>
     *历史最高星数
     * </pre>
     */
    boolean hasHistoricHighStar();
    /**
     * <code>required int32 historicHighStar = 3;</code>
     *
     * <pre>
     *历史最高星数
     * </pre>
     */
    int getHistoricHighStar();

    // required int32 todayResetTimes = 4;
    /**
     * <code>required int32 todayResetTimes = 4;</code>
     *
     * <pre>
     *当前天重置次数
     * </pre>
     */
    boolean hasTodayResetTimes();
    /**
     * <code>required int32 todayResetTimes = 4;</code>
     *
     * <pre>
     *当前天重置次数
     * </pre>
     */
    int getTodayResetTimes();

    // required int32 sweepTimes = 5;
    /**
     * <code>required int32 sweepTimes = 5;</code>
     *
     * <pre>
     *扫荡次数
     * </pre>
     */
    boolean hasSweepTimes();
    /**
     * <code>required int32 sweepTimes = 5;</code>
     *
     * <pre>
     *扫荡次数
     * </pre>
     */
    int getSweepTimes();

    // repeated .PassLayerItemInfo passLayers = 6;
    /**
     * <code>repeated .PassLayerItemInfo passLayers = 6;</code>
     *
     * <pre>
     *已通关的信息
     * </pre>
     */
    java.util.List<com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo> 
        getPassLayersList();
    /**
     * <code>repeated .PassLayerItemInfo passLayers = 6;</code>
     *
     * <pre>
     *已通关的信息
     * </pre>
     */
    com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo getPassLayers(int index);
    /**
     * <code>repeated .PassLayerItemInfo passLayers = 6;</code>
     *
     * <pre>
     *已通关的信息
     * </pre>
     */
    int getPassLayersCount();
    /**
     * <code>repeated .PassLayerItemInfo passLayers = 6;</code>
     *
     * <pre>
     *已通关的信息
     * </pre>
     */
    java.util.List<? extends com.guaji.game.protocol.ClimbingTower.PassLayerItemInfoOrBuilder> 
        getPassLayersOrBuilderList();
    /**
     * <code>repeated .PassLayerItemInfo passLayers = 6;</code>
     *
     * <pre>
     *已通关的信息
     * </pre>
     */
    com.guaji.game.protocol.ClimbingTower.PassLayerItemInfoOrBuilder getPassLayersOrBuilder(
        int index);

    // required int32 sweepTimeRemain = 7;
    /**
     * <code>required int32 sweepTimeRemain = 7;</code>
     *
     * <pre>
     * 扫荡剩余时间
     * </pre>
     */
    boolean hasSweepTimeRemain();
    /**
     * <code>required int32 sweepTimeRemain = 7;</code>
     *
     * <pre>
     * 扫荡剩余时间
     * </pre>
     */
    int getSweepTimeRemain();
  }
  /**
   * Protobuf type {@code ClimbingTowerPlayerInfo}
   */
  public static final class ClimbingTowerPlayerInfo extends
      com.google.protobuf.GeneratedMessage
      implements ClimbingTowerPlayerInfoOrBuilder {
    // Use ClimbingTowerPlayerInfo.newBuilder() to construct.
    private ClimbingTowerPlayerInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ClimbingTowerPlayerInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ClimbingTowerPlayerInfo defaultInstance;
    public static ClimbingTowerPlayerInfo getDefaultInstance() {
      return defaultInstance;
    }

    public ClimbingTowerPlayerInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ClimbingTowerPlayerInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              totalStar_ = input.readInt32();
              break;
            }
            case 18: {
              com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = curLayer_.toBuilder();
              }
              curLayer_ = input.readMessage(com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(curLayer_);
                curLayer_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              historicHighStar_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              todayResetTimes_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              sweepTimes_ = input.readInt32();
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                passLayers_ = new java.util.ArrayList<com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo>();
                mutable_bitField0_ |= 0x00000020;
              }
              passLayers_.add(input.readMessage(com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo.PARSER, extensionRegistry));
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              sweepTimeRemain_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          passLayers_ = java.util.Collections.unmodifiableList(passLayers_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.guaji.game.protocol.ClimbingTower.internal_static_ClimbingTowerPlayerInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.guaji.game.protocol.ClimbingTower.internal_static_ClimbingTowerPlayerInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.guaji.game.protocol.ClimbingTower.ClimbingTowerPlayerInfo.class, com.guaji.game.protocol.ClimbingTower.ClimbingTowerPlayerInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<ClimbingTowerPlayerInfo> PARSER =
        new com.google.protobuf.AbstractParser<ClimbingTowerPlayerInfo>() {
      public ClimbingTowerPlayerInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClimbingTowerPlayerInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ClimbingTowerPlayerInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 totalStar = 1;
    public static final int TOTALSTAR_FIELD_NUMBER = 1;
    private int totalStar_;
    /**
     * <code>required int32 totalStar = 1;</code>
     *
     * <pre>
     *当前挑战累计星数
     * </pre>
     */
    public boolean hasTotalStar() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 totalStar = 1;</code>
     *
     * <pre>
     *当前挑战累计星数
     * </pre>
     */
    public int getTotalStar() {
      return totalStar_;
    }

    // required .PassLayerItemInfo curLayer = 2;
    public static final int CURLAYER_FIELD_NUMBER = 2;
    private com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo curLayer_;
    /**
     * <code>required .PassLayerItemInfo curLayer = 2;</code>
     *
     * <pre>
     *当前所在层数
     * </pre>
     */
    public boolean hasCurLayer() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .PassLayerItemInfo curLayer = 2;</code>
     *
     * <pre>
     *当前所在层数
     * </pre>
     */
    public com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo getCurLayer() {
      return curLayer_;
    }
    /**
     * <code>required .PassLayerItemInfo curLayer = 2;</code>
     *
     * <pre>
     *当前所在层数
     * </pre>
     */
    public com.guaji.game.protocol.ClimbingTower.PassLayerItemInfoOrBuilder getCurLayerOrBuilder() {
      return curLayer_;
    }

    // required int32 historicHighStar = 3;
    public static final int HISTORICHIGHSTAR_FIELD_NUMBER = 3;
    private int historicHighStar_;
    /**
     * <code>required int32 historicHighStar = 3;</code>
     *
     * <pre>
     *历史最高星数
     * </pre>
     */
    public boolean hasHistoricHighStar() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 historicHighStar = 3;</code>
     *
     * <pre>
     *历史最高星数
     * </pre>
     */
    public int getHistoricHighStar() {
      return historicHighStar_;
    }

    // required int32 todayResetTimes = 4;
    public static final int TODAYRESETTIMES_FIELD_NUMBER = 4;
    private int todayResetTimes_;
    /**
     * <code>required int32 todayResetTimes = 4;</code>
     *
     * <pre>
     *当前天重置次数
     * </pre>
     */
    public boolean hasTodayResetTimes() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 todayResetTimes = 4;</code>
     *
     * <pre>
     *当前天重置次数
     * </pre>
     */
    public int getTodayResetTimes() {
      return todayResetTimes_;
    }

    // required int32 sweepTimes = 5;
    public static final int SWEEPTIMES_FIELD_NUMBER = 5;
    private int sweepTimes_;
    /**
     * <code>required int32 sweepTimes = 5;</code>
     *
     * <pre>
     *扫荡次数
     * </pre>
     */
    public boolean hasSweepTimes() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 sweepTimes = 5;</code>
     *
     * <pre>
     *扫荡次数
     * </pre>
     */
    public int getSweepTimes() {
      return sweepTimes_;
    }

    // repeated .PassLayerItemInfo passLayers = 6;
    public static final int PASSLAYERS_FIELD_NUMBER = 6;
    private java.util.List<com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo> passLayers_;
    /**
     * <code>repeated .PassLayerItemInfo passLayers = 6;</code>
     *
     * <pre>
     *已通关的信息
     * </pre>
     */
    public java.util.List<com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo> getPassLayersList() {
      return passLayers_;
    }
    /**
     * <code>repeated .PassLayerItemInfo passLayers = 6;</code>
     *
     * <pre>
     *已通关的信息
     * </pre>
     */
    public java.util.List<? extends com.guaji.game.protocol.ClimbingTower.PassLayerItemInfoOrBuilder> 
        getPassLayersOrBuilderList() {
      return passLayers_;
    }
    /**
     * <code>repeated .PassLayerItemInfo passLayers = 6;</code>
     *
     * <pre>
     *已通关的信息
     * </pre>
     */
    public int getPassLayersCount() {
      return passLayers_.size();
    }
    /**
     * <code>repeated .PassLayerItemInfo passLayers = 6;</code>
     *
     * <pre>
     *已通关的信息
     * </pre>
     */
    public com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo getPassLayers(int index) {
      return passLayers_.get(index);
    }
    /**
     * <code>repeated .PassLayerItemInfo passLayers = 6;</code>
     *
     * <pre>
     *已通关的信息
     * </pre>
     */
    public com.guaji.game.protocol.ClimbingTower.PassLayerItemInfoOrBuilder getPassLayersOrBuilder(
        int index) {
      return passLayers_.get(index);
    }

    // required int32 sweepTimeRemain = 7;
    public static final int SWEEPTIMEREMAIN_FIELD_NUMBER = 7;
    private int sweepTimeRemain_;
    /**
     * <code>required int32 sweepTimeRemain = 7;</code>
     *
     * <pre>
     * 扫荡剩余时间
     * </pre>
     */
    public boolean hasSweepTimeRemain() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 sweepTimeRemain = 7;</code>
     *
     * <pre>
     * 扫荡剩余时间
     * </pre>
     */
    public int getSweepTimeRemain() {
      return sweepTimeRemain_;
    }

    private void initFields() {
      totalStar_ = 0;
      curLayer_ = com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo.getDefaultInstance();
      historicHighStar_ = 0;
      todayResetTimes_ = 0;
      sweepTimes_ = 0;
      passLayers_ = java.util.Collections.emptyList();
      sweepTimeRemain_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTotalStar()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCurLayer()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHistoricHighStar()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTodayResetTimes()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSweepTimes()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSweepTimeRemain()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getCurLayer().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getPassLayersCount(); i++) {
        if (!getPassLayers(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, totalStar_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, curLayer_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, historicHighStar_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, todayResetTimes_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, sweepTimes_);
      }
      for (int i = 0; i < passLayers_.size(); i++) {
        output.writeMessage(6, passLayers_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(7, sweepTimeRemain_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, totalStar_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, curLayer_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, historicHighStar_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, todayResetTimes_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, sweepTimes_);
      }
      for (int i = 0; i < passLayers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, passLayers_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, sweepTimeRemain_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.guaji.game.protocol.ClimbingTower.ClimbingTowerPlayerInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.guaji.game.protocol.ClimbingTower.ClimbingTowerPlayerInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.ClimbingTowerPlayerInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.guaji.game.protocol.ClimbingTower.ClimbingTowerPlayerInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.ClimbingTowerPlayerInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.guaji.game.protocol.ClimbingTower.ClimbingTowerPlayerInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.ClimbingTowerPlayerInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.guaji.game.protocol.ClimbingTower.ClimbingTowerPlayerInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.ClimbingTowerPlayerInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.guaji.game.protocol.ClimbingTower.ClimbingTowerPlayerInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.guaji.game.protocol.ClimbingTower.ClimbingTowerPlayerInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ClimbingTowerPlayerInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.guaji.game.protocol.ClimbingTower.ClimbingTowerPlayerInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.guaji.game.protocol.ClimbingTower.internal_static_ClimbingTowerPlayerInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.guaji.game.protocol.ClimbingTower.internal_static_ClimbingTowerPlayerInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.guaji.game.protocol.ClimbingTower.ClimbingTowerPlayerInfo.class, com.guaji.game.protocol.ClimbingTower.ClimbingTowerPlayerInfo.Builder.class);
      }

      // Construct using com.guaji.game.protocol.ClimbingTower.ClimbingTowerPlayerInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCurLayerFieldBuilder();
          getPassLayersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        totalStar_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (curLayerBuilder_ == null) {
          curLayer_ = com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo.getDefaultInstance();
        } else {
          curLayerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        historicHighStar_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        todayResetTimes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        sweepTimes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (passLayersBuilder_ == null) {
          passLayers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          passLayersBuilder_.clear();
        }
        sweepTimeRemain_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.guaji.game.protocol.ClimbingTower.internal_static_ClimbingTowerPlayerInfo_descriptor;
      }

      public com.guaji.game.protocol.ClimbingTower.ClimbingTowerPlayerInfo getDefaultInstanceForType() {
        return com.guaji.game.protocol.ClimbingTower.ClimbingTowerPlayerInfo.getDefaultInstance();
      }

      public com.guaji.game.protocol.ClimbingTower.ClimbingTowerPlayerInfo build() {
        com.guaji.game.protocol.ClimbingTower.ClimbingTowerPlayerInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.guaji.game.protocol.ClimbingTower.ClimbingTowerPlayerInfo buildPartial() {
        com.guaji.game.protocol.ClimbingTower.ClimbingTowerPlayerInfo result = new com.guaji.game.protocol.ClimbingTower.ClimbingTowerPlayerInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.totalStar_ = totalStar_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (curLayerBuilder_ == null) {
          result.curLayer_ = curLayer_;
        } else {
          result.curLayer_ = curLayerBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.historicHighStar_ = historicHighStar_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.todayResetTimes_ = todayResetTimes_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.sweepTimes_ = sweepTimes_;
        if (passLayersBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            passLayers_ = java.util.Collections.unmodifiableList(passLayers_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.passLayers_ = passLayers_;
        } else {
          result.passLayers_ = passLayersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.sweepTimeRemain_ = sweepTimeRemain_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.guaji.game.protocol.ClimbingTower.ClimbingTowerPlayerInfo) {
          return mergeFrom((com.guaji.game.protocol.ClimbingTower.ClimbingTowerPlayerInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.guaji.game.protocol.ClimbingTower.ClimbingTowerPlayerInfo other) {
        if (other == com.guaji.game.protocol.ClimbingTower.ClimbingTowerPlayerInfo.getDefaultInstance()) return this;
        if (other.hasTotalStar()) {
          setTotalStar(other.getTotalStar());
        }
        if (other.hasCurLayer()) {
          mergeCurLayer(other.getCurLayer());
        }
        if (other.hasHistoricHighStar()) {
          setHistoricHighStar(other.getHistoricHighStar());
        }
        if (other.hasTodayResetTimes()) {
          setTodayResetTimes(other.getTodayResetTimes());
        }
        if (other.hasSweepTimes()) {
          setSweepTimes(other.getSweepTimes());
        }
        if (passLayersBuilder_ == null) {
          if (!other.passLayers_.isEmpty()) {
            if (passLayers_.isEmpty()) {
              passLayers_ = other.passLayers_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensurePassLayersIsMutable();
              passLayers_.addAll(other.passLayers_);
            }
            onChanged();
          }
        } else {
          if (!other.passLayers_.isEmpty()) {
            if (passLayersBuilder_.isEmpty()) {
              passLayersBuilder_.dispose();
              passLayersBuilder_ = null;
              passLayers_ = other.passLayers_;
              bitField0_ = (bitField0_ & ~0x00000020);
              passLayersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPassLayersFieldBuilder() : null;
            } else {
              passLayersBuilder_.addAllMessages(other.passLayers_);
            }
          }
        }
        if (other.hasSweepTimeRemain()) {
          setSweepTimeRemain(other.getSweepTimeRemain());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTotalStar()) {
          
          return false;
        }
        if (!hasCurLayer()) {
          
          return false;
        }
        if (!hasHistoricHighStar()) {
          
          return false;
        }
        if (!hasTodayResetTimes()) {
          
          return false;
        }
        if (!hasSweepTimes()) {
          
          return false;
        }
        if (!hasSweepTimeRemain()) {
          
          return false;
        }
        if (!getCurLayer().isInitialized()) {
          
          return false;
        }
        for (int i = 0; i < getPassLayersCount(); i++) {
          if (!getPassLayers(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.guaji.game.protocol.ClimbingTower.ClimbingTowerPlayerInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.guaji.game.protocol.ClimbingTower.ClimbingTowerPlayerInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 totalStar = 1;
      private int totalStar_ ;
      /**
       * <code>required int32 totalStar = 1;</code>
       *
       * <pre>
       *当前挑战累计星数
       * </pre>
       */
      public boolean hasTotalStar() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 totalStar = 1;</code>
       *
       * <pre>
       *当前挑战累计星数
       * </pre>
       */
      public int getTotalStar() {
        return totalStar_;
      }
      /**
       * <code>required int32 totalStar = 1;</code>
       *
       * <pre>
       *当前挑战累计星数
       * </pre>
       */
      public Builder setTotalStar(int value) {
        bitField0_ |= 0x00000001;
        totalStar_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 totalStar = 1;</code>
       *
       * <pre>
       *当前挑战累计星数
       * </pre>
       */
      public Builder clearTotalStar() {
        bitField0_ = (bitField0_ & ~0x00000001);
        totalStar_ = 0;
        onChanged();
        return this;
      }

      // required .PassLayerItemInfo curLayer = 2;
      private com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo curLayer_ = com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo, com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo.Builder, com.guaji.game.protocol.ClimbingTower.PassLayerItemInfoOrBuilder> curLayerBuilder_;
      /**
       * <code>required .PassLayerItemInfo curLayer = 2;</code>
       *
       * <pre>
       *当前所在层数
       * </pre>
       */
      public boolean hasCurLayer() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .PassLayerItemInfo curLayer = 2;</code>
       *
       * <pre>
       *当前所在层数
       * </pre>
       */
      public com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo getCurLayer() {
        if (curLayerBuilder_ == null) {
          return curLayer_;
        } else {
          return curLayerBuilder_.getMessage();
        }
      }
      /**
       * <code>required .PassLayerItemInfo curLayer = 2;</code>
       *
       * <pre>
       *当前所在层数
       * </pre>
       */
      public Builder setCurLayer(com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo value) {
        if (curLayerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          curLayer_ = value;
          onChanged();
        } else {
          curLayerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .PassLayerItemInfo curLayer = 2;</code>
       *
       * <pre>
       *当前所在层数
       * </pre>
       */
      public Builder setCurLayer(
          com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo.Builder builderForValue) {
        if (curLayerBuilder_ == null) {
          curLayer_ = builderForValue.build();
          onChanged();
        } else {
          curLayerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .PassLayerItemInfo curLayer = 2;</code>
       *
       * <pre>
       *当前所在层数
       * </pre>
       */
      public Builder mergeCurLayer(com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo value) {
        if (curLayerBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              curLayer_ != com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo.getDefaultInstance()) {
            curLayer_ =
              com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo.newBuilder(curLayer_).mergeFrom(value).buildPartial();
          } else {
            curLayer_ = value;
          }
          onChanged();
        } else {
          curLayerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .PassLayerItemInfo curLayer = 2;</code>
       *
       * <pre>
       *当前所在层数
       * </pre>
       */
      public Builder clearCurLayer() {
        if (curLayerBuilder_ == null) {
          curLayer_ = com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo.getDefaultInstance();
          onChanged();
        } else {
          curLayerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .PassLayerItemInfo curLayer = 2;</code>
       *
       * <pre>
       *当前所在层数
       * </pre>
       */
      public com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo.Builder getCurLayerBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getCurLayerFieldBuilder().getBuilder();
      }
      /**
       * <code>required .PassLayerItemInfo curLayer = 2;</code>
       *
       * <pre>
       *当前所在层数
       * </pre>
       */
      public com.guaji.game.protocol.ClimbingTower.PassLayerItemInfoOrBuilder getCurLayerOrBuilder() {
        if (curLayerBuilder_ != null) {
          return curLayerBuilder_.getMessageOrBuilder();
        } else {
          return curLayer_;
        }
      }
      /**
       * <code>required .PassLayerItemInfo curLayer = 2;</code>
       *
       * <pre>
       *当前所在层数
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo, com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo.Builder, com.guaji.game.protocol.ClimbingTower.PassLayerItemInfoOrBuilder> 
          getCurLayerFieldBuilder() {
        if (curLayerBuilder_ == null) {
          curLayerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo, com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo.Builder, com.guaji.game.protocol.ClimbingTower.PassLayerItemInfoOrBuilder>(
                  curLayer_,
                  getParentForChildren(),
                  isClean());
          curLayer_ = null;
        }
        return curLayerBuilder_;
      }

      // required int32 historicHighStar = 3;
      private int historicHighStar_ ;
      /**
       * <code>required int32 historicHighStar = 3;</code>
       *
       * <pre>
       *历史最高星数
       * </pre>
       */
      public boolean hasHistoricHighStar() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 historicHighStar = 3;</code>
       *
       * <pre>
       *历史最高星数
       * </pre>
       */
      public int getHistoricHighStar() {
        return historicHighStar_;
      }
      /**
       * <code>required int32 historicHighStar = 3;</code>
       *
       * <pre>
       *历史最高星数
       * </pre>
       */
      public Builder setHistoricHighStar(int value) {
        bitField0_ |= 0x00000004;
        historicHighStar_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 historicHighStar = 3;</code>
       *
       * <pre>
       *历史最高星数
       * </pre>
       */
      public Builder clearHistoricHighStar() {
        bitField0_ = (bitField0_ & ~0x00000004);
        historicHighStar_ = 0;
        onChanged();
        return this;
      }

      // required int32 todayResetTimes = 4;
      private int todayResetTimes_ ;
      /**
       * <code>required int32 todayResetTimes = 4;</code>
       *
       * <pre>
       *当前天重置次数
       * </pre>
       */
      public boolean hasTodayResetTimes() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 todayResetTimes = 4;</code>
       *
       * <pre>
       *当前天重置次数
       * </pre>
       */
      public int getTodayResetTimes() {
        return todayResetTimes_;
      }
      /**
       * <code>required int32 todayResetTimes = 4;</code>
       *
       * <pre>
       *当前天重置次数
       * </pre>
       */
      public Builder setTodayResetTimes(int value) {
        bitField0_ |= 0x00000008;
        todayResetTimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 todayResetTimes = 4;</code>
       *
       * <pre>
       *当前天重置次数
       * </pre>
       */
      public Builder clearTodayResetTimes() {
        bitField0_ = (bitField0_ & ~0x00000008);
        todayResetTimes_ = 0;
        onChanged();
        return this;
      }

      // required int32 sweepTimes = 5;
      private int sweepTimes_ ;
      /**
       * <code>required int32 sweepTimes = 5;</code>
       *
       * <pre>
       *扫荡次数
       * </pre>
       */
      public boolean hasSweepTimes() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 sweepTimes = 5;</code>
       *
       * <pre>
       *扫荡次数
       * </pre>
       */
      public int getSweepTimes() {
        return sweepTimes_;
      }
      /**
       * <code>required int32 sweepTimes = 5;</code>
       *
       * <pre>
       *扫荡次数
       * </pre>
       */
      public Builder setSweepTimes(int value) {
        bitField0_ |= 0x00000010;
        sweepTimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 sweepTimes = 5;</code>
       *
       * <pre>
       *扫荡次数
       * </pre>
       */
      public Builder clearSweepTimes() {
        bitField0_ = (bitField0_ & ~0x00000010);
        sweepTimes_ = 0;
        onChanged();
        return this;
      }

      // repeated .PassLayerItemInfo passLayers = 6;
      private java.util.List<com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo> passLayers_ =
        java.util.Collections.emptyList();
      private void ensurePassLayersIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          passLayers_ = new java.util.ArrayList<com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo>(passLayers_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo, com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo.Builder, com.guaji.game.protocol.ClimbingTower.PassLayerItemInfoOrBuilder> passLayersBuilder_;

      /**
       * <code>repeated .PassLayerItemInfo passLayers = 6;</code>
       *
       * <pre>
       *已通关的信息
       * </pre>
       */
      public java.util.List<com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo> getPassLayersList() {
        if (passLayersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(passLayers_);
        } else {
          return passLayersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .PassLayerItemInfo passLayers = 6;</code>
       *
       * <pre>
       *已通关的信息
       * </pre>
       */
      public int getPassLayersCount() {
        if (passLayersBuilder_ == null) {
          return passLayers_.size();
        } else {
          return passLayersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .PassLayerItemInfo passLayers = 6;</code>
       *
       * <pre>
       *已通关的信息
       * </pre>
       */
      public com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo getPassLayers(int index) {
        if (passLayersBuilder_ == null) {
          return passLayers_.get(index);
        } else {
          return passLayersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .PassLayerItemInfo passLayers = 6;</code>
       *
       * <pre>
       *已通关的信息
       * </pre>
       */
      public Builder setPassLayers(
          int index, com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo value) {
        if (passLayersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePassLayersIsMutable();
          passLayers_.set(index, value);
          onChanged();
        } else {
          passLayersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .PassLayerItemInfo passLayers = 6;</code>
       *
       * <pre>
       *已通关的信息
       * </pre>
       */
      public Builder setPassLayers(
          int index, com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo.Builder builderForValue) {
        if (passLayersBuilder_ == null) {
          ensurePassLayersIsMutable();
          passLayers_.set(index, builderForValue.build());
          onChanged();
        } else {
          passLayersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PassLayerItemInfo passLayers = 6;</code>
       *
       * <pre>
       *已通关的信息
       * </pre>
       */
      public Builder addPassLayers(com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo value) {
        if (passLayersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePassLayersIsMutable();
          passLayers_.add(value);
          onChanged();
        } else {
          passLayersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .PassLayerItemInfo passLayers = 6;</code>
       *
       * <pre>
       *已通关的信息
       * </pre>
       */
      public Builder addPassLayers(
          int index, com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo value) {
        if (passLayersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePassLayersIsMutable();
          passLayers_.add(index, value);
          onChanged();
        } else {
          passLayersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .PassLayerItemInfo passLayers = 6;</code>
       *
       * <pre>
       *已通关的信息
       * </pre>
       */
      public Builder addPassLayers(
          com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo.Builder builderForValue) {
        if (passLayersBuilder_ == null) {
          ensurePassLayersIsMutable();
          passLayers_.add(builderForValue.build());
          onChanged();
        } else {
          passLayersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PassLayerItemInfo passLayers = 6;</code>
       *
       * <pre>
       *已通关的信息
       * </pre>
       */
      public Builder addPassLayers(
          int index, com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo.Builder builderForValue) {
        if (passLayersBuilder_ == null) {
          ensurePassLayersIsMutable();
          passLayers_.add(index, builderForValue.build());
          onChanged();
        } else {
          passLayersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PassLayerItemInfo passLayers = 6;</code>
       *
       * <pre>
       *已通关的信息
       * </pre>
       */
      public Builder addAllPassLayers(
          java.lang.Iterable<? extends com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo> values) {
        if (passLayersBuilder_ == null) {
          ensurePassLayersIsMutable();
          super.addAll(values, passLayers_);
          onChanged();
        } else {
          passLayersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .PassLayerItemInfo passLayers = 6;</code>
       *
       * <pre>
       *已通关的信息
       * </pre>
       */
      public Builder clearPassLayers() {
        if (passLayersBuilder_ == null) {
          passLayers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          passLayersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .PassLayerItemInfo passLayers = 6;</code>
       *
       * <pre>
       *已通关的信息
       * </pre>
       */
      public Builder removePassLayers(int index) {
        if (passLayersBuilder_ == null) {
          ensurePassLayersIsMutable();
          passLayers_.remove(index);
          onChanged();
        } else {
          passLayersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .PassLayerItemInfo passLayers = 6;</code>
       *
       * <pre>
       *已通关的信息
       * </pre>
       */
      public com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo.Builder getPassLayersBuilder(
          int index) {
        return getPassLayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .PassLayerItemInfo passLayers = 6;</code>
       *
       * <pre>
       *已通关的信息
       * </pre>
       */
      public com.guaji.game.protocol.ClimbingTower.PassLayerItemInfoOrBuilder getPassLayersOrBuilder(
          int index) {
        if (passLayersBuilder_ == null) {
          return passLayers_.get(index);  } else {
          return passLayersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .PassLayerItemInfo passLayers = 6;</code>
       *
       * <pre>
       *已通关的信息
       * </pre>
       */
      public java.util.List<? extends com.guaji.game.protocol.ClimbingTower.PassLayerItemInfoOrBuilder> 
           getPassLayersOrBuilderList() {
        if (passLayersBuilder_ != null) {
          return passLayersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(passLayers_);
        }
      }
      /**
       * <code>repeated .PassLayerItemInfo passLayers = 6;</code>
       *
       * <pre>
       *已通关的信息
       * </pre>
       */
      public com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo.Builder addPassLayersBuilder() {
        return getPassLayersFieldBuilder().addBuilder(
            com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .PassLayerItemInfo passLayers = 6;</code>
       *
       * <pre>
       *已通关的信息
       * </pre>
       */
      public com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo.Builder addPassLayersBuilder(
          int index) {
        return getPassLayersFieldBuilder().addBuilder(
            index, com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .PassLayerItemInfo passLayers = 6;</code>
       *
       * <pre>
       *已通关的信息
       * </pre>
       */
      public java.util.List<com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo.Builder> 
           getPassLayersBuilderList() {
        return getPassLayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo, com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo.Builder, com.guaji.game.protocol.ClimbingTower.PassLayerItemInfoOrBuilder> 
          getPassLayersFieldBuilder() {
        if (passLayersBuilder_ == null) {
          passLayersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo, com.guaji.game.protocol.ClimbingTower.PassLayerItemInfo.Builder, com.guaji.game.protocol.ClimbingTower.PassLayerItemInfoOrBuilder>(
                  passLayers_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          passLayers_ = null;
        }
        return passLayersBuilder_;
      }

      // required int32 sweepTimeRemain = 7;
      private int sweepTimeRemain_ ;
      /**
       * <code>required int32 sweepTimeRemain = 7;</code>
       *
       * <pre>
       * 扫荡剩余时间
       * </pre>
       */
      public boolean hasSweepTimeRemain() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int32 sweepTimeRemain = 7;</code>
       *
       * <pre>
       * 扫荡剩余时间
       * </pre>
       */
      public int getSweepTimeRemain() {
        return sweepTimeRemain_;
      }
      /**
       * <code>required int32 sweepTimeRemain = 7;</code>
       *
       * <pre>
       * 扫荡剩余时间
       * </pre>
       */
      public Builder setSweepTimeRemain(int value) {
        bitField0_ |= 0x00000040;
        sweepTimeRemain_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 sweepTimeRemain = 7;</code>
       *
       * <pre>
       * 扫荡剩余时间
       * </pre>
       */
      public Builder clearSweepTimeRemain() {
        bitField0_ = (bitField0_ & ~0x00000040);
        sweepTimeRemain_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ClimbingTowerPlayerInfo)
    }

    static {
      defaultInstance = new ClimbingTowerPlayerInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ClimbingTowerPlayerInfo)
  }

  public interface HPClimbingTowerListSyncSOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .ClimbingTowerItemInfo self = 1;
    /**
     * <code>required .ClimbingTowerItemInfo self = 1;</code>
     *
     * <pre>
     * 主角爬塔信息
     * </pre>
     */
    boolean hasSelf();
    /**
     * <code>required .ClimbingTowerItemInfo self = 1;</code>
     *
     * <pre>
     * 主角爬塔信息
     * </pre>
     */
    com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo getSelf();
    /**
     * <code>required .ClimbingTowerItemInfo self = 1;</code>
     *
     * <pre>
     * 主角爬塔信息
     * </pre>
     */
    com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfoOrBuilder getSelfOrBuilder();

    // repeated .ClimbingTowerItemInfo ranks = 2;
    /**
     * <code>repeated .ClimbingTowerItemInfo ranks = 2;</code>
     *
     * <pre>
     * 爬塔信息列表
     * </pre>
     */
    java.util.List<com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo> 
        getRanksList();
    /**
     * <code>repeated .ClimbingTowerItemInfo ranks = 2;</code>
     *
     * <pre>
     * 爬塔信息列表
     * </pre>
     */
    com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo getRanks(int index);
    /**
     * <code>repeated .ClimbingTowerItemInfo ranks = 2;</code>
     *
     * <pre>
     * 爬塔信息列表
     * </pre>
     */
    int getRanksCount();
    /**
     * <code>repeated .ClimbingTowerItemInfo ranks = 2;</code>
     *
     * <pre>
     * 爬塔信息列表
     * </pre>
     */
    java.util.List<? extends com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfoOrBuilder> 
        getRanksOrBuilderList();
    /**
     * <code>repeated .ClimbingTowerItemInfo ranks = 2;</code>
     *
     * <pre>
     * 爬塔信息列表
     * </pre>
     */
    com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfoOrBuilder getRanksOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code HPClimbingTowerListSyncS}
   *
   * <pre>
   * 爬塔信息排行榜返回
   * </pre>
   */
  public static final class HPClimbingTowerListSyncS extends
      com.google.protobuf.GeneratedMessage
      implements HPClimbingTowerListSyncSOrBuilder {
    // Use HPClimbingTowerListSyncS.newBuilder() to construct.
    private HPClimbingTowerListSyncS(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HPClimbingTowerListSyncS(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HPClimbingTowerListSyncS defaultInstance;
    public static HPClimbingTowerListSyncS getDefaultInstance() {
      return defaultInstance;
    }

    public HPClimbingTowerListSyncS getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HPClimbingTowerListSyncS(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = self_.toBuilder();
              }
              self_ = input.readMessage(com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(self_);
                self_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                ranks_ = new java.util.ArrayList<com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo>();
                mutable_bitField0_ |= 0x00000002;
              }
              ranks_.add(input.readMessage(com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          ranks_ = java.util.Collections.unmodifiableList(ranks_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.guaji.game.protocol.ClimbingTower.internal_static_HPClimbingTowerListSyncS_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.guaji.game.protocol.ClimbingTower.internal_static_HPClimbingTowerListSyncS_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListSyncS.class, com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListSyncS.Builder.class);
    }

    public static com.google.protobuf.Parser<HPClimbingTowerListSyncS> PARSER =
        new com.google.protobuf.AbstractParser<HPClimbingTowerListSyncS>() {
      public HPClimbingTowerListSyncS parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HPClimbingTowerListSyncS(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HPClimbingTowerListSyncS> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .ClimbingTowerItemInfo self = 1;
    public static final int SELF_FIELD_NUMBER = 1;
    private com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo self_;
    /**
     * <code>required .ClimbingTowerItemInfo self = 1;</code>
     *
     * <pre>
     * 主角爬塔信息
     * </pre>
     */
    public boolean hasSelf() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .ClimbingTowerItemInfo self = 1;</code>
     *
     * <pre>
     * 主角爬塔信息
     * </pre>
     */
    public com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo getSelf() {
      return self_;
    }
    /**
     * <code>required .ClimbingTowerItemInfo self = 1;</code>
     *
     * <pre>
     * 主角爬塔信息
     * </pre>
     */
    public com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfoOrBuilder getSelfOrBuilder() {
      return self_;
    }

    // repeated .ClimbingTowerItemInfo ranks = 2;
    public static final int RANKS_FIELD_NUMBER = 2;
    private java.util.List<com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo> ranks_;
    /**
     * <code>repeated .ClimbingTowerItemInfo ranks = 2;</code>
     *
     * <pre>
     * 爬塔信息列表
     * </pre>
     */
    public java.util.List<com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo> getRanksList() {
      return ranks_;
    }
    /**
     * <code>repeated .ClimbingTowerItemInfo ranks = 2;</code>
     *
     * <pre>
     * 爬塔信息列表
     * </pre>
     */
    public java.util.List<? extends com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfoOrBuilder> 
        getRanksOrBuilderList() {
      return ranks_;
    }
    /**
     * <code>repeated .ClimbingTowerItemInfo ranks = 2;</code>
     *
     * <pre>
     * 爬塔信息列表
     * </pre>
     */
    public int getRanksCount() {
      return ranks_.size();
    }
    /**
     * <code>repeated .ClimbingTowerItemInfo ranks = 2;</code>
     *
     * <pre>
     * 爬塔信息列表
     * </pre>
     */
    public com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo getRanks(int index) {
      return ranks_.get(index);
    }
    /**
     * <code>repeated .ClimbingTowerItemInfo ranks = 2;</code>
     *
     * <pre>
     * 爬塔信息列表
     * </pre>
     */
    public com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfoOrBuilder getRanksOrBuilder(
        int index) {
      return ranks_.get(index);
    }

    private void initFields() {
      self_ = com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo.getDefaultInstance();
      ranks_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSelf()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getSelf().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getRanksCount(); i++) {
        if (!getRanks(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, self_);
      }
      for (int i = 0; i < ranks_.size(); i++) {
        output.writeMessage(2, ranks_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, self_);
      }
      for (int i = 0; i < ranks_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, ranks_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListSyncS parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListSyncS parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListSyncS parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListSyncS parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListSyncS parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListSyncS parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListSyncS parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListSyncS parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListSyncS parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListSyncS parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListSyncS prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code HPClimbingTowerListSyncS}
     *
     * <pre>
     * 爬塔信息排行榜返回
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListSyncSOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.guaji.game.protocol.ClimbingTower.internal_static_HPClimbingTowerListSyncS_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.guaji.game.protocol.ClimbingTower.internal_static_HPClimbingTowerListSyncS_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListSyncS.class, com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListSyncS.Builder.class);
      }

      // Construct using com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListSyncS.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSelfFieldBuilder();
          getRanksFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (selfBuilder_ == null) {
          self_ = com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo.getDefaultInstance();
        } else {
          selfBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (ranksBuilder_ == null) {
          ranks_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ranksBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.guaji.game.protocol.ClimbingTower.internal_static_HPClimbingTowerListSyncS_descriptor;
      }

      public com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListSyncS getDefaultInstanceForType() {
        return com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListSyncS.getDefaultInstance();
      }

      public com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListSyncS build() {
        com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListSyncS result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListSyncS buildPartial() {
        com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListSyncS result = new com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListSyncS(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (selfBuilder_ == null) {
          result.self_ = self_;
        } else {
          result.self_ = selfBuilder_.build();
        }
        if (ranksBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            ranks_ = java.util.Collections.unmodifiableList(ranks_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.ranks_ = ranks_;
        } else {
          result.ranks_ = ranksBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListSyncS) {
          return mergeFrom((com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListSyncS)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListSyncS other) {
        if (other == com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListSyncS.getDefaultInstance()) return this;
        if (other.hasSelf()) {
          mergeSelf(other.getSelf());
        }
        if (ranksBuilder_ == null) {
          if (!other.ranks_.isEmpty()) {
            if (ranks_.isEmpty()) {
              ranks_ = other.ranks_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureRanksIsMutable();
              ranks_.addAll(other.ranks_);
            }
            onChanged();
          }
        } else {
          if (!other.ranks_.isEmpty()) {
            if (ranksBuilder_.isEmpty()) {
              ranksBuilder_.dispose();
              ranksBuilder_ = null;
              ranks_ = other.ranks_;
              bitField0_ = (bitField0_ & ~0x00000002);
              ranksBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRanksFieldBuilder() : null;
            } else {
              ranksBuilder_.addAllMessages(other.ranks_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSelf()) {
          
          return false;
        }
        if (!getSelf().isInitialized()) {
          
          return false;
        }
        for (int i = 0; i < getRanksCount(); i++) {
          if (!getRanks(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListSyncS parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListSyncS) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .ClimbingTowerItemInfo self = 1;
      private com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo self_ = com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo, com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo.Builder, com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfoOrBuilder> selfBuilder_;
      /**
       * <code>required .ClimbingTowerItemInfo self = 1;</code>
       *
       * <pre>
       * 主角爬塔信息
       * </pre>
       */
      public boolean hasSelf() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .ClimbingTowerItemInfo self = 1;</code>
       *
       * <pre>
       * 主角爬塔信息
       * </pre>
       */
      public com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo getSelf() {
        if (selfBuilder_ == null) {
          return self_;
        } else {
          return selfBuilder_.getMessage();
        }
      }
      /**
       * <code>required .ClimbingTowerItemInfo self = 1;</code>
       *
       * <pre>
       * 主角爬塔信息
       * </pre>
       */
      public Builder setSelf(com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo value) {
        if (selfBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          self_ = value;
          onChanged();
        } else {
          selfBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .ClimbingTowerItemInfo self = 1;</code>
       *
       * <pre>
       * 主角爬塔信息
       * </pre>
       */
      public Builder setSelf(
          com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo.Builder builderForValue) {
        if (selfBuilder_ == null) {
          self_ = builderForValue.build();
          onChanged();
        } else {
          selfBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .ClimbingTowerItemInfo self = 1;</code>
       *
       * <pre>
       * 主角爬塔信息
       * </pre>
       */
      public Builder mergeSelf(com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo value) {
        if (selfBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              self_ != com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo.getDefaultInstance()) {
            self_ =
              com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo.newBuilder(self_).mergeFrom(value).buildPartial();
          } else {
            self_ = value;
          }
          onChanged();
        } else {
          selfBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .ClimbingTowerItemInfo self = 1;</code>
       *
       * <pre>
       * 主角爬塔信息
       * </pre>
       */
      public Builder clearSelf() {
        if (selfBuilder_ == null) {
          self_ = com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo.getDefaultInstance();
          onChanged();
        } else {
          selfBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .ClimbingTowerItemInfo self = 1;</code>
       *
       * <pre>
       * 主角爬塔信息
       * </pre>
       */
      public com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo.Builder getSelfBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getSelfFieldBuilder().getBuilder();
      }
      /**
       * <code>required .ClimbingTowerItemInfo self = 1;</code>
       *
       * <pre>
       * 主角爬塔信息
       * </pre>
       */
      public com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfoOrBuilder getSelfOrBuilder() {
        if (selfBuilder_ != null) {
          return selfBuilder_.getMessageOrBuilder();
        } else {
          return self_;
        }
      }
      /**
       * <code>required .ClimbingTowerItemInfo self = 1;</code>
       *
       * <pre>
       * 主角爬塔信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo, com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo.Builder, com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfoOrBuilder> 
          getSelfFieldBuilder() {
        if (selfBuilder_ == null) {
          selfBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo, com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo.Builder, com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfoOrBuilder>(
                  self_,
                  getParentForChildren(),
                  isClean());
          self_ = null;
        }
        return selfBuilder_;
      }

      // repeated .ClimbingTowerItemInfo ranks = 2;
      private java.util.List<com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo> ranks_ =
        java.util.Collections.emptyList();
      private void ensureRanksIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          ranks_ = new java.util.ArrayList<com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo>(ranks_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo, com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo.Builder, com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfoOrBuilder> ranksBuilder_;

      /**
       * <code>repeated .ClimbingTowerItemInfo ranks = 2;</code>
       *
       * <pre>
       * 爬塔信息列表
       * </pre>
       */
      public java.util.List<com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo> getRanksList() {
        if (ranksBuilder_ == null) {
          return java.util.Collections.unmodifiableList(ranks_);
        } else {
          return ranksBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ClimbingTowerItemInfo ranks = 2;</code>
       *
       * <pre>
       * 爬塔信息列表
       * </pre>
       */
      public int getRanksCount() {
        if (ranksBuilder_ == null) {
          return ranks_.size();
        } else {
          return ranksBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ClimbingTowerItemInfo ranks = 2;</code>
       *
       * <pre>
       * 爬塔信息列表
       * </pre>
       */
      public com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo getRanks(int index) {
        if (ranksBuilder_ == null) {
          return ranks_.get(index);
        } else {
          return ranksBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ClimbingTowerItemInfo ranks = 2;</code>
       *
       * <pre>
       * 爬塔信息列表
       * </pre>
       */
      public Builder setRanks(
          int index, com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo value) {
        if (ranksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRanksIsMutable();
          ranks_.set(index, value);
          onChanged();
        } else {
          ranksBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ClimbingTowerItemInfo ranks = 2;</code>
       *
       * <pre>
       * 爬塔信息列表
       * </pre>
       */
      public Builder setRanks(
          int index, com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo.Builder builderForValue) {
        if (ranksBuilder_ == null) {
          ensureRanksIsMutable();
          ranks_.set(index, builderForValue.build());
          onChanged();
        } else {
          ranksBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ClimbingTowerItemInfo ranks = 2;</code>
       *
       * <pre>
       * 爬塔信息列表
       * </pre>
       */
      public Builder addRanks(com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo value) {
        if (ranksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRanksIsMutable();
          ranks_.add(value);
          onChanged();
        } else {
          ranksBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ClimbingTowerItemInfo ranks = 2;</code>
       *
       * <pre>
       * 爬塔信息列表
       * </pre>
       */
      public Builder addRanks(
          int index, com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo value) {
        if (ranksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRanksIsMutable();
          ranks_.add(index, value);
          onChanged();
        } else {
          ranksBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ClimbingTowerItemInfo ranks = 2;</code>
       *
       * <pre>
       * 爬塔信息列表
       * </pre>
       */
      public Builder addRanks(
          com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo.Builder builderForValue) {
        if (ranksBuilder_ == null) {
          ensureRanksIsMutable();
          ranks_.add(builderForValue.build());
          onChanged();
        } else {
          ranksBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ClimbingTowerItemInfo ranks = 2;</code>
       *
       * <pre>
       * 爬塔信息列表
       * </pre>
       */
      public Builder addRanks(
          int index, com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo.Builder builderForValue) {
        if (ranksBuilder_ == null) {
          ensureRanksIsMutable();
          ranks_.add(index, builderForValue.build());
          onChanged();
        } else {
          ranksBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ClimbingTowerItemInfo ranks = 2;</code>
       *
       * <pre>
       * 爬塔信息列表
       * </pre>
       */
      public Builder addAllRanks(
          java.lang.Iterable<? extends com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo> values) {
        if (ranksBuilder_ == null) {
          ensureRanksIsMutable();
          super.addAll(values, ranks_);
          onChanged();
        } else {
          ranksBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ClimbingTowerItemInfo ranks = 2;</code>
       *
       * <pre>
       * 爬塔信息列表
       * </pre>
       */
      public Builder clearRanks() {
        if (ranksBuilder_ == null) {
          ranks_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          ranksBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ClimbingTowerItemInfo ranks = 2;</code>
       *
       * <pre>
       * 爬塔信息列表
       * </pre>
       */
      public Builder removeRanks(int index) {
        if (ranksBuilder_ == null) {
          ensureRanksIsMutable();
          ranks_.remove(index);
          onChanged();
        } else {
          ranksBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ClimbingTowerItemInfo ranks = 2;</code>
       *
       * <pre>
       * 爬塔信息列表
       * </pre>
       */
      public com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo.Builder getRanksBuilder(
          int index) {
        return getRanksFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ClimbingTowerItemInfo ranks = 2;</code>
       *
       * <pre>
       * 爬塔信息列表
       * </pre>
       */
      public com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfoOrBuilder getRanksOrBuilder(
          int index) {
        if (ranksBuilder_ == null) {
          return ranks_.get(index);  } else {
          return ranksBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ClimbingTowerItemInfo ranks = 2;</code>
       *
       * <pre>
       * 爬塔信息列表
       * </pre>
       */
      public java.util.List<? extends com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfoOrBuilder> 
           getRanksOrBuilderList() {
        if (ranksBuilder_ != null) {
          return ranksBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(ranks_);
        }
      }
      /**
       * <code>repeated .ClimbingTowerItemInfo ranks = 2;</code>
       *
       * <pre>
       * 爬塔信息列表
       * </pre>
       */
      public com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo.Builder addRanksBuilder() {
        return getRanksFieldBuilder().addBuilder(
            com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .ClimbingTowerItemInfo ranks = 2;</code>
       *
       * <pre>
       * 爬塔信息列表
       * </pre>
       */
      public com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo.Builder addRanksBuilder(
          int index) {
        return getRanksFieldBuilder().addBuilder(
            index, com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .ClimbingTowerItemInfo ranks = 2;</code>
       *
       * <pre>
       * 爬塔信息列表
       * </pre>
       */
      public java.util.List<com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo.Builder> 
           getRanksBuilderList() {
        return getRanksFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo, com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo.Builder, com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfoOrBuilder> 
          getRanksFieldBuilder() {
        if (ranksBuilder_ == null) {
          ranksBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo, com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfo.Builder, com.guaji.game.protocol.ClimbingTower.ClimbingTowerItemInfoOrBuilder>(
                  ranks_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          ranks_ = null;
        }
        return ranksBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:HPClimbingTowerListSyncS)
    }

    static {
      defaultInstance = new HPClimbingTowerListSyncS(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:HPClimbingTowerListSyncS)
  }

  public interface HPClimbingTowerSweepSyncSOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 sweepLayer = 1;
    /**
     * <code>repeated int32 sweepLayer = 1;</code>
     *
     * <pre>
     * 扫荡关卡列表
     * </pre>
     */
    java.util.List<java.lang.Integer> getSweepLayerList();
    /**
     * <code>repeated int32 sweepLayer = 1;</code>
     *
     * <pre>
     * 扫荡关卡列表
     * </pre>
     */
    int getSweepLayerCount();
    /**
     * <code>repeated int32 sweepLayer = 1;</code>
     *
     * <pre>
     * 扫荡关卡列表
     * </pre>
     */
    int getSweepLayer(int index);

    // required int32 stopLayer = 2;
    /**
     * <code>required int32 stopLayer = 2;</code>
     *
     * <pre>
     * 扫荡至某关终止
     * </pre>
     */
    boolean hasStopLayer();
    /**
     * <code>required int32 stopLayer = 2;</code>
     *
     * <pre>
     * 扫荡至某关终止
     * </pre>
     */
    int getStopLayer();

    // required int32 timeRemain = 3;
    /**
     * <code>required int32 timeRemain = 3;</code>
     *
     * <pre>
     * 扫荡剩余时间
     * </pre>
     */
    boolean hasTimeRemain();
    /**
     * <code>required int32 timeRemain = 3;</code>
     *
     * <pre>
     * 扫荡剩余时间
     * </pre>
     */
    int getTimeRemain();
  }
  /**
   * Protobuf type {@code HPClimbingTowerSweepSyncS}
   *
   * <pre>
   * 爬塔扫荡返回
   * </pre>
   */
  public static final class HPClimbingTowerSweepSyncS extends
      com.google.protobuf.GeneratedMessage
      implements HPClimbingTowerSweepSyncSOrBuilder {
    // Use HPClimbingTowerSweepSyncS.newBuilder() to construct.
    private HPClimbingTowerSweepSyncS(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HPClimbingTowerSweepSyncS(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HPClimbingTowerSweepSyncS defaultInstance;
    public static HPClimbingTowerSweepSyncS getDefaultInstance() {
      return defaultInstance;
    }

    public HPClimbingTowerSweepSyncS getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HPClimbingTowerSweepSyncS(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                sweepLayer_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              sweepLayer_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                sweepLayer_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                sweepLayer_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              stopLayer_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              timeRemain_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          sweepLayer_ = java.util.Collections.unmodifiableList(sweepLayer_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.guaji.game.protocol.ClimbingTower.internal_static_HPClimbingTowerSweepSyncS_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.guaji.game.protocol.ClimbingTower.internal_static_HPClimbingTowerSweepSyncS_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepSyncS.class, com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepSyncS.Builder.class);
    }

    public static com.google.protobuf.Parser<HPClimbingTowerSweepSyncS> PARSER =
        new com.google.protobuf.AbstractParser<HPClimbingTowerSweepSyncS>() {
      public HPClimbingTowerSweepSyncS parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HPClimbingTowerSweepSyncS(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HPClimbingTowerSweepSyncS> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated int32 sweepLayer = 1;
    public static final int SWEEPLAYER_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> sweepLayer_;
    /**
     * <code>repeated int32 sweepLayer = 1;</code>
     *
     * <pre>
     * 扫荡关卡列表
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getSweepLayerList() {
      return sweepLayer_;
    }
    /**
     * <code>repeated int32 sweepLayer = 1;</code>
     *
     * <pre>
     * 扫荡关卡列表
     * </pre>
     */
    public int getSweepLayerCount() {
      return sweepLayer_.size();
    }
    /**
     * <code>repeated int32 sweepLayer = 1;</code>
     *
     * <pre>
     * 扫荡关卡列表
     * </pre>
     */
    public int getSweepLayer(int index) {
      return sweepLayer_.get(index);
    }

    // required int32 stopLayer = 2;
    public static final int STOPLAYER_FIELD_NUMBER = 2;
    private int stopLayer_;
    /**
     * <code>required int32 stopLayer = 2;</code>
     *
     * <pre>
     * 扫荡至某关终止
     * </pre>
     */
    public boolean hasStopLayer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 stopLayer = 2;</code>
     *
     * <pre>
     * 扫荡至某关终止
     * </pre>
     */
    public int getStopLayer() {
      return stopLayer_;
    }

    // required int32 timeRemain = 3;
    public static final int TIMEREMAIN_FIELD_NUMBER = 3;
    private int timeRemain_;
    /**
     * <code>required int32 timeRemain = 3;</code>
     *
     * <pre>
     * 扫荡剩余时间
     * </pre>
     */
    public boolean hasTimeRemain() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 timeRemain = 3;</code>
     *
     * <pre>
     * 扫荡剩余时间
     * </pre>
     */
    public int getTimeRemain() {
      return timeRemain_;
    }

    private void initFields() {
      sweepLayer_ = java.util.Collections.emptyList();
      stopLayer_ = 0;
      timeRemain_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasStopLayer()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimeRemain()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < sweepLayer_.size(); i++) {
        output.writeInt32(1, sweepLayer_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, stopLayer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, timeRemain_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < sweepLayer_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(sweepLayer_.get(i));
        }
        size += dataSize;
        size += 1 * getSweepLayerList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, stopLayer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, timeRemain_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepSyncS parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepSyncS parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepSyncS parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepSyncS parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepSyncS parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepSyncS parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepSyncS parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepSyncS parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepSyncS parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepSyncS parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepSyncS prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code HPClimbingTowerSweepSyncS}
     *
     * <pre>
     * 爬塔扫荡返回
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepSyncSOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.guaji.game.protocol.ClimbingTower.internal_static_HPClimbingTowerSweepSyncS_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.guaji.game.protocol.ClimbingTower.internal_static_HPClimbingTowerSweepSyncS_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepSyncS.class, com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepSyncS.Builder.class);
      }

      // Construct using com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepSyncS.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        sweepLayer_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        stopLayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        timeRemain_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.guaji.game.protocol.ClimbingTower.internal_static_HPClimbingTowerSweepSyncS_descriptor;
      }

      public com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepSyncS getDefaultInstanceForType() {
        return com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepSyncS.getDefaultInstance();
      }

      public com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepSyncS build() {
        com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepSyncS result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepSyncS buildPartial() {
        com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepSyncS result = new com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepSyncS(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          sweepLayer_ = java.util.Collections.unmodifiableList(sweepLayer_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.sweepLayer_ = sweepLayer_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.stopLayer_ = stopLayer_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.timeRemain_ = timeRemain_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepSyncS) {
          return mergeFrom((com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepSyncS)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepSyncS other) {
        if (other == com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepSyncS.getDefaultInstance()) return this;
        if (!other.sweepLayer_.isEmpty()) {
          if (sweepLayer_.isEmpty()) {
            sweepLayer_ = other.sweepLayer_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureSweepLayerIsMutable();
            sweepLayer_.addAll(other.sweepLayer_);
          }
          onChanged();
        }
        if (other.hasStopLayer()) {
          setStopLayer(other.getStopLayer());
        }
        if (other.hasTimeRemain()) {
          setTimeRemain(other.getTimeRemain());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasStopLayer()) {
          
          return false;
        }
        if (!hasTimeRemain()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepSyncS parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepSyncS) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 sweepLayer = 1;
      private java.util.List<java.lang.Integer> sweepLayer_ = java.util.Collections.emptyList();
      private void ensureSweepLayerIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          sweepLayer_ = new java.util.ArrayList<java.lang.Integer>(sweepLayer_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 sweepLayer = 1;</code>
       *
       * <pre>
       * 扫荡关卡列表
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getSweepLayerList() {
        return java.util.Collections.unmodifiableList(sweepLayer_);
      }
      /**
       * <code>repeated int32 sweepLayer = 1;</code>
       *
       * <pre>
       * 扫荡关卡列表
       * </pre>
       */
      public int getSweepLayerCount() {
        return sweepLayer_.size();
      }
      /**
       * <code>repeated int32 sweepLayer = 1;</code>
       *
       * <pre>
       * 扫荡关卡列表
       * </pre>
       */
      public int getSweepLayer(int index) {
        return sweepLayer_.get(index);
      }
      /**
       * <code>repeated int32 sweepLayer = 1;</code>
       *
       * <pre>
       * 扫荡关卡列表
       * </pre>
       */
      public Builder setSweepLayer(
          int index, int value) {
        ensureSweepLayerIsMutable();
        sweepLayer_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 sweepLayer = 1;</code>
       *
       * <pre>
       * 扫荡关卡列表
       * </pre>
       */
      public Builder addSweepLayer(int value) {
        ensureSweepLayerIsMutable();
        sweepLayer_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 sweepLayer = 1;</code>
       *
       * <pre>
       * 扫荡关卡列表
       * </pre>
       */
      public Builder addAllSweepLayer(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSweepLayerIsMutable();
        super.addAll(values, sweepLayer_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 sweepLayer = 1;</code>
       *
       * <pre>
       * 扫荡关卡列表
       * </pre>
       */
      public Builder clearSweepLayer() {
        sweepLayer_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // required int32 stopLayer = 2;
      private int stopLayer_ ;
      /**
       * <code>required int32 stopLayer = 2;</code>
       *
       * <pre>
       * 扫荡至某关终止
       * </pre>
       */
      public boolean hasStopLayer() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 stopLayer = 2;</code>
       *
       * <pre>
       * 扫荡至某关终止
       * </pre>
       */
      public int getStopLayer() {
        return stopLayer_;
      }
      /**
       * <code>required int32 stopLayer = 2;</code>
       *
       * <pre>
       * 扫荡至某关终止
       * </pre>
       */
      public Builder setStopLayer(int value) {
        bitField0_ |= 0x00000002;
        stopLayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 stopLayer = 2;</code>
       *
       * <pre>
       * 扫荡至某关终止
       * </pre>
       */
      public Builder clearStopLayer() {
        bitField0_ = (bitField0_ & ~0x00000002);
        stopLayer_ = 0;
        onChanged();
        return this;
      }

      // required int32 timeRemain = 3;
      private int timeRemain_ ;
      /**
       * <code>required int32 timeRemain = 3;</code>
       *
       * <pre>
       * 扫荡剩余时间
       * </pre>
       */
      public boolean hasTimeRemain() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 timeRemain = 3;</code>
       *
       * <pre>
       * 扫荡剩余时间
       * </pre>
       */
      public int getTimeRemain() {
        return timeRemain_;
      }
      /**
       * <code>required int32 timeRemain = 3;</code>
       *
       * <pre>
       * 扫荡剩余时间
       * </pre>
       */
      public Builder setTimeRemain(int value) {
        bitField0_ |= 0x00000004;
        timeRemain_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 timeRemain = 3;</code>
       *
       * <pre>
       * 扫荡剩余时间
       * </pre>
       */
      public Builder clearTimeRemain() {
        bitField0_ = (bitField0_ & ~0x00000004);
        timeRemain_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:HPClimbingTowerSweepSyncS)
    }

    static {
      defaultInstance = new HPClimbingTowerSweepSyncS(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:HPClimbingTowerSweepSyncS)
  }

  public interface HPClimbingTowerChallengeRetOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 challengeResult = 1;
    /**
     * <code>required int32 challengeResult = 1;</code>
     *
     * <pre>
     * 挑战结果（1 lose 2 win）
     * </pre>
     */
    boolean hasChallengeResult();
    /**
     * <code>required int32 challengeResult = 1;</code>
     *
     * <pre>
     * 挑战结果（1 lose 2 win）
     * </pre>
     */
    int getChallengeResult();

    // required .BattleInfo battleInfo = 2;
    /**
     * <code>required .BattleInfo battleInfo = 2;</code>
     *
     * <pre>
     * 战斗信息
     * </pre>
     */
    boolean hasBattleInfo();
    /**
     * <code>required .BattleInfo battleInfo = 2;</code>
     *
     * <pre>
     * 战斗信息
     * </pre>
     */
    com.guaji.game.protocol.Battle.BattleInfo getBattleInfo();
    /**
     * <code>required .BattleInfo battleInfo = 2;</code>
     *
     * <pre>
     * 战斗信息
     * </pre>
     */
    com.guaji.game.protocol.Battle.BattleInfoOrBuilder getBattleInfoOrBuilder();

    // required int32 curLayer = 3;
    /**
     * <code>required int32 curLayer = 3;</code>
     *
     * <pre>
     * 当前层
     * </pre>
     */
    boolean hasCurLayer();
    /**
     * <code>required int32 curLayer = 3;</code>
     *
     * <pre>
     * 当前层
     * </pre>
     */
    int getCurLayer();

    // optional .RewardInfo reward = 4;
    /**
     * <code>optional .RewardInfo reward = 4;</code>
     *
     * <pre>
     *挑战奖励
     * </pre>
     */
    boolean hasReward();
    /**
     * <code>optional .RewardInfo reward = 4;</code>
     *
     * <pre>
     *挑战奖励
     * </pre>
     */
    com.guaji.game.protocol.Reward.RewardInfo getReward();
    /**
     * <code>optional .RewardInfo reward = 4;</code>
     *
     * <pre>
     *挑战奖励
     * </pre>
     */
    com.guaji.game.protocol.Reward.RewardInfoOrBuilder getRewardOrBuilder();

    // required int32 challengeNum = 5;
    /**
     * <code>required int32 challengeNum = 5;</code>
     *
     * <pre>
     * 挑战次数
     * </pre>
     */
    boolean hasChallengeNum();
    /**
     * <code>required int32 challengeNum = 5;</code>
     *
     * <pre>
     * 挑战次数
     * </pre>
     */
    int getChallengeNum();
  }
  /**
   * Protobuf type {@code HPClimbingTowerChallengeRet}
   */
  public static final class HPClimbingTowerChallengeRet extends
      com.google.protobuf.GeneratedMessage
      implements HPClimbingTowerChallengeRetOrBuilder {
    // Use HPClimbingTowerChallengeRet.newBuilder() to construct.
    private HPClimbingTowerChallengeRet(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HPClimbingTowerChallengeRet(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HPClimbingTowerChallengeRet defaultInstance;
    public static HPClimbingTowerChallengeRet getDefaultInstance() {
      return defaultInstance;
    }

    public HPClimbingTowerChallengeRet getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HPClimbingTowerChallengeRet(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              challengeResult_ = input.readInt32();
              break;
            }
            case 18: {
              com.guaji.game.protocol.Battle.BattleInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = battleInfo_.toBuilder();
              }
              battleInfo_ = input.readMessage(com.guaji.game.protocol.Battle.BattleInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(battleInfo_);
                battleInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              curLayer_ = input.readInt32();
              break;
            }
            case 34: {
              com.guaji.game.protocol.Reward.RewardInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = reward_.toBuilder();
              }
              reward_ = input.readMessage(com.guaji.game.protocol.Reward.RewardInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(reward_);
                reward_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              challengeNum_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.guaji.game.protocol.ClimbingTower.internal_static_HPClimbingTowerChallengeRet_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.guaji.game.protocol.ClimbingTower.internal_static_HPClimbingTowerChallengeRet_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeRet.class, com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeRet.Builder.class);
    }

    public static com.google.protobuf.Parser<HPClimbingTowerChallengeRet> PARSER =
        new com.google.protobuf.AbstractParser<HPClimbingTowerChallengeRet>() {
      public HPClimbingTowerChallengeRet parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HPClimbingTowerChallengeRet(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HPClimbingTowerChallengeRet> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 challengeResult = 1;
    public static final int CHALLENGERESULT_FIELD_NUMBER = 1;
    private int challengeResult_;
    /**
     * <code>required int32 challengeResult = 1;</code>
     *
     * <pre>
     * 挑战结果（1 lose 2 win）
     * </pre>
     */
    public boolean hasChallengeResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 challengeResult = 1;</code>
     *
     * <pre>
     * 挑战结果（1 lose 2 win）
     * </pre>
     */
    public int getChallengeResult() {
      return challengeResult_;
    }

    // required .BattleInfo battleInfo = 2;
    public static final int BATTLEINFO_FIELD_NUMBER = 2;
    private com.guaji.game.protocol.Battle.BattleInfo battleInfo_;
    /**
     * <code>required .BattleInfo battleInfo = 2;</code>
     *
     * <pre>
     * 战斗信息
     * </pre>
     */
    public boolean hasBattleInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .BattleInfo battleInfo = 2;</code>
     *
     * <pre>
     * 战斗信息
     * </pre>
     */
    public com.guaji.game.protocol.Battle.BattleInfo getBattleInfo() {
      return battleInfo_;
    }
    /**
     * <code>required .BattleInfo battleInfo = 2;</code>
     *
     * <pre>
     * 战斗信息
     * </pre>
     */
    public com.guaji.game.protocol.Battle.BattleInfoOrBuilder getBattleInfoOrBuilder() {
      return battleInfo_;
    }

    // required int32 curLayer = 3;
    public static final int CURLAYER_FIELD_NUMBER = 3;
    private int curLayer_;
    /**
     * <code>required int32 curLayer = 3;</code>
     *
     * <pre>
     * 当前层
     * </pre>
     */
    public boolean hasCurLayer() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 curLayer = 3;</code>
     *
     * <pre>
     * 当前层
     * </pre>
     */
    public int getCurLayer() {
      return curLayer_;
    }

    // optional .RewardInfo reward = 4;
    public static final int REWARD_FIELD_NUMBER = 4;
    private com.guaji.game.protocol.Reward.RewardInfo reward_;
    /**
     * <code>optional .RewardInfo reward = 4;</code>
     *
     * <pre>
     *挑战奖励
     * </pre>
     */
    public boolean hasReward() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .RewardInfo reward = 4;</code>
     *
     * <pre>
     *挑战奖励
     * </pre>
     */
    public com.guaji.game.protocol.Reward.RewardInfo getReward() {
      return reward_;
    }
    /**
     * <code>optional .RewardInfo reward = 4;</code>
     *
     * <pre>
     *挑战奖励
     * </pre>
     */
    public com.guaji.game.protocol.Reward.RewardInfoOrBuilder getRewardOrBuilder() {
      return reward_;
    }

    // required int32 challengeNum = 5;
    public static final int CHALLENGENUM_FIELD_NUMBER = 5;
    private int challengeNum_;
    /**
     * <code>required int32 challengeNum = 5;</code>
     *
     * <pre>
     * 挑战次数
     * </pre>
     */
    public boolean hasChallengeNum() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 challengeNum = 5;</code>
     *
     * <pre>
     * 挑战次数
     * </pre>
     */
    public int getChallengeNum() {
      return challengeNum_;
    }

    private void initFields() {
      challengeResult_ = 0;
      battleInfo_ = com.guaji.game.protocol.Battle.BattleInfo.getDefaultInstance();
      curLayer_ = 0;
      reward_ = com.guaji.game.protocol.Reward.RewardInfo.getDefaultInstance();
      challengeNum_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasChallengeResult()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBattleInfo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCurLayer()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasChallengeNum()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getBattleInfo().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasReward()) {
        if (!getReward().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, challengeResult_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, battleInfo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, curLayer_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, reward_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, challengeNum_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, challengeResult_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, battleInfo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, curLayer_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, reward_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, challengeNum_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeRet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeRet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeRet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeRet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeRet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeRet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeRet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeRet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeRet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeRet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeRet prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code HPClimbingTowerChallengeRet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeRetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.guaji.game.protocol.ClimbingTower.internal_static_HPClimbingTowerChallengeRet_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.guaji.game.protocol.ClimbingTower.internal_static_HPClimbingTowerChallengeRet_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeRet.class, com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeRet.Builder.class);
      }

      // Construct using com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeRet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getBattleInfoFieldBuilder();
          getRewardFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        challengeResult_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (battleInfoBuilder_ == null) {
          battleInfo_ = com.guaji.game.protocol.Battle.BattleInfo.getDefaultInstance();
        } else {
          battleInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        curLayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (rewardBuilder_ == null) {
          reward_ = com.guaji.game.protocol.Reward.RewardInfo.getDefaultInstance();
        } else {
          rewardBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        challengeNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.guaji.game.protocol.ClimbingTower.internal_static_HPClimbingTowerChallengeRet_descriptor;
      }

      public com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeRet getDefaultInstanceForType() {
        return com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeRet.getDefaultInstance();
      }

      public com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeRet build() {
        com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeRet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeRet buildPartial() {
        com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeRet result = new com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeRet(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.challengeResult_ = challengeResult_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (battleInfoBuilder_ == null) {
          result.battleInfo_ = battleInfo_;
        } else {
          result.battleInfo_ = battleInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.curLayer_ = curLayer_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (rewardBuilder_ == null) {
          result.reward_ = reward_;
        } else {
          result.reward_ = rewardBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.challengeNum_ = challengeNum_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeRet) {
          return mergeFrom((com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeRet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeRet other) {
        if (other == com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeRet.getDefaultInstance()) return this;
        if (other.hasChallengeResult()) {
          setChallengeResult(other.getChallengeResult());
        }
        if (other.hasBattleInfo()) {
          mergeBattleInfo(other.getBattleInfo());
        }
        if (other.hasCurLayer()) {
          setCurLayer(other.getCurLayer());
        }
        if (other.hasReward()) {
          mergeReward(other.getReward());
        }
        if (other.hasChallengeNum()) {
          setChallengeNum(other.getChallengeNum());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasChallengeResult()) {
          
          return false;
        }
        if (!hasBattleInfo()) {
          
          return false;
        }
        if (!hasCurLayer()) {
          
          return false;
        }
        if (!hasChallengeNum()) {
          
          return false;
        }
        if (!getBattleInfo().isInitialized()) {
          
          return false;
        }
        if (hasReward()) {
          if (!getReward().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeRet parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeRet) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 challengeResult = 1;
      private int challengeResult_ ;
      /**
       * <code>required int32 challengeResult = 1;</code>
       *
       * <pre>
       * 挑战结果（1 lose 2 win）
       * </pre>
       */
      public boolean hasChallengeResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 challengeResult = 1;</code>
       *
       * <pre>
       * 挑战结果（1 lose 2 win）
       * </pre>
       */
      public int getChallengeResult() {
        return challengeResult_;
      }
      /**
       * <code>required int32 challengeResult = 1;</code>
       *
       * <pre>
       * 挑战结果（1 lose 2 win）
       * </pre>
       */
      public Builder setChallengeResult(int value) {
        bitField0_ |= 0x00000001;
        challengeResult_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 challengeResult = 1;</code>
       *
       * <pre>
       * 挑战结果（1 lose 2 win）
       * </pre>
       */
      public Builder clearChallengeResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        challengeResult_ = 0;
        onChanged();
        return this;
      }

      // required .BattleInfo battleInfo = 2;
      private com.guaji.game.protocol.Battle.BattleInfo battleInfo_ = com.guaji.game.protocol.Battle.BattleInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.guaji.game.protocol.Battle.BattleInfo, com.guaji.game.protocol.Battle.BattleInfo.Builder, com.guaji.game.protocol.Battle.BattleInfoOrBuilder> battleInfoBuilder_;
      /**
       * <code>required .BattleInfo battleInfo = 2;</code>
       *
       * <pre>
       * 战斗信息
       * </pre>
       */
      public boolean hasBattleInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .BattleInfo battleInfo = 2;</code>
       *
       * <pre>
       * 战斗信息
       * </pre>
       */
      public com.guaji.game.protocol.Battle.BattleInfo getBattleInfo() {
        if (battleInfoBuilder_ == null) {
          return battleInfo_;
        } else {
          return battleInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>required .BattleInfo battleInfo = 2;</code>
       *
       * <pre>
       * 战斗信息
       * </pre>
       */
      public Builder setBattleInfo(com.guaji.game.protocol.Battle.BattleInfo value) {
        if (battleInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          battleInfo_ = value;
          onChanged();
        } else {
          battleInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .BattleInfo battleInfo = 2;</code>
       *
       * <pre>
       * 战斗信息
       * </pre>
       */
      public Builder setBattleInfo(
          com.guaji.game.protocol.Battle.BattleInfo.Builder builderForValue) {
        if (battleInfoBuilder_ == null) {
          battleInfo_ = builderForValue.build();
          onChanged();
        } else {
          battleInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .BattleInfo battleInfo = 2;</code>
       *
       * <pre>
       * 战斗信息
       * </pre>
       */
      public Builder mergeBattleInfo(com.guaji.game.protocol.Battle.BattleInfo value) {
        if (battleInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              battleInfo_ != com.guaji.game.protocol.Battle.BattleInfo.getDefaultInstance()) {
            battleInfo_ =
              com.guaji.game.protocol.Battle.BattleInfo.newBuilder(battleInfo_).mergeFrom(value).buildPartial();
          } else {
            battleInfo_ = value;
          }
          onChanged();
        } else {
          battleInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .BattleInfo battleInfo = 2;</code>
       *
       * <pre>
       * 战斗信息
       * </pre>
       */
      public Builder clearBattleInfo() {
        if (battleInfoBuilder_ == null) {
          battleInfo_ = com.guaji.game.protocol.Battle.BattleInfo.getDefaultInstance();
          onChanged();
        } else {
          battleInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .BattleInfo battleInfo = 2;</code>
       *
       * <pre>
       * 战斗信息
       * </pre>
       */
      public com.guaji.game.protocol.Battle.BattleInfo.Builder getBattleInfoBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getBattleInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>required .BattleInfo battleInfo = 2;</code>
       *
       * <pre>
       * 战斗信息
       * </pre>
       */
      public com.guaji.game.protocol.Battle.BattleInfoOrBuilder getBattleInfoOrBuilder() {
        if (battleInfoBuilder_ != null) {
          return battleInfoBuilder_.getMessageOrBuilder();
        } else {
          return battleInfo_;
        }
      }
      /**
       * <code>required .BattleInfo battleInfo = 2;</code>
       *
       * <pre>
       * 战斗信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.guaji.game.protocol.Battle.BattleInfo, com.guaji.game.protocol.Battle.BattleInfo.Builder, com.guaji.game.protocol.Battle.BattleInfoOrBuilder> 
          getBattleInfoFieldBuilder() {
        if (battleInfoBuilder_ == null) {
          battleInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.guaji.game.protocol.Battle.BattleInfo, com.guaji.game.protocol.Battle.BattleInfo.Builder, com.guaji.game.protocol.Battle.BattleInfoOrBuilder>(
                  battleInfo_,
                  getParentForChildren(),
                  isClean());
          battleInfo_ = null;
        }
        return battleInfoBuilder_;
      }

      // required int32 curLayer = 3;
      private int curLayer_ ;
      /**
       * <code>required int32 curLayer = 3;</code>
       *
       * <pre>
       * 当前层
       * </pre>
       */
      public boolean hasCurLayer() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 curLayer = 3;</code>
       *
       * <pre>
       * 当前层
       * </pre>
       */
      public int getCurLayer() {
        return curLayer_;
      }
      /**
       * <code>required int32 curLayer = 3;</code>
       *
       * <pre>
       * 当前层
       * </pre>
       */
      public Builder setCurLayer(int value) {
        bitField0_ |= 0x00000004;
        curLayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 curLayer = 3;</code>
       *
       * <pre>
       * 当前层
       * </pre>
       */
      public Builder clearCurLayer() {
        bitField0_ = (bitField0_ & ~0x00000004);
        curLayer_ = 0;
        onChanged();
        return this;
      }

      // optional .RewardInfo reward = 4;
      private com.guaji.game.protocol.Reward.RewardInfo reward_ = com.guaji.game.protocol.Reward.RewardInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.guaji.game.protocol.Reward.RewardInfo, com.guaji.game.protocol.Reward.RewardInfo.Builder, com.guaji.game.protocol.Reward.RewardInfoOrBuilder> rewardBuilder_;
      /**
       * <code>optional .RewardInfo reward = 4;</code>
       *
       * <pre>
       *挑战奖励
       * </pre>
       */
      public boolean hasReward() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .RewardInfo reward = 4;</code>
       *
       * <pre>
       *挑战奖励
       * </pre>
       */
      public com.guaji.game.protocol.Reward.RewardInfo getReward() {
        if (rewardBuilder_ == null) {
          return reward_;
        } else {
          return rewardBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .RewardInfo reward = 4;</code>
       *
       * <pre>
       *挑战奖励
       * </pre>
       */
      public Builder setReward(com.guaji.game.protocol.Reward.RewardInfo value) {
        if (rewardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          reward_ = value;
          onChanged();
        } else {
          rewardBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .RewardInfo reward = 4;</code>
       *
       * <pre>
       *挑战奖励
       * </pre>
       */
      public Builder setReward(
          com.guaji.game.protocol.Reward.RewardInfo.Builder builderForValue) {
        if (rewardBuilder_ == null) {
          reward_ = builderForValue.build();
          onChanged();
        } else {
          rewardBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .RewardInfo reward = 4;</code>
       *
       * <pre>
       *挑战奖励
       * </pre>
       */
      public Builder mergeReward(com.guaji.game.protocol.Reward.RewardInfo value) {
        if (rewardBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              reward_ != com.guaji.game.protocol.Reward.RewardInfo.getDefaultInstance()) {
            reward_ =
              com.guaji.game.protocol.Reward.RewardInfo.newBuilder(reward_).mergeFrom(value).buildPartial();
          } else {
            reward_ = value;
          }
          onChanged();
        } else {
          rewardBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .RewardInfo reward = 4;</code>
       *
       * <pre>
       *挑战奖励
       * </pre>
       */
      public Builder clearReward() {
        if (rewardBuilder_ == null) {
          reward_ = com.guaji.game.protocol.Reward.RewardInfo.getDefaultInstance();
          onChanged();
        } else {
          rewardBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .RewardInfo reward = 4;</code>
       *
       * <pre>
       *挑战奖励
       * </pre>
       */
      public com.guaji.game.protocol.Reward.RewardInfo.Builder getRewardBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getRewardFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .RewardInfo reward = 4;</code>
       *
       * <pre>
       *挑战奖励
       * </pre>
       */
      public com.guaji.game.protocol.Reward.RewardInfoOrBuilder getRewardOrBuilder() {
        if (rewardBuilder_ != null) {
          return rewardBuilder_.getMessageOrBuilder();
        } else {
          return reward_;
        }
      }
      /**
       * <code>optional .RewardInfo reward = 4;</code>
       *
       * <pre>
       *挑战奖励
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.guaji.game.protocol.Reward.RewardInfo, com.guaji.game.protocol.Reward.RewardInfo.Builder, com.guaji.game.protocol.Reward.RewardInfoOrBuilder> 
          getRewardFieldBuilder() {
        if (rewardBuilder_ == null) {
          rewardBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.guaji.game.protocol.Reward.RewardInfo, com.guaji.game.protocol.Reward.RewardInfo.Builder, com.guaji.game.protocol.Reward.RewardInfoOrBuilder>(
                  reward_,
                  getParentForChildren(),
                  isClean());
          reward_ = null;
        }
        return rewardBuilder_;
      }

      // required int32 challengeNum = 5;
      private int challengeNum_ ;
      /**
       * <code>required int32 challengeNum = 5;</code>
       *
       * <pre>
       * 挑战次数
       * </pre>
       */
      public boolean hasChallengeNum() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 challengeNum = 5;</code>
       *
       * <pre>
       * 挑战次数
       * </pre>
       */
      public int getChallengeNum() {
        return challengeNum_;
      }
      /**
       * <code>required int32 challengeNum = 5;</code>
       *
       * <pre>
       * 挑战次数
       * </pre>
       */
      public Builder setChallengeNum(int value) {
        bitField0_ |= 0x00000010;
        challengeNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 challengeNum = 5;</code>
       *
       * <pre>
       * 挑战次数
       * </pre>
       */
      public Builder clearChallengeNum() {
        bitField0_ = (bitField0_ & ~0x00000010);
        challengeNum_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:HPClimbingTowerChallengeRet)
    }

    static {
      defaultInstance = new HPClimbingTowerChallengeRet(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:HPClimbingTowerChallengeRet)
  }

  public interface HPClimbingTowerInfoReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code HPClimbingTowerInfoReq}
   *
   * <pre>
   * 爬塔信息请求
   * </pre>
   */
  public static final class HPClimbingTowerInfoReq extends
      com.google.protobuf.GeneratedMessage
      implements HPClimbingTowerInfoReqOrBuilder {
    // Use HPClimbingTowerInfoReq.newBuilder() to construct.
    private HPClimbingTowerInfoReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HPClimbingTowerInfoReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HPClimbingTowerInfoReq defaultInstance;
    public static HPClimbingTowerInfoReq getDefaultInstance() {
      return defaultInstance;
    }

    public HPClimbingTowerInfoReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HPClimbingTowerInfoReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.guaji.game.protocol.ClimbingTower.internal_static_HPClimbingTowerInfoReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.guaji.game.protocol.ClimbingTower.internal_static_HPClimbingTowerInfoReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.guaji.game.protocol.ClimbingTower.HPClimbingTowerInfoReq.class, com.guaji.game.protocol.ClimbingTower.HPClimbingTowerInfoReq.Builder.class);
    }

    public static com.google.protobuf.Parser<HPClimbingTowerInfoReq> PARSER =
        new com.google.protobuf.AbstractParser<HPClimbingTowerInfoReq>() {
      public HPClimbingTowerInfoReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HPClimbingTowerInfoReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HPClimbingTowerInfoReq> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerInfoReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerInfoReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerInfoReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerInfoReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerInfoReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerInfoReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerInfoReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerInfoReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerInfoReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerInfoReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.guaji.game.protocol.ClimbingTower.HPClimbingTowerInfoReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code HPClimbingTowerInfoReq}
     *
     * <pre>
     * 爬塔信息请求
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.guaji.game.protocol.ClimbingTower.HPClimbingTowerInfoReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.guaji.game.protocol.ClimbingTower.internal_static_HPClimbingTowerInfoReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.guaji.game.protocol.ClimbingTower.internal_static_HPClimbingTowerInfoReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.guaji.game.protocol.ClimbingTower.HPClimbingTowerInfoReq.class, com.guaji.game.protocol.ClimbingTower.HPClimbingTowerInfoReq.Builder.class);
      }

      // Construct using com.guaji.game.protocol.ClimbingTower.HPClimbingTowerInfoReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.guaji.game.protocol.ClimbingTower.internal_static_HPClimbingTowerInfoReq_descriptor;
      }

      public com.guaji.game.protocol.ClimbingTower.HPClimbingTowerInfoReq getDefaultInstanceForType() {
        return com.guaji.game.protocol.ClimbingTower.HPClimbingTowerInfoReq.getDefaultInstance();
      }

      public com.guaji.game.protocol.ClimbingTower.HPClimbingTowerInfoReq build() {
        com.guaji.game.protocol.ClimbingTower.HPClimbingTowerInfoReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.guaji.game.protocol.ClimbingTower.HPClimbingTowerInfoReq buildPartial() {
        com.guaji.game.protocol.ClimbingTower.HPClimbingTowerInfoReq result = new com.guaji.game.protocol.ClimbingTower.HPClimbingTowerInfoReq(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.guaji.game.protocol.ClimbingTower.HPClimbingTowerInfoReq) {
          return mergeFrom((com.guaji.game.protocol.ClimbingTower.HPClimbingTowerInfoReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.guaji.game.protocol.ClimbingTower.HPClimbingTowerInfoReq other) {
        if (other == com.guaji.game.protocol.ClimbingTower.HPClimbingTowerInfoReq.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.guaji.game.protocol.ClimbingTower.HPClimbingTowerInfoReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.guaji.game.protocol.ClimbingTower.HPClimbingTowerInfoReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:HPClimbingTowerInfoReq)
    }

    static {
      defaultInstance = new HPClimbingTowerInfoReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:HPClimbingTowerInfoReq)
  }

  public interface HPClimbingTowerListReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code HPClimbingTowerListReq}
   *
   * <pre>
   * 爬塔排行榜请求
   * </pre>
   */
  public static final class HPClimbingTowerListReq extends
      com.google.protobuf.GeneratedMessage
      implements HPClimbingTowerListReqOrBuilder {
    // Use HPClimbingTowerListReq.newBuilder() to construct.
    private HPClimbingTowerListReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HPClimbingTowerListReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HPClimbingTowerListReq defaultInstance;
    public static HPClimbingTowerListReq getDefaultInstance() {
      return defaultInstance;
    }

    public HPClimbingTowerListReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HPClimbingTowerListReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.guaji.game.protocol.ClimbingTower.internal_static_HPClimbingTowerListReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.guaji.game.protocol.ClimbingTower.internal_static_HPClimbingTowerListReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListReq.class, com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListReq.Builder.class);
    }

    public static com.google.protobuf.Parser<HPClimbingTowerListReq> PARSER =
        new com.google.protobuf.AbstractParser<HPClimbingTowerListReq>() {
      public HPClimbingTowerListReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HPClimbingTowerListReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HPClimbingTowerListReq> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code HPClimbingTowerListReq}
     *
     * <pre>
     * 爬塔排行榜请求
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.guaji.game.protocol.ClimbingTower.internal_static_HPClimbingTowerListReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.guaji.game.protocol.ClimbingTower.internal_static_HPClimbingTowerListReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListReq.class, com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListReq.Builder.class);
      }

      // Construct using com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.guaji.game.protocol.ClimbingTower.internal_static_HPClimbingTowerListReq_descriptor;
      }

      public com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListReq getDefaultInstanceForType() {
        return com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListReq.getDefaultInstance();
      }

      public com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListReq build() {
        com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListReq buildPartial() {
        com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListReq result = new com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListReq(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListReq) {
          return mergeFrom((com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListReq other) {
        if (other == com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListReq.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.guaji.game.protocol.ClimbingTower.HPClimbingTowerListReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:HPClimbingTowerListReq)
    }

    static {
      defaultInstance = new HPClimbingTowerListReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:HPClimbingTowerListReq)
  }

  public interface HPClimbingTowerChallengeReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 challengeLayer = 1;
    /**
     * <code>required int32 challengeLayer = 1;</code>
     *
     * <pre>
     * 挑战的层数
     * </pre>
     */
    boolean hasChallengeLayer();
    /**
     * <code>required int32 challengeLayer = 1;</code>
     *
     * <pre>
     * 挑战的层数
     * </pre>
     */
    int getChallengeLayer();
  }
  /**
   * Protobuf type {@code HPClimbingTowerChallengeReq}
   *
   * <pre>
   * 爬塔挑战请求
   * </pre>
   */
  public static final class HPClimbingTowerChallengeReq extends
      com.google.protobuf.GeneratedMessage
      implements HPClimbingTowerChallengeReqOrBuilder {
    // Use HPClimbingTowerChallengeReq.newBuilder() to construct.
    private HPClimbingTowerChallengeReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HPClimbingTowerChallengeReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HPClimbingTowerChallengeReq defaultInstance;
    public static HPClimbingTowerChallengeReq getDefaultInstance() {
      return defaultInstance;
    }

    public HPClimbingTowerChallengeReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HPClimbingTowerChallengeReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              challengeLayer_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.guaji.game.protocol.ClimbingTower.internal_static_HPClimbingTowerChallengeReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.guaji.game.protocol.ClimbingTower.internal_static_HPClimbingTowerChallengeReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeReq.class, com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeReq.Builder.class);
    }

    public static com.google.protobuf.Parser<HPClimbingTowerChallengeReq> PARSER =
        new com.google.protobuf.AbstractParser<HPClimbingTowerChallengeReq>() {
      public HPClimbingTowerChallengeReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HPClimbingTowerChallengeReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HPClimbingTowerChallengeReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 challengeLayer = 1;
    public static final int CHALLENGELAYER_FIELD_NUMBER = 1;
    private int challengeLayer_;
    /**
     * <code>required int32 challengeLayer = 1;</code>
     *
     * <pre>
     * 挑战的层数
     * </pre>
     */
    public boolean hasChallengeLayer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 challengeLayer = 1;</code>
     *
     * <pre>
     * 挑战的层数
     * </pre>
     */
    public int getChallengeLayer() {
      return challengeLayer_;
    }

    private void initFields() {
      challengeLayer_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasChallengeLayer()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, challengeLayer_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, challengeLayer_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code HPClimbingTowerChallengeReq}
     *
     * <pre>
     * 爬塔挑战请求
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.guaji.game.protocol.ClimbingTower.internal_static_HPClimbingTowerChallengeReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.guaji.game.protocol.ClimbingTower.internal_static_HPClimbingTowerChallengeReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeReq.class, com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeReq.Builder.class);
      }

      // Construct using com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        challengeLayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.guaji.game.protocol.ClimbingTower.internal_static_HPClimbingTowerChallengeReq_descriptor;
      }

      public com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeReq getDefaultInstanceForType() {
        return com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeReq.getDefaultInstance();
      }

      public com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeReq build() {
        com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeReq buildPartial() {
        com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeReq result = new com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.challengeLayer_ = challengeLayer_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeReq) {
          return mergeFrom((com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeReq other) {
        if (other == com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeReq.getDefaultInstance()) return this;
        if (other.hasChallengeLayer()) {
          setChallengeLayer(other.getChallengeLayer());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasChallengeLayer()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.guaji.game.protocol.ClimbingTower.HPClimbingTowerChallengeReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 challengeLayer = 1;
      private int challengeLayer_ ;
      /**
       * <code>required int32 challengeLayer = 1;</code>
       *
       * <pre>
       * 挑战的层数
       * </pre>
       */
      public boolean hasChallengeLayer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 challengeLayer = 1;</code>
       *
       * <pre>
       * 挑战的层数
       * </pre>
       */
      public int getChallengeLayer() {
        return challengeLayer_;
      }
      /**
       * <code>required int32 challengeLayer = 1;</code>
       *
       * <pre>
       * 挑战的层数
       * </pre>
       */
      public Builder setChallengeLayer(int value) {
        bitField0_ |= 0x00000001;
        challengeLayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 challengeLayer = 1;</code>
       *
       * <pre>
       * 挑战的层数
       * </pre>
       */
      public Builder clearChallengeLayer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        challengeLayer_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:HPClimbingTowerChallengeReq)
    }

    static {
      defaultInstance = new HPClimbingTowerChallengeReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:HPClimbingTowerChallengeReq)
  }

  public interface HPClimbingTowerSweepReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code HPClimbingTowerSweepReq}
   *
   * <pre>
   * 爬塔扫荡请求
   * </pre>
   */
  public static final class HPClimbingTowerSweepReq extends
      com.google.protobuf.GeneratedMessage
      implements HPClimbingTowerSweepReqOrBuilder {
    // Use HPClimbingTowerSweepReq.newBuilder() to construct.
    private HPClimbingTowerSweepReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HPClimbingTowerSweepReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HPClimbingTowerSweepReq defaultInstance;
    public static HPClimbingTowerSweepReq getDefaultInstance() {
      return defaultInstance;
    }

    public HPClimbingTowerSweepReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HPClimbingTowerSweepReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.guaji.game.protocol.ClimbingTower.internal_static_HPClimbingTowerSweepReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.guaji.game.protocol.ClimbingTower.internal_static_HPClimbingTowerSweepReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepReq.class, com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepReq.Builder.class);
    }

    public static com.google.protobuf.Parser<HPClimbingTowerSweepReq> PARSER =
        new com.google.protobuf.AbstractParser<HPClimbingTowerSweepReq>() {
      public HPClimbingTowerSweepReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HPClimbingTowerSweepReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HPClimbingTowerSweepReq> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code HPClimbingTowerSweepReq}
     *
     * <pre>
     * 爬塔扫荡请求
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.guaji.game.protocol.ClimbingTower.internal_static_HPClimbingTowerSweepReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.guaji.game.protocol.ClimbingTower.internal_static_HPClimbingTowerSweepReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepReq.class, com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepReq.Builder.class);
      }

      // Construct using com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.guaji.game.protocol.ClimbingTower.internal_static_HPClimbingTowerSweepReq_descriptor;
      }

      public com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepReq getDefaultInstanceForType() {
        return com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepReq.getDefaultInstance();
      }

      public com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepReq build() {
        com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepReq buildPartial() {
        com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepReq result = new com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepReq(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepReq) {
          return mergeFrom((com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepReq other) {
        if (other == com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepReq.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.guaji.game.protocol.ClimbingTower.HPClimbingTowerSweepReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:HPClimbingTowerSweepReq)
    }

    static {
      defaultInstance = new HPClimbingTowerSweepReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:HPClimbingTowerSweepReq)
  }

  public interface HPClimbingTowerResetReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code HPClimbingTowerResetReq}
   *
   * <pre>
   * 爬塔重置请求
   * </pre>
   */
  public static final class HPClimbingTowerResetReq extends
      com.google.protobuf.GeneratedMessage
      implements HPClimbingTowerResetReqOrBuilder {
    // Use HPClimbingTowerResetReq.newBuilder() to construct.
    private HPClimbingTowerResetReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HPClimbingTowerResetReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HPClimbingTowerResetReq defaultInstance;
    public static HPClimbingTowerResetReq getDefaultInstance() {
      return defaultInstance;
    }

    public HPClimbingTowerResetReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HPClimbingTowerResetReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.guaji.game.protocol.ClimbingTower.internal_static_HPClimbingTowerResetReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.guaji.game.protocol.ClimbingTower.internal_static_HPClimbingTowerResetReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.guaji.game.protocol.ClimbingTower.HPClimbingTowerResetReq.class, com.guaji.game.protocol.ClimbingTower.HPClimbingTowerResetReq.Builder.class);
    }

    public static com.google.protobuf.Parser<HPClimbingTowerResetReq> PARSER =
        new com.google.protobuf.AbstractParser<HPClimbingTowerResetReq>() {
      public HPClimbingTowerResetReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HPClimbingTowerResetReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HPClimbingTowerResetReq> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerResetReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerResetReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerResetReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerResetReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerResetReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerResetReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerResetReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerResetReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerResetReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.guaji.game.protocol.ClimbingTower.HPClimbingTowerResetReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.guaji.game.protocol.ClimbingTower.HPClimbingTowerResetReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code HPClimbingTowerResetReq}
     *
     * <pre>
     * 爬塔重置请求
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.guaji.game.protocol.ClimbingTower.HPClimbingTowerResetReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.guaji.game.protocol.ClimbingTower.internal_static_HPClimbingTowerResetReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.guaji.game.protocol.ClimbingTower.internal_static_HPClimbingTowerResetReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.guaji.game.protocol.ClimbingTower.HPClimbingTowerResetReq.class, com.guaji.game.protocol.ClimbingTower.HPClimbingTowerResetReq.Builder.class);
      }

      // Construct using com.guaji.game.protocol.ClimbingTower.HPClimbingTowerResetReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.guaji.game.protocol.ClimbingTower.internal_static_HPClimbingTowerResetReq_descriptor;
      }

      public com.guaji.game.protocol.ClimbingTower.HPClimbingTowerResetReq getDefaultInstanceForType() {
        return com.guaji.game.protocol.ClimbingTower.HPClimbingTowerResetReq.getDefaultInstance();
      }

      public com.guaji.game.protocol.ClimbingTower.HPClimbingTowerResetReq build() {
        com.guaji.game.protocol.ClimbingTower.HPClimbingTowerResetReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.guaji.game.protocol.ClimbingTower.HPClimbingTowerResetReq buildPartial() {
        com.guaji.game.protocol.ClimbingTower.HPClimbingTowerResetReq result = new com.guaji.game.protocol.ClimbingTower.HPClimbingTowerResetReq(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.guaji.game.protocol.ClimbingTower.HPClimbingTowerResetReq) {
          return mergeFrom((com.guaji.game.protocol.ClimbingTower.HPClimbingTowerResetReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.guaji.game.protocol.ClimbingTower.HPClimbingTowerResetReq other) {
        if (other == com.guaji.game.protocol.ClimbingTower.HPClimbingTowerResetReq.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.guaji.game.protocol.ClimbingTower.HPClimbingTowerResetReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.guaji.game.protocol.ClimbingTower.HPClimbingTowerResetReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:HPClimbingTowerResetReq)
    }

    static {
      defaultInstance = new HPClimbingTowerResetReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:HPClimbingTowerResetReq)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ClimbingTowerItemInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ClimbingTowerItemInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_PassLayerItemInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PassLayerItemInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ClimbingTowerPlayerInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ClimbingTowerPlayerInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_HPClimbingTowerListSyncS_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_HPClimbingTowerListSyncS_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_HPClimbingTowerSweepSyncS_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_HPClimbingTowerSweepSyncS_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_HPClimbingTowerChallengeRet_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_HPClimbingTowerChallengeRet_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_HPClimbingTowerInfoReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_HPClimbingTowerInfoReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_HPClimbingTowerListReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_HPClimbingTowerListReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_HPClimbingTowerChallengeReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_HPClimbingTowerChallengeReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_HPClimbingTowerSweepReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_HPClimbingTowerSweepReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_HPClimbingTowerResetReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_HPClimbingTowerResetReq_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023ClimbingTower.proto\032\014Battle.proto\032\014Rew" +
      "ard.proto\"\265\001\n\025ClimbingTowerItemInfo\022\021\n\tc" +
      "fgItemId\030\001 \002(\005\022\020\n\010playerId\030\002 \001(\005\022\r\n\005leve" +
      "l\030\003 \002(\005\022\014\n\004name\030\004 \002(\t\022\014\n\004prof\030\005 \002(\005\022\014\n\004r" +
      "ank\030\006 \002(\005\022\022\n\nfightValue\030\007 \002(\005\022\030\n\020histori" +
      "cHighStar\030\010 \002(\005\022\020\n\010headIcon\030\t \001(\005\"F\n\021Pas" +
      "sLayerItemInfo\022\017\n\007layerId\030\001 \002(\005\022\014\n\004star\030" +
      "\002 \002(\005\022\022\n\nchallTimes\030\003 \002(\005\"\332\001\n\027ClimbingTo" +
      "werPlayerInfo\022\021\n\ttotalStar\030\001 \002(\005\022$\n\010curL" +
      "ayer\030\002 \002(\0132\022.PassLayerItemInfo\022\030\n\020histor",
      "icHighStar\030\003 \002(\005\022\027\n\017todayResetTimes\030\004 \002(" +
      "\005\022\022\n\nsweepTimes\030\005 \002(\005\022&\n\npassLayers\030\006 \003(" +
      "\0132\022.PassLayerItemInfo\022\027\n\017sweepTimeRemain" +
      "\030\007 \002(\005\"g\n\030HPClimbingTowerListSyncS\022$\n\004se" +
      "lf\030\001 \002(\0132\026.ClimbingTowerItemInfo\022%\n\005rank" +
      "s\030\002 \003(\0132\026.ClimbingTowerItemInfo\"V\n\031HPCli" +
      "mbingTowerSweepSyncS\022\022\n\nsweepLayer\030\001 \003(\005" +
      "\022\021\n\tstopLayer\030\002 \002(\005\022\022\n\ntimeRemain\030\003 \002(\005\"" +
      "\234\001\n\033HPClimbingTowerChallengeRet\022\027\n\017chall" +
      "engeResult\030\001 \002(\005\022\037\n\nbattleInfo\030\002 \002(\0132\013.B",
      "attleInfo\022\020\n\010curLayer\030\003 \002(\005\022\033\n\006reward\030\004 " +
      "\001(\0132\013.RewardInfo\022\024\n\014challengeNum\030\005 \002(\005\"\030" +
      "\n\026HPClimbingTowerInfoReq\"\030\n\026HPClimbingTo" +
      "werListReq\"5\n\033HPClimbingTowerChallengeRe" +
      "q\022\026\n\016challengeLayer\030\001 \002(\005\"\031\n\027HPClimbingT" +
      "owerSweepReq\"\031\n\027HPClimbingTowerResetReqB" +
      "\031\n\027com.guaji.game.protocol"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_ClimbingTowerItemInfo_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_ClimbingTowerItemInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ClimbingTowerItemInfo_descriptor,
              new java.lang.String[] { "CfgItemId", "PlayerId", "Level", "Name", "Prof", "Rank", "FightValue", "HistoricHighStar", "HeadIcon", });
          internal_static_PassLayerItemInfo_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_PassLayerItemInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_PassLayerItemInfo_descriptor,
              new java.lang.String[] { "LayerId", "Star", "ChallTimes", });
          internal_static_ClimbingTowerPlayerInfo_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_ClimbingTowerPlayerInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ClimbingTowerPlayerInfo_descriptor,
              new java.lang.String[] { "TotalStar", "CurLayer", "HistoricHighStar", "TodayResetTimes", "SweepTimes", "PassLayers", "SweepTimeRemain", });
          internal_static_HPClimbingTowerListSyncS_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_HPClimbingTowerListSyncS_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_HPClimbingTowerListSyncS_descriptor,
              new java.lang.String[] { "Self", "Ranks", });
          internal_static_HPClimbingTowerSweepSyncS_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_HPClimbingTowerSweepSyncS_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_HPClimbingTowerSweepSyncS_descriptor,
              new java.lang.String[] { "SweepLayer", "StopLayer", "TimeRemain", });
          internal_static_HPClimbingTowerChallengeRet_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_HPClimbingTowerChallengeRet_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_HPClimbingTowerChallengeRet_descriptor,
              new java.lang.String[] { "ChallengeResult", "BattleInfo", "CurLayer", "Reward", "ChallengeNum", });
          internal_static_HPClimbingTowerInfoReq_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_HPClimbingTowerInfoReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_HPClimbingTowerInfoReq_descriptor,
              new java.lang.String[] { });
          internal_static_HPClimbingTowerListReq_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_HPClimbingTowerListReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_HPClimbingTowerListReq_descriptor,
              new java.lang.String[] { });
          internal_static_HPClimbingTowerChallengeReq_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_HPClimbingTowerChallengeReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_HPClimbingTowerChallengeReq_descriptor,
              new java.lang.String[] { "ChallengeLayer", });
          internal_static_HPClimbingTowerSweepReq_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_HPClimbingTowerSweepReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_HPClimbingTowerSweepReq_descriptor,
              new java.lang.String[] { });
          internal_static_HPClimbingTowerResetReq_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_HPClimbingTowerResetReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_HPClimbingTowerResetReq_descriptor,
              new java.lang.String[] { });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.guaji.game.protocol.Battle.getDescriptor(),
          com.guaji.game.protocol.Reward.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
